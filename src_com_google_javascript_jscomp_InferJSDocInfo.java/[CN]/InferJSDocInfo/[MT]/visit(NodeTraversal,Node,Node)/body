{
  JSDocInfo docInfo;
switch (n.getType()) {
case Token.FUNCTION:
    JSType fnType=n.getJSType();
  if (fnType == null) {
    break;
  }
docInfo=n.getJSDocInfo();
if (docInfo == null && (parent.getType() == Token.ASSIGN || parent.getType() == Token.NAME)) {
docInfo=parent.getJSDocInfo();
if (docInfo == null) {
  Node gramps=parent.getParent();
  if (gramps != null && gramps.getType() == Token.VAR && gramps.hasOneChild()) {
    docInfo=gramps.getJSDocInfo();
  }
}
}
if (docInfo != null && fnType instanceof FunctionType) {
FunctionType maybeCtorType=(FunctionType)fnType;
maybeCtorType.setJSDocInfo(docInfo);
if (maybeCtorType.isConstructor()) {
maybeCtorType.getInstanceType().setJSDocInfo(docInfo);
}
}
break;
case Token.GETPROP:
if (NodeUtil.isExpressionNode(parent) || (parent.getType() == Token.ASSIGN && parent.getFirstChild() == n)) {
docInfo=n.getJSDocInfo();
if (docInfo == null) {
docInfo=parent.getJSDocInfo();
}
if (docInfo != null) {
JSType lhsType=n.getFirstChild().getJSType();
if (lhsType != null && lhsType instanceof ObjectType) {
ObjectType objectType=(ObjectType)lhsType;
objectType.setPropertyJSDocInfo(n.getLastChild().getString(),docInfo,inExterns);
}
}
}
break;
}
}
