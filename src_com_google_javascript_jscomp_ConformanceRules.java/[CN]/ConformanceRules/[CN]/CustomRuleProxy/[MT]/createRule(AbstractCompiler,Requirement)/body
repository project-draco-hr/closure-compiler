{
  try {
    Class<Rule> custom=getRuleClass(requirement.getJavaClass());
    Constructor<?> ctor=getRuleConstructor(custom);
    Rule rule;
    try {
      rule=(Rule)(ctor.newInstance(compiler,requirement));
    }
 catch (    InvocationTargetException e) {
      Throwable cause=e.getCause();
      if (cause instanceof InvalidRequirementSpec) {
        throw (InvalidRequirementSpec)cause;
      }
      throw Throwables.propagate(cause);
    }
    return rule;
  }
 catch (  InstantiationException|IllegalAccessException|IllegalArgumentException e) {
    throw new RuntimeException(e);
  }
}
