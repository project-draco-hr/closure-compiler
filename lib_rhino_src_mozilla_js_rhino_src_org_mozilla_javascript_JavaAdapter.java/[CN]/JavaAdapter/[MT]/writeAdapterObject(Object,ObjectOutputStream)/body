{
  Class<?> cl=javaObject.getClass();
  out.writeObject(cl.getSuperclass().getName());
  Class<?>[] interfaces=cl.getInterfaces();
  String[] interfaceNames=new String[interfaces.length];
  for (int i=0; i < interfaces.length; i++)   interfaceNames[i]=interfaces[i].getName();
  out.writeObject(interfaceNames);
  try {
    Object delegee=cl.getField("delegee").get(javaObject);
    out.writeObject(delegee);
    return;
  }
 catch (  IllegalAccessException e) {
  }
catch (  NoSuchFieldException e) {
  }
  throw new IOException();
}
