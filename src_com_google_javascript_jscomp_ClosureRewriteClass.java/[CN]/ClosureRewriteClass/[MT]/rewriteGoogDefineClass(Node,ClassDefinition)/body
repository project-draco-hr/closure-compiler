{
  Node block=IR.block();
  if (exprRoot.isVar()) {
    block.addChildToBack(IR.var(cls.name.cloneTree(),cls.constructor.value).srcref(exprRoot).setJSDocInfo(cls.constructor.info));
  }
 else {
    block.addChildToBack(fixupSrcref(IR.exprResult(IR.assign(cls.name.cloneTree(),cls.constructor.value).srcref(exprRoot).setJSDocInfo(cls.constructor.info).srcref(exprRoot))).setJSDocInfo(cls.constructor.info));
  }
  if (cls.superClass != null) {
    block.addChildToBack(fixupSrcref(IR.exprResult(IR.call(NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(),"goog.inherits").srcrefTree(cls.superClass),cls.name.cloneTree(),cls.superClass.cloneTree()).srcref(cls.superClass))));
  }
  for (  MemberDefinition def : cls.staticProps) {
    block.addChildToBack(fixupSrcref(IR.exprResult(fixupSrcref(IR.assign(IR.getprop(cls.name.cloneTree(),IR.string(def.name.getString()).srcref(def.name)).srcref(def.name),def.value)).setJSDocInfo(def.info))));
  }
  for (  MemberDefinition def : cls.props) {
    block.addChildToBack(fixupSrcref(IR.exprResult(fixupSrcref(IR.assign(IR.getprop(fixupSrcref(IR.getprop(cls.name.cloneTree(),IR.string("prototype").srcref(def.name))),IR.string(def.name.getString()).srcref(def.name)).srcref(def.name),def.value)).setJSDocInfo(def.info))));
  }
  for (  Node modifier : cls.modifiers) {
    block.addChildToBack(IR.exprResult(fixupFreeCall(IR.call(modifier,cls.name.cloneTree()).srcref(modifier))).srcref(modifier));
  }
  exprRoot.getParent().replaceChild(exprRoot,block);
  compiler.reportCodeChange();
}
