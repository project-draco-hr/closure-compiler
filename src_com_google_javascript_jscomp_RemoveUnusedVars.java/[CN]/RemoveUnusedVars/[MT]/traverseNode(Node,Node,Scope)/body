{
  int type=n.getType();
switch (type) {
case Token.FUNCTION:
    if (NodeUtil.isFunctionExpression(n) || compiler_.getCodingConvention().isExported(n.getFirstChild().getString())) {
      traverseFunction(n,scope);
    }
  return;
case Token.NAME:
if (parent.getType() != Token.VAR) {
  Var var=scope.getVar(n.getString());
  if (var != null) {
    markReferencedVar(var);
  }
}
break;
}
for (Node c=n.getFirstChild(); c != null; c=c.getNext()) {
traverseNode(c,n,scope);
}
}
