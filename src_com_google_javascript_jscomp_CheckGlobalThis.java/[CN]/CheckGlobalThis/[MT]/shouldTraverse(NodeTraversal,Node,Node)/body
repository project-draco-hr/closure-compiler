{
  if (n.isFunction()) {
    if (n.isArrowFunction()) {
      return true;
    }
    JSDocInfo jsDoc=NodeUtil.getBestJSDocInfo(n);
    if (jsDoc != null && (jsDoc.isConstructor() || jsDoc.isInterface() || jsDoc.hasThisType()|| jsDoc.isOverride())) {
      return false;
    }
    int pType=parent.getType();
    if (!(pType == Token.BLOCK || pType == Token.SCRIPT || pType == Token.NAME || pType == Token.ASSIGN || pType == Token.STRING_KEY)) {
      return false;
    }
    Node gramps=parent.getParent();
    if (NodeUtil.isObjectLitKey(parent)) {
      JSDocInfo maybeLends=gramps.getJSDocInfo();
      if (maybeLends != null && maybeLends.getLendsName() != null && maybeLends.getLendsName().endsWith(".prototype")) {
        return false;
      }
    }
  }
  if (parent != null && parent.isAssign()) {
    Node lhs=parent.getFirstChild();
    if (n == lhs) {
      if (assignLhsChild == null) {
        assignLhsChild=lhs;
      }
    }
 else {
      if (NodeUtil.isGet(lhs)) {
        if (lhs.isGetProp() && lhs.getLastChild().getString().equals("prototype")) {
          return false;
        }
        Node llhs=lhs.getFirstChild();
        if (llhs.isGetProp() && llhs.getLastChild().getString().equals("prototype")) {
          return false;
        }
      }
    }
  }
  return true;
}
