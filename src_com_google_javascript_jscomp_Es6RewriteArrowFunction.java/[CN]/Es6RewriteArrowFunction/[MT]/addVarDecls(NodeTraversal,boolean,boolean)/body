{
  Scope scope=t.getScope();
  if (scope.isDeclared(THIS_VAR,false)) {
    addThis=false;
  }
  if (scope.isDeclared(ARGUMENTS_VAR,false)) {
    addArguments=false;
  }
  Node parent=t.getScopeRoot();
  if (parent.isFunction()) {
    parent=parent.getLastChild();
  }
  if (parent.isSyntheticBlock() && parent.getFirstChild().isScript()) {
    parent=parent.getFirstChild();
  }
  CompilerInput input=compiler.getInput(parent.getInputId());
  if (addArguments) {
    Node name=IR.name(ARGUMENTS_VAR);
    Node argumentsVar=IR.declaration(name,IR.name("arguments"),Token.CONST);
    JSDocInfoBuilder jsdoc=new JSDocInfoBuilder(false);
    jsdoc.recordType(new JSTypeExpression(new Node(Token.BANG,IR.string("Arguments")),"<Es6RewriteArrowFunction>"));
    argumentsVar.setJSDocInfo(jsdoc.build());
    argumentsVar.useSourceInfoIfMissingFromForTree(parent);
    parent.addChildToFront(argumentsVar);
    scope.declare(ARGUMENTS_VAR,name,input);
  }
  if (addThis) {
    Node name=IR.name(THIS_VAR);
    Node thisVar=IR.declaration(name,IR.thisNode(),Token.CONST);
    thisVar.useSourceInfoIfMissingFromForTree(parent);
    parent.addChildToFront(thisVar);
    scope.declare(THIS_VAR,name,input);
  }
}
