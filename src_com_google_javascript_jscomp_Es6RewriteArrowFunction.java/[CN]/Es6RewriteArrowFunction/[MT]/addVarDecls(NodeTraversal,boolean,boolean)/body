{
  Scope scope=t.getScope().getClosestHoistScope();
  if (scope.isDeclared(THIS_VAR,false)) {
    addThis=false;
  }
  if (scope.isDeclared(ARGUMENTS_VAR,false)) {
    addArguments=false;
  }
  Node scopeRoot=scope.getRootNode();
  if (scopeRoot.isSyntheticBlock() && scopeRoot.getFirstChild().isScript()) {
    scopeRoot=scopeRoot.getFirstChild();
  }
  CompilerInput input=compiler.getInput(scopeRoot.getInputId());
  if (addArguments) {
    Node name=IR.name(ARGUMENTS_VAR);
    Node argumentsVar=IR.constNode(name,IR.name("arguments"));
    JSDocInfoBuilder jsdoc=new JSDocInfoBuilder(false);
    jsdoc.recordType(new JSTypeExpression(new Node(Token.BANG,IR.string("Arguments")),"<Es6RewriteArrowFunction>"));
    argumentsVar.setJSDocInfo(jsdoc.build());
    argumentsVar.useSourceInfoIfMissingFromForTree(scopeRoot);
    scopeRoot.addChildToFront(argumentsVar);
    scope.declare(ARGUMENTS_VAR,name,input);
  }
  if (addThis) {
    Node name=IR.name(THIS_VAR);
    Node thisVar=IR.constNode(name,IR.thisNode());
    thisVar.useSourceInfoIfMissingFromForTree(scopeRoot);
    scopeRoot.addChildToFront(thisVar);
    scope.declare(THIS_VAR,name,input);
  }
}
