{
  NodeTraversal.traverseChangedFunctions(compiler,new FunctionCallback(){
    @Override public void enterFunction(    AbstractCompiler compiler,    Node root){
      ControlFlowAnalysis cfa=new ControlFlowAnalysis(compiler,false,false);
      cfa.process(null,root);
      ControlFlowGraph<Node> cfg=cfa.getCfg();
      new GraphReachability<>(cfg).compute(cfg.getEntry().getValue());
      if (root.isFunction()) {
        root=root.getLastChild();
      }
      do {
        codeChanged=false;
        NodeTraversal.traverseEs6(compiler,root,new EliminationPass(cfg));
      }
 while (codeChanged);
    }
  }
);
}
