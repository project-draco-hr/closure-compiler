{
  Node parent=n.getParent();
  if (n.isEmpty() || (n.isBlock() && !n.hasChildren())) {
    return;
  }
  if (NodeUtil.isForIn(parent)) {
    return;
  }
switch (n.getType()) {
case DO:
    return;
case BLOCK:
  if (parent.isTry() && NodeUtil.isTryCatchNodeContainer(n)) {
    return;
  }
break;
case CATCH:
Node tryNode=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;
}
if (n.isVar() && !n.getFirstChild().hasChildren()) {
return;
}
removeNode(n);
}
