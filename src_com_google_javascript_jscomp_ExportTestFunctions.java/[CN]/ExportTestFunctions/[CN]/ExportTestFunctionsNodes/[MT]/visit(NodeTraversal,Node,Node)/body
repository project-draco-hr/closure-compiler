{
  if (parent == null) {
    return;
  }
  if (parent.isScript()) {
    if (NodeUtil.isFunctionDeclaration(n)) {
      String functionName=NodeUtil.getFunctionName(n);
      if (isTestFunction(n,functionName)) {
        exportTestFunctionAsSymbol(functionName,n,parent);
      }
    }
 else     if (isVarDeclaredFunction(n)) {
      Node functionNode=n.getFirstChild().getFirstChild();
      String functionName=NodeUtil.getFunctionName(functionNode);
      if (isTestFunction(functionNode,functionName)) {
        exportTestFunctionAsSymbol(functionName,n,parent);
      }
    }
  }
 else   if (NodeUtil.isExprAssign(parent) && !n.getLastChild().isAssign()) {
    Node grandparent=parent.getParent();
    if (grandparent != null && grandparent.isScript()) {
      String functionName=n.getFirstChild().getQualifiedName();
      if (isTestFunction(n,functionName)) {
        exportTestFunctionAsProperty(functionName,parent,n,grandparent);
      }
    }
  }
}
