{
  if (parent == null) {
    return;
  }
  if (parent.isScript()) {
    if (NodeUtil.isFunctionDeclaration(n)) {
      String functionName=NodeUtil.getName(n);
      if (isTestFunction(functionName)) {
        exportTestFunctionAsSymbol(functionName,n,parent);
      }
    }
 else     if (isNameDeclaredFunction(n)) {
      Node functionNode=n.getFirstGrandchild();
      String functionName=NodeUtil.getName(functionNode);
      if (isTestFunction(functionName)) {
        exportTestFunctionAsSymbol(functionName,n,parent);
      }
    }
  }
 else   if (NodeUtil.isExprAssign(parent) && !n.getLastChild().isAssign()) {
    Node grandparent=parent.getParent();
    if (grandparent != null && grandparent.isScript()) {
      String functionName=n.getFirstChild().getQualifiedName();
      if (isTestFunction(functionName)) {
        exportTestFunctionAsProperty(functionName,parent,n,grandparent);
      }
    }
  }
 else   if (n.isObjectLit() && isCallTargetQName(n.getParent(),"goog.testing.testSuite")) {
    for (    Node c : n.children()) {
      if (c.isStringKey() && !c.isQuotedString()) {
        c.setQuotedString();
        compiler.reportCodeChange();
      }
 else       if (c.isMemberFunctionDef()) {
        rewriteMemberDefInObjLit(c,n);
      }
    }
  }
}
