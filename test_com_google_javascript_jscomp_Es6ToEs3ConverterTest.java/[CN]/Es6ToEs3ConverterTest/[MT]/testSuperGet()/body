{
  test("class C extends D { f() {var i = super.c;} }",Joiner.on('\n').join("/** @constructor @struct @extends {D} */","function C() {} C.prototype.f = function() {var i = D.prototype.c;};","goog.inherits(C, D);"),Es6ToEs3Converter.CANNOT_CONVERT_YET);
  test("class C extends D { static f() {var i = super.c;} }",Joiner.on('\n').join("/** @constructor @struct @extends {D} */","function C() {} C.prototype.f = function() {var i = D.c;};","goog.inherits(C, D);"),Es6ToEs3Converter.CANNOT_CONVERT_YET);
  test("class C extends D { f() {var i; i = super[s];} }",Joiner.on('\n').join("/** @constructor @struct @extends {D} */","function C() {} C.prototype.f = function() {var i; i = D.prototype[s];};","goog.inherits(C, D);"),Es6ToEs3Converter.CANNOT_CONVERT_YET);
  test("class C extends D { f() {return super.s;} }",Joiner.on('\n').join("/** @constructor @struct @extends {D} */","function C() {} C.prototype.f = function() {return D.s;};","goog.inherits(C, D);"),Es6ToEs3Converter.CANNOT_CONVERT_YET);
  test("class C extends D { f() {m(super.s);} }",Joiner.on('\n').join("/** @constructor @struct @extends {D} */","function C() {} C.prototype.f = function() {m(D.s);};","goog.inherits(C, D);"),Es6ToEs3Converter.CANNOT_CONVERT_YET);
  test(Joiner.on('\n').join("class C extends D {","  foo() { return super.m.foo(); }","}"),null,Es6ToEs3Converter.CANNOT_CONVERT_YET);
  test(Joiner.on('\n').join("class C extends D {","  static foo() { return super.m.foo(); }","}"),null,Es6ToEs3Converter.CANNOT_CONVERT_YET);
}
