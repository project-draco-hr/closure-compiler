{
  test("var obj = { ['f' + 1] : 1, ['g' + 1] : 1 };",Joiner.on('\n').join("var $jscomp$compprop0 = {};","var obj = ($jscomp$compprop0['f' + 1] = 1,","  ($jscomp$compprop0['g' + 1] = 1, $jscomp$compprop0));"));
  test("var obj = { ['f'] : 1};",Joiner.on('\n').join("var $jscomp$compprop0 = {};","var obj = ($jscomp$compprop0['f'] = 1,","  $jscomp$compprop0);"));
  test("var o = { ['f'] : 1}; var p = { ['g'] : 1};",Joiner.on('\n').join("var $jscomp$compprop0 = {};","var o = ($jscomp$compprop0['f'] = 1,","  $jscomp$compprop0);","var $jscomp$compprop1 = {};","var p = ($jscomp$compprop1['g'] = 1,","  $jscomp$compprop1);"));
  test("({['f' + 1] : 1})",Joiner.on('\n').join("var $jscomp$compprop0 = {};","($jscomp$compprop0['f' + 1] = 1,","  $jscomp$compprop0)"));
  test("({'a' : 2, ['f' + 1] : 1})",Joiner.on('\n').join("var $jscomp$compprop0 = {};","($jscomp$compprop0['a'] = 2,","  ($jscomp$compprop0['f' + 1] = 1, $jscomp$compprop0));"));
  test("({['f' + 1] : 1, 'a' : 2})",Joiner.on('\n').join("var $jscomp$compprop0 = {};","($jscomp$compprop0['f' + 1] = 1,","  ($jscomp$compprop0['a'] = 2, $jscomp$compprop0));"));
  test("({'a' : 1, ['f' + 1] : 1, 'b' : 1})",Joiner.on('\n').join("var $jscomp$compprop0 = {};","($jscomp$compprop0['a'] = 1,","  ($jscomp$compprop0['f' + 1] = 1, ($jscomp$compprop0['b'] = 1, $jscomp$compprop0)));"));
  test("({'a' : x++, ['f' + x++] : 1, 'b' : x++})",Joiner.on('\n').join("var $jscomp$compprop0 = {};","($jscomp$compprop0['a'] = x++, ($jscomp$compprop0['f' + x++] = 1,","  ($jscomp$compprop0['b'] = x++, $jscomp$compprop0)))"));
  test("({a : x++, ['f' + x++] : 1, b : x++})",Joiner.on('\n').join("var $jscomp$compprop0 = {};","($jscomp$compprop0.a = x++, ($jscomp$compprop0['f' + x++] = 1,","  ($jscomp$compprop0.b = x++, $jscomp$compprop0)))"));
  test("({a, ['f' + 1] : 1})",Joiner.on('\n').join("var $jscomp$compprop0 = {};","  ($jscomp$compprop0.a = a, ($jscomp$compprop0['f' + 1] = 1, $jscomp$compprop0))"));
  test("({['f' + 1] : 1, a})",Joiner.on('\n').join("var $jscomp$compprop0 = {};","  ($jscomp$compprop0['f' + 1] = 1, ($jscomp$compprop0.a = a, $jscomp$compprop0))"));
  test("var obj = { [foo]() {}}",Joiner.on('\n').join("var $jscomp$compprop0 = {};","var obj = ($jscomp$compprop0[foo] = function(){}, $jscomp$compprop0)"));
  test("var obj = { *[foo]() {}}",Joiner.on('\n').join("var $jscomp$compprop0 = {};","var obj = (","  $jscomp$compprop0[foo] = /** @suppress {uselessCode} */ function(){","     var $jscomp$generator$state = 0;","     function $jscomp$generator$impl($jscomp$generator$next$arg,","         $jscomp$generator$throw$arg) {","       while (1) switch ($jscomp$generator$state) {","         case 0:","           $jscomp$generator$state = -1;","         default:","           return {value: undefined, done: true}","       }","     }","     return { $$iterator: function(){","       return this","     },","     next: function(arg){ return $jscomp$generator$impl(arg, undefined); },","     throw: function(arg){ return $jscomp$generator$impl(undefined, arg); },","   };","  },","  $jscomp$compprop0)"));
}
