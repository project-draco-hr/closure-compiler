{
  test("function *f() { var j = 0; if (j < 1) { yield j; } }",Joiner.on('\n').join("/** @suppress {uselessCode} */","function f() {","  var $jscomp$generator$state = 0;","  var j;","  function $jscomp$generator$impl($jscomp$generator$next$arg,","      $jscomp$generator$throw$arg) {","    while (1) switch ($jscomp$generator$state) {","      case 0:","        j = 0;","        if (!(j < 1)) { $jscomp$generator$state = 1; break; }","        $jscomp$generator$state = 2;","        return {value: j, done: false};","      case 2:","        if (!($jscomp$generator$throw$arg !== undefined)) {","          $jscomp$generator$state = 3; break;","        }","        $jscomp$generator$state = -1;","        throw $jscomp$generator$throw$arg;","      case 3:","      case 1:","        $jscomp$generator$state = -1;","      default:","        return {value: undefined, done: true}","    }","  }","  return {","    $$iterator: function() { return this; },","    next: function(arg){ return $jscomp$generator$impl(arg, undefined); },","    throw: function(arg){ return $jscomp$generator$impl(undefined, arg); },","  }","}"));
  test("function *f(i) { if (i < 1) { yield i; } else { yield 1; } }",Joiner.on('\n').join("/** @suppress {uselessCode} */","function f(i) {","  var $jscomp$generator$state = 0;","  function $jscomp$generator$impl($jscomp$generator$next$arg,","      $jscomp$generator$throw$arg) {","    while (1) switch ($jscomp$generator$state) {","      case 0:","        if (!(i < 1)) { $jscomp$generator$state = 1; break; }","        $jscomp$generator$state = 3;","        return {value: i, done: false};","      case 3:","        if (!($jscomp$generator$throw$arg !== undefined)) {","          $jscomp$generator$state = 4; break;","        }","        $jscomp$generator$state = -1;","        throw $jscomp$generator$throw$arg;","      case 4:","        $jscomp$generator$state = 2;","        break;","      case 1:","        $jscomp$generator$state = 5;","        return {value: 1, done: false};","      case 5:","        if (!($jscomp$generator$throw$arg !== undefined)) {","          $jscomp$generator$state = 6; break;","        }","        $jscomp$generator$state = -1;","        throw $jscomp$generator$throw$arg;","      case 6:","      case 2:","        $jscomp$generator$state = -1;","      default:","        return {value: undefined, done: true}","    }","  }","  return {","    $$iterator: function() { return this; },","    next: function(arg){ return $jscomp$generator$impl(arg, undefined); },","    throw: function(arg){ return $jscomp$generator$impl(undefined, arg); },","  }","}"));
}
