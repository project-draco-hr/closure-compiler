{
  enableTypeCheck(CheckLevel.WARNING);
  test(Joiner.on('\n').join(CLOSURE_BASE,"/** @constructor @struct */","function Foo() {}","Foo.prototype.f = function() {};","class Sub extends Foo {}","(new Sub).f();"),Joiner.on('\n').join(CLOSURE_BASE,"/** @constructor @struct */","function Foo() {}","Foo.prototype.f = function() {};","/** @constructor @struct @extends {Foo} */","var $jscomp$unique$class$Sub = function() {};","/** @constructor @struct @extends {Foo} */","var Sub = $jscomp$unique$class$Sub;","$jscomp$inherits(Sub, Foo);","$jscomp$copy$properties(Sub, Foo);","(new Sub).f();"));
  test(Joiner.on('\n').join(CLOSURE_BASE,"/** @constructor @struct */","function Foo() {}","Foo.f = function() {};","class Sub extends Foo {}","Sub.f();"),null,null,TypeCheck.INEXISTENT_PROPERTY);
  test(Joiner.on('\n').join(CLOSURE_BASE,"/** @constructor */","function Foo() {}","Foo.f = function() {};","class Sub extends Foo {}"),null,null,TypeCheck.CONFLICTING_SHAPE_TYPE);
}
