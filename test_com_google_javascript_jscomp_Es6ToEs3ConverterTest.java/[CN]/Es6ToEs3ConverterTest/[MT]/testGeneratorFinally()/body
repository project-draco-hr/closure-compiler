{
  test("function *f() {try {yield 1;} catch (e) {} finally {b();}}",Joiner.on('\n').join("/** @suppress {uselessCode} */","function f() {","  var $jscomp$generator$state = 0;","  var e;","  var $jscomp$generator$finally0;","  var $jscomp$generator$global$error;","  return {","    $$iterator: function() { return this; },","    next: function($jscomp$generator$next$arg) {","      while (1) switch ($jscomp$generator$state) {","        case 0:","          try {","            $jscomp$generator$state = 4;","            return {value: 1, done: false};","          } catch ($jscomp$generator$e) {","            $jscomp$generator$global$error = $jscomp$generator$e;","            $jscomp$generator$state = 1;","            break;","          }","        case 4:","          try {","            $jscomp$generator$finally0 = 3;","            $jscomp$generator$state = 2;","            break;","          } catch ($jscomp$generator$e) {","            $jscomp$generator$global$error = $jscomp$generator$e;","            $jscomp$generator$state = 1;","            break;","          }","        case 1:","          e = $jscomp$generator$global$error;","          $jscomp$generator$finally0 = 3;","        case 2:","          b();","          $jscomp$generator$state = $jscomp$generator$finally0;","          break;","        case 3:","          $jscomp$generator$state = -1;","        default:","          return {value: undefined, done: true}","      }","    }","  }","}"));
}
