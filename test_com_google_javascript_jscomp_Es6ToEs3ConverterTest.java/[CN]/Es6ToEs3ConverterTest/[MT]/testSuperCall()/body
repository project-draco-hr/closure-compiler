{
  test("class C extends D { constructor() { super(); } }",Joiner.on('\n').join("/** @constructor @struct @extends {D} */","function C() { C.base(this, 'constructor'); }","goog.inherits(C, D);"));
  test("class C extends D { constructor(str) { super(str); } }",Joiner.on('\n').join("/** @constructor @struct @extends {D} */","function C(str) { C.base(this, 'constructor', str); }","goog.inherits(C, D);"));
  test(Joiner.on('\n').join("class C extends D {","  foo() { return super.foo(); }","}"),Joiner.on('\n').join("/** @constructor @struct @extends {D} */","function C() { }","goog.inherits(C, D);","C.prototype.foo = function() {return C.base(this, 'foo');}"));
  test(Joiner.on('\n').join("class C extends D {","  foo(bar) { return super.foo(bar); }","}"),Joiner.on('\n').join("/** @constructor @struct @extends {D} */","function C() { }","goog.inherits(C, D);","C.prototype.foo = function(bar) {return C.base(this, 'foo', bar);}"));
  test("class C { constructor() { super(); } }",null,Es6ToEs3Converter.NO_SUPERTYPE);
  test("class C { method() { class D extends C { constructor() { super(); }}}}",Joiner.on('\n').join("/** @constructor @struct */","function C() { }","C.prototype.method = function () {","  /** @constructor @struct @extends{C} */","  function D() {D.base(this, 'constructor');}","  goog.inherits(D, C);","};"));
  test("var i = super();",null,Es6ToEs3Converter.NO_SUPERTYPE);
  test("class C extends D { f() {super();} }",Joiner.on('\n').join("/** @constructor @struct @extends {D} */","function C() { }","goog.inherits(C, D);","C.prototype.f = function() {C.base(this, 'f');}"));
}
