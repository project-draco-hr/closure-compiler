{
  test("class C extends D { constructor() { super(); } }",Joiner.on('\n').join("var $jscomp$unique$class$C = function() {","  $jscomp$unique$class$C.base(this, 'constructor');","}","/** @constructor @struct @extends {D} */","var C = $jscomp$unique$class$C;","goog.inherits(C, D);"));
  test("class C extends D { constructor(str) { super(str); } }",Joiner.on('\n').join("var $jscomp$unique$class$C = function(str) {","  $jscomp$unique$class$C.base(this, 'constructor', str);","}","/** @constructor @struct @extends {D} */","var C = $jscomp$unique$class$C;","goog.inherits(C, D);"));
  test(Joiner.on('\n').join("class C extends D {","  foo() { return super.foo(); }","}"),Joiner.on('\n').join("var $jscomp$unique$class$C = function() {}","/** @constructor @struct @extends {D} */","var C = $jscomp$unique$class$C;","goog.inherits(C, D);","C.prototype.foo = function() {return $jscomp$unique$class$C.base(this, 'foo');}"));
  test(Joiner.on('\n').join("class C extends D {","  foo(bar) { return super.foo(bar); }","}"),Joiner.on('\n').join("var $jscomp$unique$class$C = function() {}","/** @constructor @struct @extends {D} */","var C = $jscomp$unique$class$C;","goog.inherits(C, D);","C.prototype.foo = function(bar) {return $jscomp$unique$class$C.base(this, 'foo', bar);}"));
  test("class C { constructor() { super(); } }",null,Es6ToEs3Converter.NO_SUPERTYPE);
  test("class C { method() { class D extends C { constructor() { super(); }}}}",Joiner.on('\n').join("var $jscomp$unique$class$C = function() {}","/** @constructor @struct */","var C = $jscomp$unique$class$C;","C.prototype.method = function() {","  var $jscomp$unique$class$D = function() {","  $jscomp$unique$class$D.base(this, 'constructor');","}","  /** @constructor @struct @extends{C} */","  var D = $jscomp$unique$class$D;","  goog.inherits(D, C);","};"));
  test("var i = super();",null,Es6ToEs3Converter.NO_SUPERTYPE);
  test("class C extends D { f() {super();} }",Joiner.on('\n').join("var $jscomp$unique$class$C = function() {}","/** @constructor @struct @extends {D} */","var C = $jscomp$unique$class$C;","goog.inherits(C, D);","C.prototype.f = function() {$jscomp$unique$class$C.base(this, 'f');}"));
  test("class D { constructor (v) {} } class C extends D {}",Joiner.on('\n').join("var $jscomp$unique$class$D = function(v) {};","/** @constructor @struct */","var D = $jscomp$unique$class$D;","var $jscomp$unique$class$C = function() {};","/** @constructor @struct @extends{D} */","var C = $jscomp$unique$class$C;","goog.inherits(C, D);"));
}
