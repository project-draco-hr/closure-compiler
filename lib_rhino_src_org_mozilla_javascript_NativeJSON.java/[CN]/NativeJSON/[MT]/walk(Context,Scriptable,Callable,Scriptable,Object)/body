{
  final Object property;
  if (name instanceof Number) {
    property=holder.get(((Number)name).intValue(),holder);
  }
 else {
    property=holder.get(((String)name),holder);
  }
  if (property instanceof Scriptable) {
    Scriptable val=((Scriptable)property);
    if (val instanceof NativeArray) {
      long len=((NativeArray)val).getLength();
      for (long i=0; i < len; i++) {
        if (i > Integer.MAX_VALUE) {
          String id=Long.toString(i);
          Object newElement=walk(cx,scope,reviver,val,id);
          if (newElement == Undefined.instance) {
            val.delete(id);
          }
 else {
            val.put(id,val,newElement);
          }
        }
 else {
          int idx=(int)i;
          Object newElement=walk(cx,scope,reviver,val,idx);
          if (newElement == Undefined.instance) {
            val.delete(idx);
          }
 else {
            val.put(idx,val,newElement);
          }
        }
      }
    }
 else {
      Object[] keys=val.getIds();
      for (      Object p : keys) {
        Object newElement=walk(cx,scope,reviver,val,p);
        if (newElement == Undefined.instance) {
          if (p instanceof Number)           val.delete(((Number)p).intValue());
 else           val.delete((String)p);
        }
 else {
          if (p instanceof Number)           val.put(((Number)p).intValue(),val,newElement);
 else           val.put((String)p,val,newElement);
        }
      }
    }
  }
  return reviver.call(cx,scope,holder,new Object[]{name,property});
}
