{
  Preconditions.checkArgument(n.isGetProp());
  Node instance=n.getFirstChild();
  JSType instanceType=getType(instance);
  JSType boxedType=instanceType.autoboxesTo();
  instanceType=boxedType != null ? boxedType : instanceType;
  ObjectType objType=instanceType.toObjectType();
  Preconditions.checkState(objType != null);
  if (!isExtern) {
    Reference ref=new Reference(n);
    FunctionType constructor=objType.getConstructor();
    if (constructor != null) {
      String propName=n.getLastChild().getString();
      if (!constructor.getPrototype().hasOwnProperty(propName)) {
        recordSuperClassPrototypePropUse(constructor,propName,ref);
      }
      recordSubclassPrototypePropUse(constructor,propName,ref);
    }
 else {
      recordUnknownUse(n,parent);
    }
  }
}
