{
  if (classType.getPrototype().hasOwnProperty(prop)) {
    graph.connect(getNamedContainingFunction(),ref,graph.defineNameIfNotExists(classType.getReferenceName() + ".prototype." + prop,false));
  }
  if (classType.getSubTypes() != null) {
    for (    FunctionType subclass : classType.getSubTypes()) {
      recordSubclassPrototypePropUse(subclass,prop,ref);
    }
  }
}
