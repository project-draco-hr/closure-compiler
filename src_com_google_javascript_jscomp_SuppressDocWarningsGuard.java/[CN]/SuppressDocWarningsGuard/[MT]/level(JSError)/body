{
  Node node=error.node;
  if (node != null) {
    boolean visitedFunction=false;
    for (Node current=node; current != null; current=current.getParent()) {
      int type=current.getType();
      JSDocInfo info=null;
      if (type == Token.FUNCTION) {
        info=NodeUtil.getBestJSDocInfo(current);
        visitedFunction=true;
      }
 else       if (type == Token.SCRIPT) {
        info=current.getJSDocInfo();
      }
 else       if (current.isVar() || current.isAssign()) {
        Node rhs=NodeUtil.getRValueOfLValue(current.getFirstChild());
        if (rhs != null) {
          if (rhs.isCast()) {
            rhs=rhs.getFirstChild();
          }
          if (rhs.isFunction() && !visitedFunction) {
            info=NodeUtil.getBestJSDocInfo(current);
          }
        }
      }
      if (info != null) {
        for (        String suppressor : info.getSuppressions()) {
          WarningsGuard guard=suppressors.get(suppressor);
          if (guard != null) {
            CheckLevel newLevel=guard.level(error);
            if (newLevel != null) {
              return newLevel;
            }
          }
        }
      }
    }
  }
  return null;
}
