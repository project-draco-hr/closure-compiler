{
  final Set<String> allJsInputs=new LinkedHashSet<>();
  List<String> patterns=new ArrayList<>();
  patterns.addAll(js);
  patterns.addAll(arguments);
  for (  String pattern : patterns) {
    if (!pattern.contains("*") && !pattern.startsWith("!")) {
      allJsInputs.add(pattern);
    }
 else {
      FileSystem fs=FileSystems.getDefault();
      final boolean remove=pattern.indexOf("!") == 0;
      if (remove)       pattern=pattern.substring(1);
      final PathMatcher matcher=fs.getPathMatcher("glob:" + pattern);
      java.nio.file.Files.walkFileTree(fs.getPath("."),new SimpleFileVisitor<Path>(){
        @Override public FileVisitResult visitFile(        Path p,        BasicFileAttributes attrs){
          if (matcher.matches(p)) {
            if (remove) {
              allJsInputs.remove(p.toString());
            }
 else {
              allJsInputs.add(p.toString());
            }
          }
          return FileVisitResult.CONTINUE;
        }
      }
);
    }
  }
  if (!patterns.isEmpty() && allJsInputs.isEmpty()) {
    throw new CmdLineException("No inputs matched");
  }
  return new ArrayList<>(allJsInputs);
}
