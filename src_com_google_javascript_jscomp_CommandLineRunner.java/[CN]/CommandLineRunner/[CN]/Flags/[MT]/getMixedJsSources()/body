{
  List<FlagEntry<JsSourceType>> mixedSources=new ArrayList<>();
  Set<String> excludes=new HashSet<>();
  for (  FlagEntry<JsSourceType> source : Flags.mixedJsSources) {
    if (source.getValue().endsWith(".zip")) {
      mixedSources.add(source);
    }
 else     if (source.getValue().startsWith("!")) {
      for (      String filename : findJsFiles(Collections.singletonList(source.getValue().substring(1)))) {
        excludes.add(filename);
        mixedSources.remove(new FlagEntry<>(JsSourceType.JS,filename));
      }
    }
 else {
      for (      String filename : findJsFiles(Collections.singletonList(source.getValue()),true)) {
        if (!excludes.contains(filename)) {
          mixedSources.add(new FlagEntry<>(JsSourceType.JS,filename));
        }
      }
    }
  }
  List<String> fromArguments=findJsFiles(arguments);
  for (  String filename : fromArguments) {
    mixedSources.add(new FlagEntry<>(JsSourceType.JS,filename));
  }
  if (!Flags.mixedJsSources.isEmpty() && !arguments.isEmpty() && mixedSources.isEmpty()) {
    throw new CmdLineException(parser,"No inputs matched");
  }
  return mixedSources;
}
