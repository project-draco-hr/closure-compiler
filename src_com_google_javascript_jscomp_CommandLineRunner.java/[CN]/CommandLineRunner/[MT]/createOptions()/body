{
  CompilerOptions options=new CompilerOptions();
  if (flags.processJqueryPrimitives) {
    options.setCodingConvention(new JqueryCodingConvention());
  }
 else {
    options.setCodingConvention(new ClosureCodingConvention());
  }
  options.setAllowEs6Out(flags.allowEs6Out);
  options.setExtraAnnotationNames(flags.extraAnnotationName);
  CompilationLevel level=flags.compilationLevelParsed;
  level.setOptionsForCompilationLevel(options);
  if (flags.debug) {
    level.setDebugOptionsForCompilationLevel(options);
  }
  if (!flags.disableTypeOptimizations) {
    level.setTypeBasedOptimizationOptions(options);
  }
  if (flags.generateExports) {
    options.setGenerateExports(flags.generateExports);
  }
  if (flags.exportLocalPropertyDefinitions) {
    options.setExportLocalPropertyDefinitions(true);
  }
  WarningLevel wLevel=flags.warningLevel;
  wLevel.setOptionsForWarningLevel(options);
  for (  FormattingOption formattingOption : flags.formatting) {
    formattingOption.applyToOptions(options);
  }
  options.closurePass=flags.processClosurePrimitives;
  options.jqueryPass=CompilationLevel.ADVANCED_OPTIMIZATIONS == level && flags.processJqueryPrimitives;
  options.angularPass=flags.angularPass;
  options.renamePrefixNamespace=flags.renamePrefixNamespace;
  if (!flags.translationsFile.isEmpty()) {
    try {
      options.messageBundle=new XtbMessageBundle(new FileInputStream(flags.translationsFile),flags.translationsProject);
    }
 catch (    IOException e) {
      throw new RuntimeException("Reading XTB file",e);
    }
  }
 else   if (CompilationLevel.ADVANCED_OPTIMIZATIONS == level) {
    options.messageBundle=new EmptyMessageBundle();
    options.setWarningLevel(JsMessageVisitor.MSG_CONVENTIONS,CheckLevel.OFF);
  }
  options.setConformanceConfigs(loadConformanceConfigs(flags.conformanceConfigs));
  return options;
}
