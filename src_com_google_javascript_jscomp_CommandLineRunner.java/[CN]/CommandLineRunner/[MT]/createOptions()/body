{
  CompilerOptions options=new CompilerOptions();
  if (flags.process_jquery_primitives) {
    options.setCodingConvention(new JqueryCodingConvention());
  }
 else {
    options.setCodingConvention(new ClosureCodingConvention());
  }
  CompilationLevel level=flags.compilation_level;
  level.setOptionsForCompilationLevel(options);
  if (flags.debug) {
    level.setDebugOptionsForCompilationLevel(options);
  }
  if (flags.use_types_for_optimization) {
    level.setTypeBasedOptimizationOptions(options);
  }
  if (flags.generate_exports) {
    options.setGenerateExports(flags.generate_exports);
  }
  WarningLevel wLevel=flags.warning_level;
  wLevel.setOptionsForWarningLevel(options);
  for (  FormattingOption formattingOption : flags.formatting) {
    formattingOption.applyToOptions(options);
  }
  options.closurePass=flags.process_closure_primitives;
  options.jqueryPass=flags.process_jquery_primitives && CompilationLevel.ADVANCED_OPTIMIZATIONS == level;
  if (!flags.translationsFile.isEmpty()) {
    try {
      options.messageBundle=new XtbMessageBundle(new FileInputStream(flags.translationsFile),flags.translationsProject);
    }
 catch (    IOException e) {
      throw new RuntimeException("Reading XTB file",e);
    }
  }
 else   if (CompilationLevel.ADVANCED_OPTIMIZATIONS == level) {
    options.messageBundle=new EmptyMessageBundle();
  }
  return options;
}
