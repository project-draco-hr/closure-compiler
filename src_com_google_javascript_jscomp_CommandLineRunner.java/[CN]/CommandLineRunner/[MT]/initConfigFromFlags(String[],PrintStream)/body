{
  List<String> processedArgs=processArgs(args);
  Flags.guardLevels.clear();
  isConfigValid=true;
  List<String> jsFiles=null;
  try {
    flags.parse(processedArgs);
    if (!flags.flagFile.isEmpty()) {
      processFlagFile(err);
    }
    jsFiles=flags.getJsFiles();
  }
 catch (  CmdLineException e) {
    err.println(e.getMessage());
    isConfigValid=false;
  }
catch (  IOException ioErr) {
    err.println("ERROR - " + flags.flagFile + " read error.");
    isConfigValid=false;
  }
  if (flags.version) {
    err.println("Closure Compiler (http://code.google.com/closure/compiler)\n" + "Version: " + Compiler.getReleaseVersion() + "\n"+ "Built on: "+ Compiler.getReleaseDate());
    err.flush();
  }
  if (flags.processCommonJsModules) {
    flags.processClosurePrimitives=true;
    flags.manageClosureDependencies=true;
    if (flags.commonJsEntryModule == null) {
      err.println("Please specify --common_js_entry_module.");
      err.flush();
      isConfigValid=false;
    }
    flags.closureEntryPoint=Lists.newArrayList(ProcessCommonJSModules.toModuleName(flags.commonJsEntryModule));
  }
  if (!(flags.outputWrapper == null || flags.outputWrapper.contains(CommandLineRunner.OUTPUT_MARKER))) {
    err.println("ERROR - invalid output_wrapper specified. Missing '" + CommandLineRunner.OUTPUT_MARKER + "'.");
    isConfigValid=false;
  }
  if (!isConfigValid || flags.displayHelp) {
    isConfigValid=false;
    flags.printUsage(err);
  }
 else {
    CodingConvention conv;
    if (flags.thirdParty) {
      conv=CodingConventions.getDefault();
    }
 else     if (flags.processJqueryPrimitives) {
      conv=new JqueryCodingConvention();
    }
 else {
      conv=new ClosureCodingConvention();
    }
    getCommandLineConfig().setPrintTree(flags.printTree).setPrintAst(flags.printAst).setPrintPassGraph(flags.printPassGraph).setJscompDevMode(flags.jscompDevMode).setLoggingLevel(flags.loggingLevel).setExterns(flags.externs).setJs(jsFiles).setJsOutputFile(flags.jsOutputFile).setModule(flags.module).setCodingConvention(conv).setSummaryDetailLevel(flags.summaryDetailLevel).setOutputWrapper(flags.outputWrapper).setModuleWrapper(flags.moduleWrapper).setModuleOutputPathPrefix(flags.moduleOutputPathPrefix).setCreateSourceMap(flags.createSourceMap).setSourceMapFormat(flags.sourceMapFormat).setWarningGuardSpec(Flags.getWarningGuardSpec()).setDefine(flags.define).setCharset(flags.charset).setManageClosureDependencies(flags.manageClosureDependencies).setOnlyClosureDependencies(flags.onlyClosureDependencies).setClosureEntryPoints(flags.closureEntryPoint).setOutputManifest(ImmutableList.of(flags.outputManifest)).setOutputModuleDependencies(flags.outputModuleDependencies).setAcceptConstKeyword(flags.acceptConstKeyword).setLanguageIn(flags.languageIn).setLanguageOut(flags.languageOut).setProcessCommonJSModules(flags.processCommonJsModules).setCommonJSModulePathPrefix(flags.commonJsPathPrefix).setTransformAMDToCJSModules(flags.transformAmdModules).setWarningsWhitelistFile(flags.warningsWhitelistFile).setAngularPass(flags.angularPass).setTracerMode(flags.tracerMode).setNewTypeInference(flags.useNewTypeInference);
  }
}
