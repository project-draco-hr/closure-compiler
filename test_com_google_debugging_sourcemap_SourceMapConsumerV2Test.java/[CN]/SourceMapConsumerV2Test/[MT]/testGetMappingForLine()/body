{
  String mapData="{\n" + "\"version\":2,\n" + "\"file\":\"testcode\",\n"+ "\"lineCount\":1,\n"+ "\"lineMaps\":"+ "[\"cAEBABIBA/ICA+ADICA/ICA+IDA9AEYBMBA5\"],\n"+ "\"sources\":[\"testcode\"],\n"+ "\"mappings\":[[0,1,9,\"f\"],\n"+ "[0,1,9,\"f\"],\n"+ "[0,1,10],\n"+ "[0,1,11,\"foo\"],\n"+ "[0,1,16,\"bar\"],\n"+ "[0,1,21],\n"+ "[0,1,23],\n"+ "[0,1,23,\"foo\"],\n"+ "[0,1,29,\"foo\"],\n"+ "[0,1,35,\"bar\"],\n"+ "[0,1,41],\n"+ "[0,1,44],\n"+ "[0,1,51,\"foo\"],\n"+ "]\n"+ "}\n";
  SourceMapConsumerV2 sourceMap=new SourceMapConsumerV2();
  sourceMap.parse(mapData);
  OriginalMapping mapping=sourceMap.getMappingForLine(1,10);
  assertNotNull(mapping);
  assertEquals("testcode",mapping.getOriginalFile());
  assertEquals(1,mapping.getLineNumber());
  assertEquals(9,mapping.getColumnPosition());
  assertEquals("f",mapping.getIdentifier());
  mapping=sourceMap.getMappingForLine(1,40);
  assertNotNull(mapping);
  assertEquals("testcode",mapping.getOriginalFile());
  assertEquals(1,mapping.getLineNumber());
  assertEquals(44,mapping.getColumnPosition());
  assertEquals("",mapping.getIdentifier());
  mapping=sourceMap.getMappingForLine(1,42);
  assertNotNull(mapping);
  assertEquals("testcode",mapping.getOriginalFile());
  assertEquals(1,mapping.getLineNumber());
  assertEquals(51,mapping.getColumnPosition());
  assertEquals("foo",mapping.getIdentifier());
}
