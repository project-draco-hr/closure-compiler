{
  Predicate<Node> shouldSplit=new Predicate<Node>(){
    @Override public boolean apply(    Node input){
      String sourceName=(String)input.getProp(Node.SOURCENAME_PROP);
      return sourceName != null;
    }
  }
;
  Supplier<Node> placeHolders=new Supplier<Node>(){
    @Override public Node get(){
      return NodeUtil.newExpr(Node.newString(TEMP_NAME));
    }
  }
;
  Predicate<Node> shouldTraverse=new Predicate<Node>(){
    @Override public boolean apply(    Node n){
      return n.getType() == Token.BLOCK;
    }
  }
;
  return new AstParallelizer(shouldSplit,shouldTraverse,placeHolders,root,false);
}
