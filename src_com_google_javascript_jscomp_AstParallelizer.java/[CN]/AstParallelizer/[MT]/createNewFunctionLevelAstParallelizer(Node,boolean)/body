{
  Predicate<Node> shouldSplit=new Predicate<Node>(){
    @Override public boolean apply(    Node input){
      return input.isFunction();
    }
  }
;
  Predicate<Node> shouldTraverse=Predicates.alwaysTrue();
  Supplier<Node> placeHolders=new Supplier<Node>(){
    @Override public Node get(){
      return IR.function(IR.name(TEMP_NAME),IR.paramList(),IR.block());
    }
  }
;
  return new AstParallelizer(shouldSplit,shouldTraverse,placeHolders,root,globalPass);
}
