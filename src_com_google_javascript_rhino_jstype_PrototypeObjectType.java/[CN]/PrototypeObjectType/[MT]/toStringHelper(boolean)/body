{
  if (hasReferenceName()) {
    return getReferenceName();
  }
 else   if (prettyPrint) {
    prettyPrint=false;
    Set<String> propertyNames=new TreeSet<>();
    for (ObjectType current=this; current != null && !current.isNativeObjectType() && propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; current=current.getImplicitPrototype()) {
      propertyNames.addAll(current.getOwnPropertyNames());
    }
    StringBuilder sb=new StringBuilder();
    sb.append("{");
    boolean useNewlines=!forAnnotations && propertyNames.size() > 2;
    int i=0;
    for (    String property : propertyNames) {
      if (i > 0) {
        sb.append(", ");
      }
      if (useNewlines) {
        sb.append("\n  ");
      }
      sb.append(property);
      sb.append(": ");
      sb.append(getPropertyType(property).toStringHelper(forAnnotations));
      ++i;
      if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) {
        sb.append(", ...");
        break;
      }
    }
    if (useNewlines) {
      sb.append("\n");
    }
    sb.append("}");
    prettyPrint=true;
    return sb.toString();
  }
 else {
    return forAnnotations ? "?" : "{...}";
  }
}
