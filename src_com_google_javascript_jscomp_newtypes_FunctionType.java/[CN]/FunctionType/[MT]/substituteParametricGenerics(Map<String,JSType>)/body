{
  if (typeMap.isEmpty()) {
    return this;
  }
  FunctionTypeBuilder builder=new FunctionTypeBuilder(this.commonTypes);
  for (  JSType reqFormal : this.requiredFormals) {
    builder.addReqFormal(reqFormal.substituteGenerics(typeMap));
  }
  for (  JSType optFormal : this.optionalFormals) {
    builder.addOptFormal(optFormal.substituteGenerics(typeMap));
  }
  if (this.restFormals != null) {
    builder.addRestFormals(restFormals.substituteGenerics(typeMap));
  }
  builder.addRetType(this.returnType.substituteGenerics(typeMap));
  if (isLoose()) {
    builder.addLoose();
  }
  builder.addNominalType(substGenericsInNomType(this.nominalType,typeMap));
  if (this.receiverType != null) {
    NominalType recvType=getNominalTypeIfSingletonObj(this.receiverType);
    if (recvType != null && recvType.isUninstantiatedGenericType()) {
      builder.addReceiverType(this.receiverType);
    }
 else {
      builder.addReceiverType(substGenericsInNomType(this.receiverType,typeMap));
    }
  }
  for (  String var : outerVarPreconditions.keySet()) {
    builder.addOuterVarPrecondition(var,outerVarPreconditions.get(var));
  }
  return builder.buildFunction();
}
