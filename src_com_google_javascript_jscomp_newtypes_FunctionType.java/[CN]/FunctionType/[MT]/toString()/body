{
  if (isTopFunction()) {
    return "TOP_FUNCTION" + (isLoose ? " (loose)" : "");
  }
  List<String> formals=Lists.newLinkedList();
  if (nominalType != null) {
    formals.add("new:" + nominalType.name);
  }
  for (  JSType formal : requiredFormals) {
    formals.add(formal.toString());
  }
  for (  JSType formal : optionalFormals) {
    formals.add(formal.toString() + "=");
  }
  if (restFormals != null) {
    formals.add("..." + restFormals.toString());
  }
  String result="function (" + Joiner.on(", ").join(formals) + ")";
  if (returnType != null) {
    result+=": " + returnType.toString();
  }
  return result + (isLoose ? " (loose)" : "") + (outerVarPreconditions.isEmpty() ? "" : "\tFV:" + outerVarPreconditions);
}
