{
  Preconditions.checkState(this.isLoose() || f2.isLoose());
  if (this.isTopFunction() || f2.isTopFunction()) {
    return true;
  }
  int minRequiredArity=Math.min(this.requiredFormals.size(),f2.requiredFormals.size());
  for (int i=0; i < minRequiredArity; i++) {
    if (JSType.meet(this.getFormalType(i),f2.getFormalType(i)).isBottom()) {
      return false;
    }
  }
  return this.getReturnType().isBottom() || f2.getReturnType().isBottom() || !JSType.meet(this.getReturnType(),f2.getReturnType()).isBottom();
}
