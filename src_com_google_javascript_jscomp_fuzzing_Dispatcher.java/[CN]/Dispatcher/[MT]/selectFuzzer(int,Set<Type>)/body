{
  Preconditions.checkNotNull(getCandidates(),"Candidate fuzzers need to be initialized before being used.");
  ArrayList<AbstractFuzzer> typeCorrectCandidates;
  typeCorrectCandidates=Lists.newArrayList();
  for (  AbstractFuzzer fuzzer : getCandidates()) {
    if (!Sets.intersection(fuzzer.supportedTypes(),types).isEmpty()) {
      typeCorrectCandidates.add(fuzzer);
    }
  }
  JsonObject weightConfig=getOwnConfig().get("weights").getAsJsonObject();
  ArrayList<AbstractFuzzer> validFuzzers=Lists.newArrayList();
  ArrayList<Double> weights=Lists.newArrayList();
  int stepSize=2;
  budget-=stepSize;
  do {
    budget+=stepSize;
    for (    AbstractFuzzer fuzzer : typeCorrectCandidates) {
      if (fuzzer.isEnough(budget)) {
        validFuzzers.add(fuzzer);
        try {
          weights.add(weightConfig.get(fuzzer.getConfigName()).getAsDouble());
        }
 catch (        JsonParseException e) {
          e.printStackTrace();
        }
      }
    }
  }
 while (validFuzzers.isEmpty());
  DiscreteDistribution<AbstractFuzzer> dd=new DiscreteDistribution<>(context.random,validFuzzers,weights);
  return dd.nextItem();
}
