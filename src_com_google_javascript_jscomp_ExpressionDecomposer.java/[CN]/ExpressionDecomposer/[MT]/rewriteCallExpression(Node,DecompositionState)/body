{
  Preconditions.checkArgument(call.isCall());
  Node first=call.getFirstChild();
  Preconditions.checkArgument(NodeUtil.isGet(first));
  Node getVarNode=extractExpression(first,state.extractBeforeStatement);
  state.extractBeforeStatement=getVarNode;
  Node getExprNode=getVarNode.getFirstChild().getFirstChild();
  Preconditions.checkArgument(NodeUtil.isGet(getExprNode));
  Node thisVarNode=extractExpression(getExprNode.getFirstChild(),state.extractBeforeStatement);
  state.extractBeforeStatement=thisVarNode;
  Node thisNameNode=thisVarNode.getFirstChild();
  Node functionNameNode=getVarNode.getFirstChild();
  Node newCall=IR.call(IR.getprop(functionNameNode.cloneNode(),IR.string("call")),thisNameNode.cloneNode()).srcref(call);
  call.removeFirstChild();
  if (call.hasChildren()) {
    newCall.addChildrenToBack(call.removeChildren());
  }
  Node callParent=call.getParent();
  callParent.replaceChild(call,newCall);
  return newCall;
}
