{
  Node child=subExpression;
  for (  Node parent : child.getAncestors()) {
    Token parentType=parent.getType();
switch (parentType) {
case EXPR_RESULT:
case IF:
case SWITCH:
case RETURN:
case THROW:
case VAR:
case CONST:
case LET:
      Preconditions.checkState(child == parent.getFirstChild());
    return parent;
case FOR:
  if (!NodeUtil.isForIn(parent) && child == parent.getFirstChild()) {
    return parent;
  }
case SCRIPT:
case BLOCK:
case LABEL:
case CASE:
case DEFAULT_CASE:
return null;
default :
break;
}
child=parent;
}
throw new IllegalStateException("Unexpected AST structure.");
}
