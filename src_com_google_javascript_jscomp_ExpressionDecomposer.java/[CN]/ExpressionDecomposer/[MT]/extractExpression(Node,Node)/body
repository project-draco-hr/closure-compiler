{
  Node parent=expr.getParent();
  String tempName=getTempConstantValueName();
  Node replacementValueNode=Node.newString(Token.NAME,tempName);
  parent.replaceChild(expr,replacementValueNode);
  Node tempNameNode=Node.newString(Token.NAME,tempName);
  tempNameNode.addChildrenToBack(expr);
  Node tempVarNode=new Node(Token.VAR,tempNameNode);
  Node injectionPointParent=injectionPoint.getParent();
  injectionPointParent.addChildBefore(tempVarNode,injectionPoint);
  if (NodeUtil.isAssignmentOp(parent) && !NodeUtil.isAssign(parent)) {
    Node gParent=parent.getParent();
    Node assignBack=new Node(Token.ASSIGN,expr.cloneTree(),tempNameNode.cloneNode());
    if (NodeUtil.isExpressionNode(gParent)) {
      gParent.getParent().addChildAfter(NodeUtil.newExpr(assignBack),gParent);
    }
 else {
      Node comma=new Node(Token.COMMA);
      gParent.replaceChild(parent,comma);
      comma.addChildrenToFront(assignBack);
      comma.addChildrenToFront(parent);
    }
  }
  return tempVarNode;
}
