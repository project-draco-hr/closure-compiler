{
  String name=node.getString();
  JSDocInfo oldJSDocInfo=NodeUtil.getBestJSDocInfo(node);
  Node getprop=NodeUtil.newQName(compiler,"Window.prototype." + name);
  Node newNode=getprop;
  if (oldJSDocInfo != null) {
    JSDocInfoBuilder builder;
    if (oldJSDocInfo.isConstructor() || oldJSDocInfo.isInterface() || oldJSDocInfo.hasEnumParameterType()|| NodeUtil.isNamespaceDecl(node)) {
      Node nameNode=IR.name(name);
      newNode=IR.assign(getprop,nameNode);
      builder=new JSDocInfoBuilder(false);
      if (oldJSDocInfo.isConstructor()) {
        builder.recordConstructor();
      }
      if (oldJSDocInfo.isInterface()) {
        builder.recordInterface();
      }
      if (oldJSDocInfo.hasEnumParameterType()) {
        builder.recordEnumParameterType(oldJSDocInfo.getEnumParameterType());
      }
    }
 else {
      builder=JSDocInfoBuilder.copyFrom(oldJSDocInfo);
    }
    builder.recordSuppressions(ImmutableSet.of("duplicate"));
    JSDocInfo jsDocInfo=builder.build(newNode);
    jsDocInfo.setAssociatedNode(newNode);
    newNode.setJSDocInfo(jsDocInfo);
  }
  NodeUtil.setDebugInformation(newNode,node,name);
  node.getParent().getParent().addChildToBack(IR.exprResult(newNode));
}
