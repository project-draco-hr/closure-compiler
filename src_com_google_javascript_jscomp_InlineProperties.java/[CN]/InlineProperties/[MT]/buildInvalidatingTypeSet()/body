{
  JSTypeRegistry registry=compiler.getTypeRegistry();
  invalidatingTypes=Sets.newHashSet(registry.getNativeType(JSTypeNative.ALL_TYPE),registry.getNativeType(JSTypeNative.NO_OBJECT_TYPE),registry.getNativeType(JSTypeNative.NO_TYPE),registry.getNativeType(JSTypeNative.NULL_TYPE),registry.getNativeType(JSTypeNative.VOID_TYPE),registry.getNativeType(JSTypeNative.FUNCTION_FUNCTION_TYPE),registry.getNativeType(JSTypeNative.FUNCTION_INSTANCE_TYPE),registry.getNativeType(JSTypeNative.FUNCTION_PROTOTYPE),registry.getNativeType(JSTypeNative.GLOBAL_THIS),registry.getNativeType(JSTypeNative.OBJECT_TYPE),registry.getNativeType(JSTypeNative.OBJECT_PROTOTYPE),registry.getNativeType(JSTypeNative.OBJECT_FUNCTION_TYPE),registry.getNativeType(JSTypeNative.TOP_LEVEL_PROTOTYPE),registry.getNativeType(JSTypeNative.UNKNOWN_TYPE));
  for (  TypeMismatch mis : compiler.getTypeMismatches()) {
    addInvalidatingType(mis.typeA);
    addInvalidatingType(mis.typeB);
  }
}
