{
  String js="" + "/** @constructor */ function Formatter() {}" + "Formatter.prototype.format = function() {};"+ "/** @constructor */ function Unrelated() {}"+ "Unrelated.prototype.format = function() {};"+ "/** @enum {!Formatter} */ var Enum = {\n"+ "  A: new Formatter(),\n"+ "  B: new Formatter()\n"+ "};\n"+ "/** @enum {!Enum} */ var SubEnum = {\n"+ "  C: Enum.A\n"+ "};\n"+ "function f() {\n"+ "  var formatter = SubEnum.C\n"+ "  formatter.format();\n"+ "}";
  String output="" + "/** @constructor */ function Formatter() {}" + "Formatter.prototype.Formatter_prototype$format = function() {};"+ "/** @constructor */ function Unrelated() {}"+ "Unrelated.prototype.Unrelated_prototype$format = function() {};"+ "/** @enum {!Formatter} */ var Enum = {\n"+ "  A: new Formatter(),\n"+ "  B: new Formatter()\n"+ "};\n"+ "/** @enum {!Enum} */ var SubEnum = {\n"+ "  C: Enum.A\n"+ "};\n"+ "function f() {\n"+ "  var formatter = SubEnum.C\n"+ "  formatter.Formatter_prototype$format();\n"+ "}";
  testSets(false,js,output,"{format=[[Formatter.prototype], [Unrelated.prototype]]}");
}
