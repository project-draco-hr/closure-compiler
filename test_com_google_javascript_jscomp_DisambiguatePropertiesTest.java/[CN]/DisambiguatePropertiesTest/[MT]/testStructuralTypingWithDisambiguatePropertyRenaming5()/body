{
  String js=LINE_JOINER.join("/** @record */","function I(){}","/** @type {number} */","I.prototype.x;","","/** @constructor @implements {I} */","function Foo(){}","/** @type {number} */","Foo.prototype.x;","","/** @constructor */","function Bar(){}","/** @type {number} */","Bar.prototype.x;","","function f(/** Bar */ i) { return i.x; }");
  String output=LINE_JOINER.join("/** @record */","function I(){}","/** @type {number} */","I.prototype.Foo_prototype$x;","/** @constructor @implements {I} */","function Foo(){}","/** @type {number} */","Foo.prototype.Foo_prototype$x;","/** @constructor */","function Bar(){}","/** @type {number} */","Bar.prototype.Bar_prototype$x;","function f(/** Bar */ i){return i.Bar_prototype$x}");
  testSets(js,output,"{x=[[Bar.prototype], [Foo.prototype, I.prototype]]}");
}
