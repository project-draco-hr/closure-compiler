{
  String js="" + "/** @interface */ function I() {};\n" + "/** @type {!Function} */ I.prototype.addEventListener;\n"+ "/** @constructor \n * @implements {I} */ function Impl() {};\n"+ "/** @type {!Function} */ Impl.prototype.addEventListener;"+ "/** @constructor */ function C() {};\n"+ "/** @type {!Function} */ C.prototype.addEventListener;"+ "/** @param {C|I} x */"+ "function f(x) { x.addEventListener(); };\n"+ "f(new C()); f(new Impl());";
  testSets(false,js,js,"{addEventListener=[[C.prototype, I.prototype, Impl.prototype]]}");
  String tightenedOutput="" + "function I() {};\n" + "I.prototype.I_prototype$addEventListener;\n"+ "function Impl() {};\n"+ "Impl.prototype.C_prototype$addEventListener;"+ "function C() {};\n"+ "C.prototype.C_prototype$addEventListener;"+ "/** @param {C|I} x */"+ "function f(x) { x.C_prototype$addEventListener(); };\n"+ "f(new C()); f(new Impl());";
  testSets(true,js,tightenedOutput,"{addEventListener=[[C.prototype, Impl.prototype], [I.prototype]]}");
}
