{
  final TypeCheck checker=new TypeCheck(compiler,new SemanticReverseAbstractInterpreter(compiler.getCodingConvention(),compiler.getTypeRegistry()),compiler.getTypeRegistry());
  return new CompilerPass(){
    public void process(    Node externs,    Node root){
      checker.processForTesting(externs,root);
      if (runTightenTypes) {
        TightenTypes tightener=new TightenTypes(compiler);
        tightener.process(externs,root);
        lastPass=DisambiguateProperties.forConcreteTypeSystem(compiler,tightener);
      }
 else {
        lastPass=DisambiguateProperties.forJSTypeSystem(compiler);
      }
      lastPass.process(externs,root);
    }
  }
;
}
