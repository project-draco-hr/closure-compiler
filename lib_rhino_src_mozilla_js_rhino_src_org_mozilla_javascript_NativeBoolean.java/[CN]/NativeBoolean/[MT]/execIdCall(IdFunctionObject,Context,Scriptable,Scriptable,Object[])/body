{
  if (!f.hasTag(BOOLEAN_TAG)) {
    return super.execIdCall(f,cx,scope,thisObj,args);
  }
  int id=f.methodId();
  if (id == Id_constructor) {
    boolean b;
    if (args.length == 0) {
      b=false;
    }
 else {
      b=args[0] instanceof ScriptableObject && ((ScriptableObject)args[0]).avoidObjectDetection() ? true : ScriptRuntime.toBoolean(args[0]);
    }
    if (thisObj == null) {
      return new NativeBoolean(b);
    }
    return ScriptRuntime.wrapBoolean(b);
  }
  if (!(thisObj instanceof NativeBoolean))   throw incompatibleCallError(f);
  boolean value=((NativeBoolean)thisObj).booleanValue;
switch (id) {
case Id_toString:
    return value ? "true" : "false";
case Id_toSource:
  return value ? "(new Boolean(true))" : "(new Boolean(false))";
case Id_valueOf:
return ScriptRuntime.wrapBoolean(value);
}
throw new IllegalArgumentException(String.valueOf(id));
}
