{
  if (node.getType() == Token.NAME) {
    String oldName=node.getString();
    if (oldName.indexOf(ContextualRenamer.UNIQUE_ID_SEPARATOR) != -1) {
      Scope scope=t.getScope();
      Var var=t.getScope().getVar(oldName);
      if (var == null || var.isGlobal()) {
        return;
      }
      if (nameMap.containsKey(var)) {
        node.setString(nameMap.get(var));
      }
 else {
        int index=indexOfSeparator(oldName);
        String newName=getOrginalNameInternal(oldName,index);
        String suffix=getNameSuffix(oldName,index);
        boolean recurseScopes=false;
        if (!suffix.matches("\\d+")) {
          recurseScopes=true;
        }
        if (var.scope.isDeclared(newName,recurseScopes) || !TokenStream.isJSIdentifier(newName)) {
          newName=oldName;
        }
 else {
          var.scope.declare(newName,var.nameNode,null,null);
          Node parentNode=var.getParentNode();
          if (parentNode.getType() == Token.FUNCTION && parentNode == var.scope.getRootNode()) {
            var.getNameNode().setString(newName);
          }
          node.setString(newName);
          compiler.reportCodeChange();
        }
        nameMap.put(var,newName);
      }
    }
  }
}
