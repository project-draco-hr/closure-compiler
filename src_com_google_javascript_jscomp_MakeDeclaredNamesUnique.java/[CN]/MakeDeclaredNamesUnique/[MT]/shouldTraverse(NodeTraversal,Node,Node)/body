{
switch (n.getType()) {
case Token.FUNCTION:
{
      Renamer renamer=nameStack.peek().forChildScope();
      String name=n.getFirstChild().getString();
      if (name != null && !name.isEmpty() && parent != null && !NodeUtil.isFunctionDeclaration(n)) {
        renamer.addDeclaredName(name);
      }
      nameStack.push(renamer);
    }
  break;
case Token.PARAM_LIST:
{
  Renamer renamer=nameStack.peek().forChildScope();
  for (Node c=n.getFirstChild(); c != null; c=c.getNext()) {
    String name=c.getString();
    renamer.addDeclaredName(name);
  }
  Node functionBody=n.getNext();
  findDeclaredNames(functionBody,null,renamer);
  nameStack.push(renamer);
}
break;
case Token.CATCH:
{
Renamer renamer=nameStack.peek().forChildScope();
String name=n.getFirstChild().getString();
renamer.addDeclaredName(name);
nameStack.push(renamer);
}
break;
}
return true;
}
