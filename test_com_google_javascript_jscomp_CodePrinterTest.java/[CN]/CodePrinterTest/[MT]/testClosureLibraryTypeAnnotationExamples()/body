{
  assertTypeAnnotations(LINE_JOINER.join("/** @param {Object} obj */goog.removeUid = function(obj) {};","/** @param {Object} obj The object to remove the field from. */","goog.removeHashCode = goog.removeUid;"),LINE_JOINER.join("/**"," * @param {(Object|null)} obj"," * @return {undefined}"," */","goog.removeUid = function(obj) {","};","/**"," * @param {(Object|null)} p0"," * @return {undefined}"," */","goog.removeHashCode = goog.removeUid;",""));
  assertTypeAnnotations(LINE_JOINER.join("/** @const */","goog.TRUSTED_SITE = true;","/** @return {number} */","goog.now = (goog.TRUSTED_SITE && Date.now) || (function() {})"),LINE_JOINER.join("/** @type {boolean} */","goog.TRUSTED_SITE = true;","/**","@return {number} */","goog.now = goog.TRUSTED_SITE && Date.now || function() {","};",""));
  assertTypeAnnotations(LINE_JOINER.join("/** @private */","this.tick_ = function() {};","/** @private {Function} @const */","this.boundTick_ = goog.bind(this.tick_, this);"),LINE_JOINER.join("/**"," * @return {undefined}"," */","this.tick_ = function() {","};","/**@const @private @type {Function} */","this.boundTick_ = goog.bind(this.tick_, this);",""));
  assertTypeAnnotations(LINE_JOINER.join("x = function() {};","y = /** @type {Function} */ (x)"),LINE_JOINER.join("/**"," * @return {undefined}"," */","x = function() {","};","y = /** @type {(Function|null)} */","(x);",""));
}
