{
  Compiler compiler=new Compiler();
  lastCompiler=compiler;
  CompilerOptions options=new CompilerOptions();
  options.setTrustedStrings(trustedStrings);
  options.setLanguageIn(LanguageMode.ECMASCRIPT5);
  compiler.initOptions(options);
  Node n=compiler.parseTestCode(js);
  if (checkTypes) {
    DefaultPassConfig passConfig=new DefaultPassConfig(null);
    CompilerPass typeResolver=passConfig.resolveTypes.create(compiler);
    Node externs=new Node(Token.SCRIPT);
    externs.setInputId(new InputId("externs"));
    Node externAndJsRoot=new Node(Token.BLOCK,externs,n);
    externAndJsRoot.setIsSyntheticBlock(true);
    typeResolver.process(externs,n);
    CompilerPass inferTypes=passConfig.inferTypes.create(compiler);
    inferTypes.process(externs,n);
  }
  checkUnexpectedErrorsOrWarnings(compiler,0);
  return n;
}
