{
switch (n.getType()) {
case FUNCTION:
    Node functionNameNode=n.getFirstChild();
  String functionName=functionNameNode.getString();
if (functionName.isEmpty()) {
  if (parent.isAssign()) {
    Node lhs=parent.getFirstChild();
    String name=namer.getName(lhs);
    namer.setFunctionName(name,n);
  }
 else   if (parent.isName()) {
    String name=namer.getName(parent);
    namer.setFunctionName(name,n);
  }
}
break;
case ASSIGN:
Node lhs=n.getFirstChild();
Node rhs=lhs.getNext();
if (rhs.isObjectLit()) {
nameObjectLiteralMethods(rhs,namer.getName(lhs));
}
break;
case CLASS:
Node classMembersNode=n.getLastChild();
nameClassMethods(classMembersNode,namer.getName(n));
break;
default :
break;
}
}
