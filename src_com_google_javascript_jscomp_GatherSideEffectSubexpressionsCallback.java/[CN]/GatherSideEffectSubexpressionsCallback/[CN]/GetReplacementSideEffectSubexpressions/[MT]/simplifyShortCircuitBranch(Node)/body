{
  List<Node> parts=new ArrayList<>();
  NodeTraversal.traverseEs6(compiler,node,new GatherSideEffectSubexpressionsCallback(compiler,new GetReplacementSideEffectSubexpressions(compiler,parts)));
  Node ret=null;
  for (  Node part : parts) {
    if (ret != null) {
      ret=IR.comma(ret,part).srcref(node);
    }
 else {
      ret=part;
    }
  }
  if (ret == null) {
    throw new IllegalArgumentException("expected at least one side effect subexpression in short " + "circuit branch.");
  }
  return ret;
}
