{
  if (n.isString() && !parent.isGetProp() && !parent.isRegExp()) {
    String str=n.getString();
    if ("undefined".equals(str)) {
      return;
    }
    if (blacklist != null && blacklist.reset(str).find()) {
      return;
    }
    if (aliasableStrings == null || aliasableStrings.contains(str)) {
      StringOccurrence occurrence=new StringOccurrence(n,parent);
      StringInfo info=getOrCreateStringInfo(str);
      info.occurrences.add(occurrence);
      info.numOccurrences++;
      if (t.getScope().getClosestHoistScope().isGlobal() || isInThrowExpression(n)) {
        info.numOccurrencesInfrequentlyExecuted++;
      }
      JSModule module=t.getModule();
      if (info.numOccurrences != 1) {
        if (module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn(module,info.moduleToContainDecl)) {
          module=moduleGraph.getDeepestCommonDependency(module,info.moduleToContainDecl);
        }
 else {
          return;
        }
      }
      Node varParent=moduleVarParentMap.get(module);
      if (varParent == null) {
        varParent=compiler.getNodeForCodeInsertion(module);
        moduleVarParentMap.put(module,varParent);
      }
      info.moduleToContainDecl=module;
      info.parentForNewVarDecl=varParent;
      info.siblingToInsertVarDeclBefore=varParent.getFirstChild();
    }
  }
}
