{
  SymbolTable table=createSymbolTable("/** @constructor */ var Foo = function() {};\n" + "/** @public */ Foo.prototype.bar;\n" + "/** @protected */ Foo.prototype.baz;\n"+ "/** @package */ Foo.prototype.quux;\n"+ "/** @private */ Foo.prototype.xyzzy;\n"+ "Foo.prototype.plugh;\n"+ "/** @constructor @extends {Foo} */ var SubFoo = function() {};\n"+ "/** @override */ SubFoo.prototype.bar = function() {};\n"+ "/** @override */ SubFoo.prototype.baz = function() {};\n"+ "/** @override */ SubFoo.prototype.quux = function() {};\n"+ "/** @override */ SubFoo.prototype.xyzzy = function() {};\n"+ "/** @override */ SubFoo.prototype.plugh = function() {};");
  assertEquals(Visibility.PUBLIC,getGlobalVar(table,"Foo.prototype.bar").getJSDocInfo().getVisibility());
  assertEquals(Visibility.PROTECTED,getGlobalVar(table,"Foo.prototype.baz").getJSDocInfo().getVisibility());
  assertEquals(Visibility.PACKAGE,getGlobalVar(table,"Foo.prototype.quux").getJSDocInfo().getVisibility());
  assertEquals(Visibility.PRIVATE,getGlobalVar(table,"Foo.prototype.xyzzy").getJSDocInfo().getVisibility());
  assertNull(getGlobalVar(table,"Foo.prototype.plugh").getJSDocInfo());
  assertEquals(Visibility.INHERITED,getGlobalVar(table,"SubFoo.prototype.bar").getJSDocInfo().getVisibility());
  assertEquals(Visibility.INHERITED,getGlobalVar(table,"SubFoo.prototype.baz").getJSDocInfo().getVisibility());
  assertEquals(Visibility.INHERITED,getGlobalVar(table,"SubFoo.prototype.quux").getJSDocInfo().getVisibility());
  assertEquals(Visibility.INHERITED,getGlobalVar(table,"SubFoo.prototype.xyzzy").getJSDocInfo().getVisibility());
  assertEquals(Visibility.INHERITED,getGlobalVar(table,"SubFoo.prototype.plugh").getJSDocInfo().getVisibility());
}
