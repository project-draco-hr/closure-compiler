{
  builder.recordType(new JSTypeExpression(JsDocInfoParser.parseTypeString("{foo: number}"),""));
  JSDocInfo info=builder.buildAndReset();
  assertEquals("/**@type {{foo:number}}\n*/",JSDocInfoPrinter.print(info));
  builder.recordType(new JSTypeExpression(JsDocInfoParser.parseTypeString("{foo}"),""));
  info=builder.buildAndReset();
  assertEquals("/**@type {{foo}}\n*/",JSDocInfoPrinter.print(info));
  builder.recordType(new JSTypeExpression(JsDocInfoParser.parseTypeString("{foo, bar}"),""));
  info=builder.buildAndReset();
  assertEquals("/**@type {{foo,bar}}\n*/",JSDocInfoPrinter.print(info));
  builder.recordType(new JSTypeExpression(JsDocInfoParser.parseTypeString("{foo: number, bar}"),""));
  info=builder.buildAndReset();
  assertEquals("/**@type {{foo:number,bar}}\n*/",JSDocInfoPrinter.print(info));
  builder.recordType(new JSTypeExpression(JsDocInfoParser.parseTypeString("{foo, bar: number}"),""));
  info=builder.buildAndReset();
  assertEquals("/**@type {{foo,bar:number}}\n*/",JSDocInfoPrinter.print(info));
}
