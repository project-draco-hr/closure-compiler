{
  builder.recordType(new JSTypeExpression(JsDocInfoParser.parseTypeString("{foo: number}"),""));
  JSDocInfo info=builder.buildAndReset();
  assertEquals("/** @type {{foo:number}} */ ",jsDocInfoPrinter.print(info));
  builder.recordType(new JSTypeExpression(JsDocInfoParser.parseTypeString("{foo}"),""));
  info=builder.buildAndReset();
  assertEquals("/** @type {{foo}} */ ",jsDocInfoPrinter.print(info));
  builder.recordType(new JSTypeExpression(JsDocInfoParser.parseTypeString("{foo, bar}"),""));
  info=builder.buildAndReset();
  assertEquals("/** @type {{foo,bar}} */ ",jsDocInfoPrinter.print(info));
  builder.recordType(new JSTypeExpression(JsDocInfoParser.parseTypeString("{foo: number, bar}"),""));
  info=builder.buildAndReset();
  assertEquals("/** @type {{foo:number,bar}} */ ",jsDocInfoPrinter.print(info));
  builder.recordType(new JSTypeExpression(JsDocInfoParser.parseTypeString("{foo, bar: number}"),""));
  info=builder.buildAndReset();
  assertEquals("/** @type {{foo,bar:number}} */ ",jsDocInfoPrinter.print(info));
}
