{
  if (colorings.isEmpty() || !n.isName() || parent.isFunction()) {
    return;
  }
  Var var=t.getScope().getVar(n.getString());
  GraphNode<Var,?> vNode=colorings.peek().getGraph().getNode(var);
  if (vNode == null) {
    return;
  }
  Var coalescedVar=colorings.peek().getPartitionSuperNode(var);
  if (!usePseudoNames) {
    if (vNode.getValue().equals(coalescedVar)) {
      return;
    }
    n.setString(coalescedVar.name);
    compiler.reportCodeChange();
    if (parent.isVar()) {
      removeVarDeclaration(n);
    }
  }
 else {
    String pseudoName=null;
    Set<String> allMergedNames=Sets.newTreeSet();
    for (Iterator<Var> i=t.getScope().getVars(); i.hasNext(); ) {
      Var iVar=i.next();
      if (colorings.peek().getGraph().getNode(iVar) != null && coalescedVar.equals(colorings.peek().getPartitionSuperNode(iVar))) {
        allMergedNames.add(iVar.name);
      }
    }
    if (allMergedNames.size() == 1) {
      return;
    }
    pseudoName=Joiner.on("_").join(allMergedNames);
    while (t.getScope().isDeclared(pseudoName,true)) {
      pseudoName+="$";
    }
    n.setString(pseudoName);
    compiler.reportCodeChange();
    if (!vNode.getValue().equals(coalescedVar) && parent.isVar()) {
      removeVarDeclaration(n);
    }
  }
}
