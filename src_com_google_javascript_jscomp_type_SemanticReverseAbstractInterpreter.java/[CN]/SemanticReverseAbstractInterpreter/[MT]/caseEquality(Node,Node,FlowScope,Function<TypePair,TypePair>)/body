{
  JSType leftType=getTypeIfRefinable(left,blindScope);
  boolean leftIsRefineable;
  if (leftType != null) {
    leftIsRefineable=true;
  }
 else {
    leftIsRefineable=false;
    leftType=left.getJSType();
  }
  JSType rightType=getTypeIfRefinable(right,blindScope);
  boolean rightIsRefineable;
  if (rightType != null) {
    rightIsRefineable=true;
  }
 else {
    rightIsRefineable=false;
    rightType=right.getJSType();
  }
  TypePair merged=merging.apply(new TypePair(leftType,rightType));
  if (merged != null) {
    return maybeRestrictTwoNames(blindScope,left,leftType,leftIsRefineable ? merged.typeA : null,right,rightType,rightIsRefineable ? merged.typeB : null);
  }
  return blindScope;
}
