{
  String tag="org.mozilla.javascript.Interpreter.interpretLoop";
  StringBuffer sb=new StringBuffer(nativeStackTrace.length() + 1000);
  String lineSeparator=SecurityUtilities.getSystemProperty("line.separator");
  CallFrame[] array=(CallFrame[])ex.interpreterStackInfo;
  int[] linePC=ex.interpreterLineData;
  int arrayIndex=array.length;
  int linePCIndex=linePC.length;
  int offset=0;
  while (arrayIndex != 0) {
    --arrayIndex;
    int pos=nativeStackTrace.indexOf(tag,offset);
    if (pos < 0) {
      break;
    }
    pos+=tag.length();
    for (; pos != nativeStackTrace.length(); ++pos) {
      char c=nativeStackTrace.charAt(pos);
      if (c == '\n' || c == '\r') {
        break;
      }
    }
    sb.append(nativeStackTrace.substring(offset,pos));
    offset=pos;
    CallFrame frame=array[arrayIndex];
    while (frame != null) {
      if (linePCIndex == 0)       Kit.codeBug();
      --linePCIndex;
      InterpreterData idata=frame.idata;
      sb.append(lineSeparator);
      sb.append("\tat script");
      if (idata.itsName != null && idata.itsName.length() != 0) {
        sb.append('.');
        sb.append(idata.itsName);
      }
      sb.append('(');
      sb.append(idata.itsSourceFile);
      int pc=linePC[linePCIndex];
      if (pc >= 0) {
        sb.append(':');
        sb.append(getIndex(idata.itsICode,pc));
      }
      sb.append(')');
      frame=frame.parentFrame;
    }
  }
  sb.append(nativeStackTrace.substring(offset));
  return sb.toString();
}
