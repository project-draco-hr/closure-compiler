{
  if (!objectType.isEmptyType() && reportMissingProperties && (!NodeUtil.isPropertyTest(compiler,n) || objectType.isStruct())&& !typeRegistry.canPropertyBeDefined(objectType,propName)) {
    boolean lowConfidence=objectType.isUnknownType() || objectType.isEquivalentTo(getNativeType(OBJECT_TYPE));
    SuggestionPair pair=null;
    if (!lowConfidence) {
      pair=getClosestPropertySuggestion(objectType,propName);
    }
    if (pair != null && pair.distance * 4 < propName.length()) {
      report(t,n.getLastChild(),INEXISTENT_PROPERTY_WITH_SUGGESTION,propName,typeRegistry.getReadableTypeName(n.getFirstChild()),pair.suggestion);
    }
 else {
      DiagnosticType reportType=lowConfidence ? POSSIBLE_INEXISTENT_PROPERTY : INEXISTENT_PROPERTY;
      report(t,n.getLastChild(),reportType,propName,typeRegistry.getReadableTypeName(n.getFirstChild()));
    }
  }
}
