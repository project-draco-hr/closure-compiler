{
  Iterator<Node> arguments=call.children().iterator();
  arguments.next();
  Iterator<Node> parameters=functionType.getParameters().iterator();
  int ordinal=0;
  while (arguments.hasNext() && parameters.hasNext()) {
    Node parameter=parameters.next();
    Node argument=arguments.next();
    ordinal++;
    validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
  }
  int numArgs=call.getChildCount() - 1;
  int minArgs=functionType.getMinArguments();
  int maxArgs=functionType.getMaxArguments();
  if (minArgs > numArgs || maxArgs < numArgs) {
    report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs != Integer.MAX_VALUE ? " and no more than " + maxArgs + " argument(s)" : "");
  }
}
