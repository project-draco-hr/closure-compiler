{
  Node constructor=n.getFirstChild();
  JSType type=getJSType(constructor).restrictByNotNullOrUndefined();
  if (!couldBeAConstructor(type)) {
    report(t,n,NOT_A_CONSTRUCTOR);
    ensureTyped(t,n);
    return;
  }
  FunctionType fnType=type.toMaybeFunctionType();
  if (fnType != null && fnType.isAbstract()) {
    report(t,n,INSTANTIATE_ABSTRACT_CLASS);
  }
  if (fnType != null && fnType.hasInstanceType()) {
    visitParameterList(t,n,fnType);
    ensureTyped(t,n,fnType.getInstanceType());
  }
 else {
    ensureTyped(t,n);
  }
}
