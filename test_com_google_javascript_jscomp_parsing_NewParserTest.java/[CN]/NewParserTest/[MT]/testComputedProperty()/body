{
  testComputedProperty(Joiner.on('\n').join("var prop = 'some complex expression';","","var x = {","  [prop]: 'foo'","}"));
  testComputedProperty(Joiner.on('\n').join("var prop = 'some complex expression';","","var x = {","  [prop + '!']: 'foo'","}"));
  testComputedProperty(Joiner.on('\n').join("var prop;","","var x = {","  [prop = 'some expr']: 'foo'","}"));
  testComputedProperty(Joiner.on('\n').join("var x = {","  [1 << 8]: 'foo'","}"));
  String js=Joiner.on('\n').join("var x = {","  [1 << 8]: 'foo',","  [1 << 7]: 'bar'","}");
  mode=LanguageMode.ECMASCRIPT6;
  parse(js);
  mode=LanguageMode.ECMASCRIPT5;
  String warning="this language feature is only supported in es6 mode:" + " computed property";
  parseWarning(js,warning,warning);
}
