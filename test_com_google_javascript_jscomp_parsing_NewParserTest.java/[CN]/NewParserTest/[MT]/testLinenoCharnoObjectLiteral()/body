{
  Node n=parse("\n\n var a = {a:0\n,b :1};").getFirstChild().getFirstChild().getFirstChild();
  assertThat(n.getType()).isEqualTo(Token.OBJECTLIT);
  assertThat(n.getLineno()).isEqualTo(3);
  assertThat(n.getCharno()).isEqualTo(9);
  Node key=n.getFirstChild();
  assertThat(key.getType()).isEqualTo(Token.STRING_KEY);
  assertThat(key.getLineno()).isEqualTo(3);
  assertThat(key.getCharno()).isEqualTo(10);
  Node value=key.getFirstChild();
  assertThat(value.getType()).isEqualTo(Token.NUMBER);
  assertThat(value.getLineno()).isEqualTo(3);
  assertThat(value.getCharno()).isEqualTo(12);
  key=key.getNext();
  assertThat(key.getType()).isEqualTo(Token.STRING_KEY);
  assertThat(key.getLineno()).isEqualTo(4);
  assertThat(key.getCharno()).isEqualTo(1);
  value=key.getFirstChild();
  assertThat(value.getType()).isEqualTo(Token.NUMBER);
  assertThat(value.getLineno()).isEqualTo(4);
  assertThat(value.getCharno()).isEqualTo(4);
}
