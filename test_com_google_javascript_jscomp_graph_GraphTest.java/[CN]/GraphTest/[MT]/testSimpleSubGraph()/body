{
  UndiGraph<String,String> graph=LinkedUndirectedGraph.create();
  graph.createNode("a");
  graph.createNode("b");
  graph.createNode("c");
  graph.connect("a","--","b");
  SubGraph<String,String> subGraph=graph.newSubGraph();
  subGraph.addNode("a");
  subGraph.addNode("b");
  try {
    subGraph.addNode("d");
    fail("SubGraph should not allow add for node that is not in graph.");
  }
 catch (  IllegalArgumentException e) {
  }
  assertThat(subGraph.isIndependentOf("a")).isFalse();
  assertThat(subGraph.isIndependentOf("b")).isFalse();
  assertThat(subGraph.isIndependentOf("c")).isTrue();
}
