{
  type=type.restrictByNotNullOrUndefined();
  if (type.isUnionType()) {
    Set<JSType> types=Sets.newHashSet(type);
    for (    JSType alt : type.toMaybeUnionType().getAlternates()) {
      types.addAll(getTypesToSkipForTypeNonUnion(type));
    }
    return ImmutableSet.copyOf(types);
  }
 else   if (type.isEnumElementType()) {
    return getTypesToSkipForType(type.toMaybeEnumElementType().getPrimitiveType());
  }
  return ImmutableSet.copyOf(getTypesToSkipForTypeNonUnion(type));
}
