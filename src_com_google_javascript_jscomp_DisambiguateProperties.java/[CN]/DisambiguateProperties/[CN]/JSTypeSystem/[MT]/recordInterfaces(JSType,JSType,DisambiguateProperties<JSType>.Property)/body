{
  ObjectType objType=ObjectType.cast(type);
  if (objType != null) {
    FunctionType constructor;
    if (objType.isFunctionType()) {
      constructor=objType.toMaybeFunctionType();
    }
 else     if (objType.isFunctionPrototypeType()) {
      constructor=objType.getOwnerFunction();
    }
 else {
      constructor=objType.getConstructor();
    }
    while (constructor != null) {
      for (      ObjectType itype : constructor.getImplementedInterfaces()) {
        JSType top=getTypeWithProperty(p.name,itype);
        if (top != null) {
          p.addType(itype,top,relatedType);
        }
 else {
          recordInterfaces(itype,relatedType,p);
        }
        if (p.skipRenaming) {
          return;
        }
      }
      if (constructor.isInterface() || constructor.isConstructor()) {
        constructor=constructor.getSuperClassConstructor();
      }
 else {
        constructor=null;
      }
    }
  }
}
