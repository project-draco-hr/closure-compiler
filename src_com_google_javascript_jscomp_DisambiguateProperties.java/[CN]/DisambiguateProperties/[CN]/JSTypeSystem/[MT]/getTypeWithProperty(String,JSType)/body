{
  if (!(type instanceof ObjectType)) {
    if (type.autoboxesTo() != null) {
      type=type.autoboxesTo();
    }
 else {
      return null;
    }
  }
  if ("prototype".equals(field)) {
    return null;
  }
  ObjectType foundType=null;
  ObjectType objType=ObjectType.cast(type);
  while (objType != null && objType.getImplicitPrototype() != objType) {
    if (objType.hasOwnProperty(field)) {
      foundType=objType;
    }
    objType=objType.getImplicitPrototype();
  }
  if (foundType == null) {
    ObjectType maybeType=ObjectType.cast(registry.getGreatestSubtypeWithProperty(type,field));
    if (maybeType != null && maybeType.hasOwnProperty(field)) {
      foundType=maybeType;
    }
  }
  return foundType;
}
