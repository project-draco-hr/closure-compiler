{
  if (shouldRename()) {
    int count=0;
    while (true) {
      checkState(++count < 10,"Stuck in loop expanding types to skip.");
      Set<JSType> rootTypesToSkip=new HashSet<>();
      for (      JSType subType : typesToSkip) {
        rootTypesToSkip.add(types.find(subType));
      }
      typesToSkip.addAll(rootTypesToSkip);
      Set<JSType> newTypesToSkip=new HashSet<>();
      Set<JSType> allTypes=types.elements();
      int originalTypesSize=allTypes.size();
      for (      JSType subType : allTypes) {
        if (!typesToSkip.contains(subType) && typesToSkip.contains(types.find(subType))) {
          newTypesToSkip.add(subType);
        }
      }
      for (      JSType newType : newTypesToSkip) {
        addTypeToSkip(newType);
      }
      if (types.elements().size() == originalTypesSize) {
        break;
      }
    }
  }
}
