{
  this.compiler=compiler;
  this.registry=compiler.getTypeRegistry();
  this.BOTTOM_OBJECT=this.registry.getNativeType(JSTypeNative.NO_OBJECT_TYPE).toObjectType();
  this.invalidatingTypes=new HashSet<>(ImmutableSet.of(registry.getNativeType(JSTypeNative.ALL_TYPE),registry.getNativeType(JSTypeNative.NO_OBJECT_TYPE),registry.getNativeType(JSTypeNative.NO_TYPE),registry.getNativeType(JSTypeNative.FUNCTION_PROTOTYPE),registry.getNativeType(JSTypeNative.FUNCTION_INSTANCE_TYPE),registry.getNativeType(JSTypeNative.OBJECT_PROTOTYPE),registry.getNativeType(JSTypeNative.TOP_LEVEL_PROTOTYPE),registry.getNativeType(JSTypeNative.UNKNOWN_TYPE)));
  this.propertiesToErrorFor=propertiesToErrorFor;
  if (!this.propertiesToErrorFor.isEmpty()) {
    this.invalidationMap=LinkedHashMultimap.create();
  }
 else {
    this.invalidationMap=null;
  }
}
