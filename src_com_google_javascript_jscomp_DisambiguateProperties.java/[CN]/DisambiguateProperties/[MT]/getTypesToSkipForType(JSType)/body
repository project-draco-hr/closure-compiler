{
  type=type.restrictByNotNullOrUndefined();
  if (type.isUnionType()) {
    ImmutableSet.Builder<JSType> types=ImmutableSet.builder();
    types.add(type);
    for (    JSType alt : type.toMaybeUnionType().getAlternates()) {
      types.addAll(getTypesToSkipForTypeNonUnion(alt));
    }
    return types.build();
  }
 else   if (type.isEnumElementType()) {
    return getTypesToSkipForType(type.toMaybeEnumElementType().getPrimitiveType());
  }
  return ImmutableSet.copyOf(getTypesToSkipForTypeNonUnion(type));
}
