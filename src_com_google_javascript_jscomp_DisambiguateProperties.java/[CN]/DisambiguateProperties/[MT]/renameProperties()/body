{
  int propsRenamed=0, propsSkipped=0, instancesRenamed=0, instancesSkipped=0, singleTypeProps=0;
  for (  Property prop : properties.values()) {
    if (prop.shouldRename()) {
      Map<T,String> propNames=buildPropNames(prop.getTypes(),prop.name);
      ++propsRenamed;
      prop.expandTypesToSkip();
      for (      Node node : prop.renameNodes) {
        T rootType=prop.rootTypes.get(node);
        if (prop.shouldRename(rootType)) {
          String newName=propNames.get(rootType);
          node.setString(newName);
          compiler.reportCodeChange();
          ++instancesRenamed;
        }
 else {
          ++instancesSkipped;
        }
      }
    }
 else {
      if (prop.skipRenaming) {
        ++propsSkipped;
      }
 else {
        ++singleTypeProps;
      }
    }
  }
  logger.fine("Renamed " + instancesRenamed + " instances of "+ propsRenamed+ " properties.");
  logger.fine("Skipped renaming " + instancesSkipped + " invalidated "+ "properties, "+ propsSkipped+ " instances of properties "+ "that were skipped for specific types and "+ singleTypeProps+ " properties that were referenced from only one type.");
}
