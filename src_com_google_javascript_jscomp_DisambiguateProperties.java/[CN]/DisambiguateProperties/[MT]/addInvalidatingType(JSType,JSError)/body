{
  type=type.restrictByNotNullOrUndefined();
  if (type.isUnionType()) {
    for (    JSType alt : type.toMaybeUnionType().getAlternatesWithoutStructuralTyping()) {
      addInvalidatingType(alt,error);
    }
  }
 else   if (type.isEnumElementType()) {
    addInvalidatingType(type.toMaybeEnumElementType().getPrimitiveType(),error);
  }
 else {
    typeSystem.addInvalidatingType(type);
    recordInvalidationError(type,error);
    ObjectType objType=ObjectType.cast(type);
    if (objType != null && objType.getImplicitPrototype() != null) {
      typeSystem.addInvalidatingType(objType.getImplicitPrototype());
      recordInvalidationError(objType.getImplicitPrototype(),error);
    }
    if (objType != null && objType.isConstructor() && objType.isFunctionType()) {
      typeSystem.addInvalidatingType(objType.toMaybeFunctionType().getInstanceType());
    }
  }
}
