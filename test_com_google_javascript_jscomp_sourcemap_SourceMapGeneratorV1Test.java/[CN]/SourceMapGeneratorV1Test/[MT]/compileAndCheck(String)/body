{
  RunResult result=compile(js);
  Map<String,Token> originalTokens=findTokens(js);
  Map<String,Token> resultTokens=findTokens(result.generatedSource);
  assertEquals(originalTokens.size(),resultTokens.size());
  SourceMapReader reader=new SourceMapReader();
  try {
    reader.parse(result.sourceMapFileContent);
  }
 catch (  SourceMapParseException e) {
    throw new RuntimeException("unexpected exception",e);
  }
  for (  Token token : resultTokens.values()) {
    OriginalMapping mapping=reader.getMappingForLine(token.position.getLine() + 1,token.position.getColumn() + 1);
    assertNotNull(mapping);
    Token inputToken=originalTokens.get(token.tokenName);
    assertNotNull(inputToken);
    assertEquals(mapping.position.getLine(),inputToken.position.getLine() + 1);
    if (!inputToken.tokenName.startsWith("STR")) {
      assertTrue(!mapping.originalName.isEmpty());
    }
    if (!mapping.originalName.isEmpty()) {
      assertEquals(mapping.originalName,"__" + inputToken.tokenName + "__");
    }
  }
}
