{
  fold("f:{if(true){a();break f;}else;b();}","f:{if(true){a()}else{b()}}");
  fold("f:{if(false){a();break f;}else;b();break f;}","f:{if(false){a()}else{b()}}");
  fold("f:{if(a()){b();break f;}else;c();}","f:{if(a()){b();}else{c();}}");
  fold("f:{if(a()){b()}else{c();break f;}}","f:{if(a()){b()}else{c();}}");
  fold("f:{if(a()){b();break f;}else;}","f:{if(a()){b();}else;}");
  fold("f:{if(a()){break f;}else;}","f:{if(a()){}else;}");
  fold("f:while(a())break f;","f:while(a())break f");
  foldSame("f:for(x in a())break f");
  fold("f:{while(a())break;}","f:{while(a())break;}");
  foldSame("f:{for(x in a())break}");
  fold("f:try{break f;}catch(e){break f;}","f:try{}catch(e){}");
  fold("f:try{if(a()){break f;}else{break f;} break f;}catch(e){}","f:try{if(a()){}else{}}catch(e){}");
  fold("f:g:break f","");
  fold("f:g:{if(a()){break f;}else{break f;} break f;}","f:g:{if(a()){}else{}}");
}
