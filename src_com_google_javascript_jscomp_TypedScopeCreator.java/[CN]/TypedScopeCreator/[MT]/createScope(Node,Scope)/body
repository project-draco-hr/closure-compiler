{
  Scope newScope=null;
  if (parent == null) {
    newScope=createInitialScope(root);
    GlobalScopeBuilder scopeBuilder=new GlobalScopeBuilder(newScope);
    NodeTraversal.traverse(compiler,root,scopeBuilder);
    for (    Node functionNode : scopeBuilder.nonExternFunctions) {
      JSType type=functionNode.getJSType();
      if (type != null && type instanceof FunctionType) {
        FunctionType fnType=(FunctionType)type;
        ObjectType fnThisType=fnType.getTypeOfThis();
        if (!fnThisType.isUnknownType()) {
          NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
        }
      }
    }
    codingConvention.defineDelegateProxyProperties(typeRegistry,newScope,delegateProxyMap);
  }
 else {
    newScope=new Scope(parent,root);
    (new LocalScopeBuilder(newScope)).build();
  }
  typeRegistry.resolveTypesInScope(newScope);
  return newScope;
}
