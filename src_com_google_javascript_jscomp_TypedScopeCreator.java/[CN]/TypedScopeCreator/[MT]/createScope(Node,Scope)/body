{
  Scope newScope=null;
  AbstractScopeBuilder scopeBuilder=null;
  if (parent == null) {
    newScope=createInitialScope(root);
    GlobalScopeBuilder globalScopeBuilder=new GlobalScopeBuilder(newScope);
    scopeBuilder=globalScopeBuilder;
    NodeTraversal.traverse(compiler,root,scopeBuilder);
  }
 else {
    newScope=new Scope(parent,root);
    LocalScopeBuilder localScopeBuilder=new LocalScopeBuilder(newScope);
    scopeBuilder=localScopeBuilder;
    localScopeBuilder.build();
  }
  scopeBuilder.resolveStubDeclarations();
  scopeBuilder.resolveTypes();
  for (  Node functionNode : scopeBuilder.nonExternFunctions) {
    JSType type=functionNode.getJSType();
    if (type != null && type instanceof FunctionType) {
      FunctionType fnType=(FunctionType)type;
      ObjectType fnThisType=fnType.getTypeOfThis();
      if (!fnThisType.isUnknownType()) {
        NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
      }
    }
  }
  if (parent == null) {
    codingConvention.defineDelegateProxyPrototypeProperties(typeRegistry,newScope,delegateProxyPrototypes,delegateCallingConventions);
  }
  return newScope;
}
