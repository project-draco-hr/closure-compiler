{
  JSType type=null;
  JSDocInfo info=objectLit.getJSDocInfo();
  if (info != null && info.getLendsName() != null) {
    String lendsName=info.getLendsName();
    Var lendsVar=scope.getVar(lendsName);
    if (lendsVar == null) {
      compiler.report(JSError.make(sourceName,objectLit,UNKNOWN_LENDS,lendsName));
    }
 else {
      type=lendsVar.getType();
      if (type == null) {
        type=typeRegistry.getNativeType(UNKNOWN_TYPE);
      }
      if (!type.isSubtype(typeRegistry.getNativeType(OBJECT_TYPE))) {
        compiler.report(JSError.make(sourceName,objectLit,LENDS_ON_NON_OBJECT,lendsName,type.toString()));
        type=null;
      }
 else {
        objectLit.setJSType(type);
      }
    }
  }
  info=NodeUtil.getBestJSDocInfo(objectLit);
  Node lValue=NodeUtil.getBestLValue(objectLit);
  String lValueName=NodeUtil.getBestLValueName(lValue);
  boolean createdEnumType=false;
  if (info != null && info.hasEnumParameterType()) {
    type=createEnumTypeFromNodes(objectLit,lValueName,info,lValue);
    createdEnumType=true;
  }
  if (type == null) {
    type=typeRegistry.createAnonymousObjectType();
  }
  setDeferredType(objectLit,type);
  if (!createdEnumType) {
    processObjectLitProperties(t,objectLit,ObjectType.cast(objectLit.getJSType()));
  }
}
