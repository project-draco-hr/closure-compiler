{
  FunctionType superClassCtor=fnType.getSuperClassConstructor();
  ObjectType.Property prototypeSlot=fnType.getSlot("prototype");
  prototypeSlot.setNode(n);
  String prototypeName=variableName + ".prototype";
  Var prototypeVar=scopeToDeclareIn.getVar(prototypeName);
  if (prototypeVar != null && prototypeVar.scope == scopeToDeclareIn) {
    scopeToDeclareIn.undeclare(prototypeVar);
  }
  scopeToDeclareIn.declare(prototypeName,n,prototypeSlot.getType(),input,superClassCtor == null || superClassCtor.getInstanceType().isEquivalentTo(getNativeType(OBJECT_TYPE)));
  if (newVar.getInitialValue() == null && !n.isFromExterns()) {
    compiler.report(JSError.make(sourceName,n,fnType.isConstructor() ? CTOR_INITIALIZER : IFACE_INITIALIZER,variableName));
  }
}
