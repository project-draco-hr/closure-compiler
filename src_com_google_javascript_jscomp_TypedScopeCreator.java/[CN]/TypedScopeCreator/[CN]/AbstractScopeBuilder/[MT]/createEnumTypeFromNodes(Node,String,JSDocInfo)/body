{
  Preconditions.checkNotNull(info);
  Preconditions.checkState(info.hasEnumParameterType());
  EnumType enumType=null;
  if (rValue != null && rValue.isQualifiedName()) {
    TypedVar var=scope.getVar(rValue.getQualifiedName());
    if (var != null && var.getType() instanceof EnumType) {
      enumType=(EnumType)var.getType();
    }
  }
  if (enumType == null) {
    JSType elementsType=info.getEnumParameterType().evaluate(scope,typeRegistry);
    enumType=typeRegistry.createEnumType(name,rValue,elementsType);
    if (rValue != null && rValue.isObjectLit()) {
      Node key=rValue.getFirstChild();
      while (key != null) {
        String keyName=key.getString();
        Preconditions.checkNotNull(keyName,"Invalid enum key: %s",key);
        enumType.defineElement(keyName,key);
        key=key.getNext();
      }
    }
  }
  if (name != null && scope.isGlobal()) {
    typeRegistry.declareType(name,enumType.getElementsType());
  }
  return enumType;
}
