{
  if (info != null && info.hasType()) {
    return getDeclaredTypeInAnnotation(t,lValue,info);
  }
 else   if (rValue != null && rValue.getType() == Token.FUNCTION && shouldUseFunctionLiteralType((FunctionType)rValue.getJSType(),info,lValue)) {
    return rValue.getJSType();
  }
 else   if (info != null && info.hasEnumParameterType()) {
    if (rValue != null && rValue.getType() == Token.OBJECTLIT) {
      return rValue.getJSType();
    }
 else {
      return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
    }
  }
 else   if (info != null && (info.isConstructor() || info.isInterface())) {
    return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
  }
 else {
    return getDeclaredTypeInAnnotation(t,lValue,info);
  }
}
