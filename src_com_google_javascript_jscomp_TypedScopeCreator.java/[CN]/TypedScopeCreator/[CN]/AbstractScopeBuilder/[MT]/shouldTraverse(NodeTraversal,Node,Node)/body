{
  inputId=t.getInputId();
  if (n.isFunction() || n.isScript()) {
    Preconditions.checkNotNull(inputId);
    sourceName=NodeUtil.getSourceName(n);
  }
  boolean descend=parent == null || !parent.isFunction() || n == parent.getFirstChild() || parent == scope.getRootNode();
  if (descend) {
    if (NodeUtil.isStatementParent(n)) {
      for (Node child=n.getFirstChild(); child != null; child=child.getNext()) {
        if (NodeUtil.isHoistedFunctionDeclaration(child)) {
          defineFunctionLiteral(child,n);
        }
      }
    }
  }
  return descend;
}
