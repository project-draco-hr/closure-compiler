{
  Node astParameters=functionNode.getSecondChild();
  Node iifeArgumentNode=null;
  if (NodeUtil.isCallOrNewTarget(functionNode)) {
    iifeArgumentNode=functionNode.getNext();
  }
  FunctionType functionType=JSType.toMaybeFunctionType(functionNode.getJSType());
  if (functionType != null) {
    Node jsDocParameters=functionType.getParametersNode();
    if (jsDocParameters != null) {
      Node jsDocParameter=jsDocParameters.getFirstChild();
      for (      Node astParameter : astParameters.children()) {
        JSType paramType=jsDocParameter == null ? unknownType : jsDocParameter.getJSType();
        boolean inferred=paramType == null || paramType == unknownType;
        if (iifeArgumentNode != null && inferred) {
          String argumentName=iifeArgumentNode.getQualifiedName();
          TypedVar argumentVar=argumentName == null || scope.getParent() == null ? null : scope.getParent().getVar(argumentName);
          if (argumentVar != null && !argumentVar.isTypeInferred()) {
            paramType=argumentVar.getType();
          }
        }
        if (paramType == null) {
          paramType=unknownType;
        }
        defineSlot(astParameter,functionNode,paramType,inferred);
        if (jsDocParameter != null) {
          jsDocParameter=jsDocParameter.getNext();
        }
        if (iifeArgumentNode != null) {
          iifeArgumentNode=iifeArgumentNode.getNext();
        }
      }
    }
  }
}
