{
  Scope scope=t.getScope();
  for (  Var v : scope.getVarIterable()) {
    Node n=v.getNode();
    Node parent=n.getParent();
    if (parent.isVar() && n.hasChildren() && n.getFirstChild().isQualifiedName()) {
      String name=n.getString();
      Var aliasVar=scope.getVar(name);
      aliases.put(name,aliasVar);
      String qualifiedName=aliasVar.getInitialValue().getQualifiedName();
      transformation.addAlias(name,qualifiedName);
      int rootIndex=qualifiedName.indexOf(".");
      if (rootIndex != -1) {
        String qNameRoot=qualifiedName.substring(0,rootIndex);
        if (!aliases.containsKey(qNameRoot)) {
          forbiddenLocals.add(qNameRoot);
        }
      }
    }
 else     if (v.isBleedingFunction()) {
    }
 else     if (parent.getType() == Token.LP) {
    }
 else {
      report(t,n,GOOG_SCOPE_NON_ALIAS_LOCAL,n.getString());
    }
  }
}
