{
  Random random=new Random(0);
  Set<String> reservedNames=ImmutableSet.of();
  String prefix="prefix";
  int prefixLen=prefix.length();
  RandomNameGenerator ng=new RandomNameGenerator(reservedNames,prefix,null,random);
  int len1=RandomNameGenerator.NONFIRST_CHAR.length;
  int len2=RandomNameGenerator.NONFIRST_CHAR.length;
  int count=len1 * (1 + len2);
  String[] result=generate(ng,count);
  Set<String> resultSet=Sets.newHashSet(result);
  assertThat(resultSet).hasSize(count);
  for (int i=0; i < len1; ++i) {
    assertThat(result[i].length()).isEqualTo(prefixLen + 1);
  }
  for (int i=len1; i < count; ++i) {
    assertThat(result[i].length()).isEqualTo(prefixLen + 2);
  }
  int countPass=0;
  int countTest=0;
  for (int i1=0; i1 < len1; ++i1) {
    for (int i2=0; i2 < len2; ++i2, ++countTest) {
      if (result[i1].charAt(prefixLen) != result[len1 + i1 * len2 + i2].charAt(prefixLen + 1)) {
        countPass++;
      }
    }
  }
  assertThat(100.0 * countPass / countTest).isGreaterThan(80.0);
  countPass=0;
  countTest=0;
  for (int i=0; i < count - 1; ++i) {
    if (result[i].compareTo(result[i + 1]) > 0) {
      countPass++;
    }
  }
  assertThat(100.0 * countPass / countTest).isGreaterThan(25.0);
}
