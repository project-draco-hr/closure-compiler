{
  boolean overflow=false;
  int start=state.cp;
  char[] src=state.cpbegin;
  int value=c - '0';
  for (; state.cp != state.cpend; ++state.cp) {
    c=src[state.cp];
    if (!isDigit(c)) {
      break;
    }
    if (!overflow) {
      int digit=c - '0';
      if (value < (maxValue - digit) / 10) {
        value=value * 10 + digit;
      }
 else {
        overflow=true;
        value=maxValue;
      }
    }
  }
  if (overflow) {
    reportError(overflowMessageId,String.valueOf(src,start,state.cp - start));
  }
  return value;
}
