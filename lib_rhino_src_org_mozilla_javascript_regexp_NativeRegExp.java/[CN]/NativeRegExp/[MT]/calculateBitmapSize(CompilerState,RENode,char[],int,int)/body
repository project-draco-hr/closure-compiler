{
  char rangeStart=0;
  char c;
  int n;
  int nDigits;
  int i;
  int max=0;
  boolean inRange=false;
  target.bmsize=0;
  if (index == end)   return true;
  if (src[index] == '^')   ++index;
  while (index != end) {
    int localMax=0;
    nDigits=2;
switch (src[index]) {
case '\\':
      ++index;
    c=src[index++];
switch (c) {
case 'b':
    localMax=0x8;
  break;
case 'f':
localMax=0xC;
break;
case 'n':
localMax=0xA;
break;
case 'r':
localMax=0xD;
break;
case 't':
localMax=0x9;
break;
case 'v':
localMax=0xB;
break;
case 'c':
if ((index < end) && isControlLetter(src[index])) localMax=(char)(src[index++] & 0x1F);
 else --index;
localMax='\\';
break;
case 'u':
nDigits+=2;
case 'x':
n=0;
for (i=0; (i < nDigits) && (index < end); i++) {
c=src[index++];
n=Kit.xDigitToInt(c,n);
if (n < 0) {
index-=(i + 1);
n='\\';
break;
}
}
localMax=n;
break;
case 'd':
if (inRange) {
reportError("msg.bad.range","");
return false;
}
localMax='9';
break;
case 'D':
case 's':
case 'S':
case 'w':
case 'W':
if (inRange) {
reportError("msg.bad.range","");
return false;
}
target.bmsize=65536;
return true;
case '0':
case '1':
case '2':
case '3':
case '4':
case '5':
case '6':
case '7':
n=(c - '0');
c=src[index];
if ('0' <= c && c <= '7') {
index++;
n=8 * n + (c - '0');
c=src[index];
if ('0' <= c && c <= '7') {
index++;
i=8 * n + (c - '0');
if (i <= 0377) n=i;
 else index--;
}
}
localMax=n;
break;
default :
localMax=c;
break;
}
break;
default :
localMax=src[index++];
break;
}
if (inRange) {
if (rangeStart > localMax) {
reportError("msg.bad.range","");
return false;
}
inRange=false;
}
 else {
if (index < (end - 1)) {
if (src[index] == '-') {
++index;
inRange=true;
rangeStart=(char)localMax;
continue;
}
}
}
if ((state.flags & JSREG_FOLD) != 0) {
char cu=upcase((char)localMax);
char cd=downcase((char)localMax);
localMax=(cu >= cd) ? cu : cd;
}
if (localMax > max) max=localMax;
}
target.bmsize=max + 1;
return true;
}
