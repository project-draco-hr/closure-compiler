{
  int visible_size=indentStep * level;
  int indent_size, tab_count;
  if (indentTabSize <= 0) {
    tab_count=0;
    indent_size=visible_size;
  }
 else {
    tab_count=visible_size / indentTabSize;
    indent_size=tab_count + visible_size % indentTabSize;
  }
  int pos=add_area(indent_size);
  int tab_end=pos + tab_count;
  int indent_end=pos + indent_size;
  for (; pos != tab_end; ++pos) {
    buffer[pos]='\t';
  }
  for (; pos != indent_end; ++pos) {
    buffer[pos]=' ';
  }
}
