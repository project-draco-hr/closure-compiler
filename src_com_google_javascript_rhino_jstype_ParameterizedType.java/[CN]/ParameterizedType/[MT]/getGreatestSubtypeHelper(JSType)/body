{
  Preconditions.checkNotNull(rawThat);
  if (!wrapsSameRawType(rawThat)) {
    if (!rawThat.isParameterizedType()) {
      if (this.isSubtype(rawThat)) {
        return this;
      }
 else       if (rawThat.isSubtype(this)) {
        return filterNoResolvedType(rawThat);
      }
    }
    if (this.isObject() && rawThat.isObject()) {
      return this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);
    }
    return this.getNativeType(JSTypeNative.NO_TYPE);
  }
  ParameterizedType that=rawThat.toMaybeParameterizedType();
  Preconditions.checkNotNull(that);
  if (this.parameterType.isEquivalentTo(that.parameterType)) {
    return this;
  }
  return getReferencedObjTypeInternal();
}
