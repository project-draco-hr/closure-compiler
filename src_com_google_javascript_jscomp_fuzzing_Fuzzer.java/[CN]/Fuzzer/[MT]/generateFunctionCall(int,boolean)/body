{
  Preconditions.checkArgument((budget >= 2 && scopeManager.getSize() > 0) || budget >= 4);
  int remainingBudget;
  if (scopeManager.getSize() == 0) {
    remainingBudget=budget - 3;
  }
 else {
    remainingBudget=budget - 1;
  }
  int numArgs=random.nextInt(remainingBudget);
  int[] subBudgets=distribute(remainingBudget,numArgs + 1,1);
  Node target=generateCallableExpression(subBudgets[0] + budget - 1 - remainingBudget);
  Node node;
  if (isNew) {
    node=new Node(Token.NEW,target);
  }
 else {
    node=new Node(Token.CALL,target);
  }
  for (int i=0; i < numArgs; i++) {
    Node arg=generateExpression(subBudgets[i + 1]);
    node.addChildToBack(arg);
  }
  return node;
}
