{
  Preconditions.checkArgument(budget >= 3);
  int bodyBudget=(budget - 1) / 2;
  Node tryStmt=new Node(Token.TRY,generateBlock(bodyBudget));
  int[] catchAndFinallyBudgets=distribute(budget - 1 - bodyBudget,2,0);
  Node catchBlock=new Node(Token.BLOCK);
  if (catchAndFinallyBudgets[0] > 3) {
    catchBlock.addChildToBack(new Node(Token.CATCH,generateIdentifier(1,false),generateBlock(catchAndFinallyBudgets[0] - 1)));
  }
 else {
    catchAndFinallyBudgets[1]=budget - 1 - bodyBudget;
  }
  tryStmt.addChildToBack(catchBlock);
  if (catchAndFinallyBudgets[1] > 0) {
    tryStmt.addChildToBack(generateBlock(catchAndFinallyBudgets[1]));
  }
  return tryStmt;
}
