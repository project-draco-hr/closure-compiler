{
  if (n.isFunction()) {
    if (inputId == null) {
      inputId=NodeUtil.getInputId(n);
    }
    final Node fnNameNode=n.getFirstChild();
    final Node args=fnNameNode.getNext();
    String fnName=fnNameNode.getString();
    if (!fnName.isEmpty() && NodeUtil.isFunctionExpression(n)) {
      declareVar(fnNameNode);
    }
    Preconditions.checkState(args.isParamList());
    for (Node a=args.getFirstChild(); a != null; a=a.getNext()) {
      if (a.isDefaultValue()) {
        declareLHS(scope,a.getFirstChild());
      }
 else {
        declareLHS(scope,a);
      }
    }
  }
 else   if (n.isBlock() || n.isFor() || n.isForOf()) {
    scanVars(n);
  }
 else {
    Preconditions.checkState(scope.getParent() == null);
    scanVars(n);
  }
}
