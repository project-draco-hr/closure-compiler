{
switch (n.getType()) {
case Token.NAME:
case Token.GETPROP:
    if (parent.getType() == Token.ASSIGN || parent.getType() == Token.VAR) {
      definitionMap.put(n.getQualifiedName(),parent);
    }
  if (parent.getType() != Token.CALL) {
    return;
  }
List<String> exportSymbolNames=Lists.newArrayList();
List<String> exportPropertyNames=Lists.newArrayList();
exportSymbolNames.add("goog.exportSymbol");
exportPropertyNames.add("goog.exportProperty");
exportSymbolNames.add("google_exportSymbol");
exportPropertyNames.add("google_exportProperty");
if (exportPropertyNames.contains(n.getQualifiedName())) {
handlePropertyExport(parent);
}
if (exportSymbolNames.contains(n.getQualifiedName())) {
handleSymbolExport(parent);
}
}
}
