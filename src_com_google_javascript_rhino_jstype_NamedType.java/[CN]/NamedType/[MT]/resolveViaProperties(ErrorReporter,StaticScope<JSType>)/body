{
  JSType value=lookupViaProperties(t,enclosing);
  if (value != null && value.isFunctionType() && (value.isConstructor() || value.isInterface())) {
    FunctionType functionType=value.toMaybeFunctionType();
    setReferencedAndResolvedType(functionType.getInstanceType(),t,enclosing);
  }
 else   if (value != null && value.isNoObjectType()) {
    setReferencedAndResolvedType(registry.getNativeFunctionType(JSTypeNative.NO_OBJECT_TYPE).getInstanceType(),t,enclosing);
  }
 else   if (value instanceof EnumType) {
    setReferencedAndResolvedType(((EnumType)value).getElementsType(),t,enclosing);
  }
 else {
    handleUnresolvedType(t,value == null || value.isUnknownType());
  }
}
