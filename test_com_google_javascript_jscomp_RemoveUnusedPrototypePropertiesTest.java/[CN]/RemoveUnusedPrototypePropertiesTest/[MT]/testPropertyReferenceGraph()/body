{
  String constructor="function Foo() {}";
  String defA="Foo.prototype.a = function() { Foo.superClass_.a.call(this); };";
  String defB="Foo.prototype.b = function() { this.a(); };";
  String defC="Foo.prototype.c = function() { " + "Foo.superClass_.c.call(this); this.b(); this.a(); };";
  String defD="Foo.prototype.d = function() { this.c(); };";
  String defE="Foo.prototype.e = function() { this.a(); this.f(); };";
  String defF="Foo.prototype.f = function() { };";
  String fullClassDef=constructor + defA + defB+ defC+ defD+ defE+ defF;
  test(fullClassDef,"");
  String callA="(new Foo()).a();";
  String callB="(new Foo()).b();";
  String callC="(new Foo()).c();";
  String callD="(new Foo()).d();";
  String callE="(new Foo()).e();";
  String callF="(new Foo()).f();";
  test(fullClassDef + callA,constructor + defA + callA);
  test(fullClassDef + callB,constructor + defA + defB+ callB);
  test(fullClassDef + callC,constructor + defA + defB+ defC+ callC);
  test(fullClassDef + callD,constructor + defA + defB+ defC+ defD+ callD);
  test(fullClassDef + callE,constructor + defA + defE+ defF+ callE);
  test(fullClassDef + callF,constructor + defF + callF);
  test(fullClassDef + callA + callC,constructor + defA + defB+ defC+ callA+ callC);
  test(fullClassDef + callB + callC,constructor + defA + defB+ defC+ callB+ callC);
  test(fullClassDef + callA + callB+ callC,constructor + defA + defB+ defC+ callA+ callB+ callC);
}
