{
  try {
    JsonObject sourceMapRoot=new Gson().fromJson(contents,JsonObject.class);
    version=sourceMapRoot.get("version").getAsInt();
    file=getStringOrNull(sourceMapRoot,"file");
    lineCount=sourceMapRoot.has("lineCount") ? sourceMapRoot.get("lineCount").getAsInt() : -1;
    mappings=getStringOrNull(sourceMapRoot,"mappings");
    sourceRoot=getStringOrNull(sourceMapRoot,"sourceRoot");
    if (sourceMapRoot.has("sections")) {
      ImmutableList.Builder<SourceMapSection> builder=ImmutableList.builder();
      for (      JsonElement each : sourceMapRoot.get("sections").getAsJsonArray()) {
        builder.add(buildSection(each.getAsJsonObject()));
      }
      sections=builder.build();
    }
 else {
      sections=null;
    }
    sources=getJavaStringArray(sourceMapRoot.get("sources"));
    names=getJavaStringArray(sourceMapRoot.get("names"));
    Map<String,Object> extensions=new LinkedHashMap<>();
    for (    Map.Entry<String,JsonElement> entry : sourceMapRoot.entrySet()) {
      if (entry.getKey().startsWith("x_")) {
        extensions.put(entry.getKey(),entry.getValue());
      }
    }
    this.extensions=Collections.unmodifiableMap(extensions);
  }
 catch (  JsonParseException ex) {
    throw new SourceMapParseException("JSON parse exception: " + ex);
  }
}
