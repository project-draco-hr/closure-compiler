{
  String s;
  int arity;
switch (id) {
case Id_constructor:
    arity=1;
  s="constructor";
break;
case Id_toString:
arity=0;
s="toString";
break;
case Id_toSource:
arity=0;
s="toSource";
break;
case Id_valueOf:
arity=0;
s="valueOf";
break;
case Id_charAt:
arity=1;
s="charAt";
break;
case Id_charCodeAt:
arity=1;
s="charCodeAt";
break;
case Id_indexOf:
arity=1;
s="indexOf";
break;
case Id_lastIndexOf:
arity=1;
s="lastIndexOf";
break;
case Id_split:
arity=2;
s="split";
break;
case Id_substring:
arity=2;
s="substring";
break;
case Id_toLowerCase:
arity=0;
s="toLowerCase";
break;
case Id_toUpperCase:
arity=0;
s="toUpperCase";
break;
case Id_substr:
arity=2;
s="substr";
break;
case Id_concat:
arity=1;
s="concat";
break;
case Id_slice:
arity=2;
s="slice";
break;
case Id_bold:
arity=0;
s="bold";
break;
case Id_italics:
arity=0;
s="italics";
break;
case Id_fixed:
arity=0;
s="fixed";
break;
case Id_strike:
arity=0;
s="strike";
break;
case Id_small:
arity=0;
s="small";
break;
case Id_big:
arity=0;
s="big";
break;
case Id_blink:
arity=0;
s="blink";
break;
case Id_sup:
arity=0;
s="sup";
break;
case Id_sub:
arity=0;
s="sub";
break;
case Id_fontsize:
arity=0;
s="fontsize";
break;
case Id_fontcolor:
arity=0;
s="fontcolor";
break;
case Id_link:
arity=0;
s="link";
break;
case Id_anchor:
arity=0;
s="anchor";
break;
case Id_equals:
arity=1;
s="equals";
break;
case Id_equalsIgnoreCase:
arity=1;
s="equalsIgnoreCase";
break;
case Id_match:
arity=1;
s="match";
break;
case Id_search:
arity=1;
s="search";
break;
case Id_replace:
arity=1;
s="replace";
break;
case Id_localeCompare:
arity=1;
s="localeCompare";
break;
case Id_toLocaleLowerCase:
arity=0;
s="toLocaleLowerCase";
break;
case Id_toLocaleUpperCase:
arity=0;
s="toLocaleUpperCase";
break;
case Id_trim:
arity=0;
s="trim";
break;
default :
throw new IllegalArgumentException(String.valueOf(id));
}
initPrototypeMethod(STRING_TAG,id,s,arity);
}
