{
  Node templateLit=n.getLastChild();
  Node raw=createRawStringArray(templateLit);
  Node cooked=createCookedStringArray(templateLit);
  Node callsiteId=IR.name(TEMPLATELIT_VAR + t.getCompiler().getUniqueNameIdSupplier().get());
  Node var=IR.var(callsiteId,cooked).useSourceInfoIfMissingFromForTree(n);
  Node script=NodeUtil.getEnclosingType(n,Token.SCRIPT);
  script.addChildrenToFront(var);
  Node defineRaw=IR.exprResult(IR.assign(IR.getprop(callsiteId.cloneNode(),IR.string("raw")),raw)).useSourceInfoIfMissingFromForTree(n);
  script.addChildAfter(defineRaw,var);
  Node call=IR.call(n.removeFirstChild(),callsiteId.cloneNode());
  for (Node child=templateLit.getFirstChild(); child != null; child=child.getNext()) {
    if (!child.isString()) {
      call.addChildToBack(child.removeFirstChild());
    }
  }
  call.useSourceInfoIfMissingFromForTree(templateLit);
  call.putBooleanProp(Node.FREE_CALL,!call.getFirstChild().isGetProp());
  n.getParent().replaceChild(n,call);
  t.getCompiler().reportCodeChange();
}
