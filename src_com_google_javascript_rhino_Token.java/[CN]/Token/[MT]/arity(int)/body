{
switch (token) {
case ERROR:
    return -1;
case RETURN:
  return -1;
case BITOR:
return 2;
case BITXOR:
return 2;
case BITAND:
return 2;
case EQ:
return 2;
case NE:
return 2;
case LT:
return 2;
case LE:
return 2;
case GT:
return 2;
case GE:
return 2;
case LSH:
return 2;
case RSH:
return 2;
case URSH:
return 2;
case ADD:
return 2;
case SUB:
return 2;
case MUL:
return 2;
case DIV:
return 2;
case MOD:
return 2;
case NOT:
return 1;
case BITNOT:
return 1;
case POS:
return 1;
case NEG:
return 1;
case NEW:
return -1;
case DELPROP:
return 1;
case TYPEOF:
return 1;
case GETPROP:
return 2;
case GETELEM:
return 2;
case CALL:
return -1;
case NAME:
return 0;
case LABEL_NAME:
return 0;
case NUMBER:
return 0;
case STRING:
return 0;
case STRING_KEY:
return -1;
case NULL:
return 0;
case THIS:
return 0;
case FALSE:
return 0;
case TRUE:
return 0;
case SHEQ:
return 2;
case SHNE:
return 2;
case REGEXP:
return -1;
case THROW:
return 1;
case IN:
return 2;
case INSTANCEOF:
return 2;
case ARRAYLIT:
return -1;
case OBJECTLIT:
return -1;
case TRY:
return -1;
case CLASS:
return 3;
case MEMBER_DEF:
return 1;
case PARAM_LIST:
return -1;
case COMMA:
return 2;
case ASSIGN:
return 2;
case ASSIGN_BITOR:
return 2;
case ASSIGN_BITXOR:
return 2;
case ASSIGN_BITAND:
return 2;
case ASSIGN_LSH:
return 2;
case ASSIGN_RSH:
return 2;
case ASSIGN_URSH:
return 2;
case ASSIGN_ADD:
return 2;
case ASSIGN_SUB:
return 2;
case ASSIGN_MUL:
return 2;
case ASSIGN_DIV:
return 2;
case ASSIGN_MOD:
return 2;
case HOOK:
return 3;
case OR:
return 2;
case AND:
return 2;
case INC:
return 1;
case DEC:
return 1;
case FUNCTION:
return 3;
case IF:
return -1;
case SWITCH:
return -1;
case CASE:
return 2;
case DEFAULT_CASE:
return 1;
case WHILE:
return 2;
case DO:
return 2;
case FOR:
return -1;
case BREAK:
return -1;
case CONTINUE:
return -1;
case VAR:
return -1;
case WITH:
return 2;
case CATCH:
return 2;
case EMPTY:
return 0;
case BLOCK:
return -1;
case LABEL:
return 2;
case EXPR_RESULT:
return 1;
case SCRIPT:
return -1;
case GETTER_DEF:
return 1;
case SETTER_DEF:
return 1;
case CONST:
return -1;
case DEBUGGER:
return -1;
case CAST:
return 1;
case ANNOTATION:
return -1;
case PIPE:
return -1;
case STAR:
return -1;
case EOC:
return -1;
case QMARK:
return -1;
case ELLIPSIS:
return -1;
case REST:
return 0;
case SPREAD:
return 1;
case BANG:
return -1;
case VOID:
return 1;
case EQUALS:
return -1;
case LB:
return -1;
case LC:
return -1;
case COLON:
return -1;
}
throw new IllegalStateException("No arity defined for " + Token.name(token));
}
