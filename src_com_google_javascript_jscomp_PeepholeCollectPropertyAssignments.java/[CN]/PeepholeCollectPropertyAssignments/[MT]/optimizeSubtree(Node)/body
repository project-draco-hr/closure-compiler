{
  if (subtree.getType() != Token.SCRIPT && subtree.getType() != Token.BLOCK) {
    return subtree;
  }
  boolean codeChanged=false;
  for (Node child=subtree.getFirstChild(); child != null; child=child.getNext()) {
    if (child.getType() != Token.VAR) {
      continue;
    }
    if (!isPropertyAssignmentToVar(child.getNext())) {
      continue;
    }
    Preconditions.checkState(child.hasOneChild());
    Node var=child.getFirstChild();
    Node varValue=var.getFirstChild();
    if (varValue == null) {
      continue;
    }
    Node propertyCandidate;
    while ((propertyCandidate=child.getNext()) != null) {
      if (!collectProperty(propertyCandidate,var)) {
        break;
      }
      codeChanged=true;
    }
  }
  if (codeChanged) {
    reportCodeChange();
  }
  return subtree;
}
