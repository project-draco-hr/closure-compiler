{
  Node currentVersionOfNode=n;
  boolean somethingChanged=false;
  do {
    somethingChanged=false;
    for (    AbstractPeepholeOptimization optimization : peepholeOptimizations) {
      Node newVersionOfNode=optimization.optimizeSubtree(currentVersionOfNode);
      if (newVersionOfNode != currentVersionOfNode) {
        somethingChanged=true;
        currentVersionOfNode=newVersionOfNode;
      }
      if (currentVersionOfNode == null) {
        return;
      }
    }
  }
 while (somethingChanged);
}
