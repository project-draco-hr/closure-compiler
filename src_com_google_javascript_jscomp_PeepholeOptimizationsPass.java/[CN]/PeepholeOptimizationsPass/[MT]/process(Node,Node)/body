{
  compiler.addChangeHandler(handler);
  beginTraversal();
  NodeTraversal.traverseChangedFunctions(compiler,new FunctionCallback(){
    @Override public void enterFunction(    AbstractCompiler compiler,    Node root){
      if (root.isFunction()) {
        root=root.getLastChild();
      }
      do {
        handler.reset();
        NodeTraversal.traverse(compiler,root,new PeepCallback());
      }
 while (retraverseOnChange && handler.hasCodeChanged());
    }
  }
);
  endTraversal();
  compiler.removeChangeHandler(handler);
}
