{
  if (!n.isName()) {
    return;
  }
  String varName=n.getString();
  if (varName.isEmpty()) {
    Preconditions.checkState(parent.isFunction());
    Preconditions.checkState(NodeUtil.isFunctionExpression(parent));
    return;
  }
  if ((parent.isVar() || NodeUtil.isFunctionDeclaration(parent)) && varsToDeclareInExterns.contains(varName)) {
    createSynthesizedExternVar(varName);
    n.addSuppression("duplicate");
  }
  Scope scope=t.getScope();
  Scope.Var var=scope.getVar(varName);
  if (var == null) {
    if (NodeUtil.isFunctionExpression(parent)) {
    }
 else     if (!(scope.isLocal() && ARGUMENTS.equals(varName))) {
      if (!strictExternCheck || !t.getInput().isExtern()) {
        t.report(n,UNDEFINED_VAR_ERROR,varName);
      }
      if (sanityCheck) {
        throw new IllegalStateException("Unexpected variable " + varName);
      }
 else {
        createSynthesizedExternVar(varName);
        scope.getGlobalScope().declare(varName,n,null,compiler.getSynthesizedExternsInput());
      }
    }
    return;
  }
  CompilerInput currInput=t.getInput();
  CompilerInput varInput=var.input;
  if (currInput == varInput || currInput == null || varInput == null) {
    return;
  }
  JSModule currModule=currInput.getModule();
  JSModule varModule=varInput.getModule();
  JSModuleGraph moduleGraph=compiler.getModuleGraph();
  if (!sanityCheck && varModule != currModule && varModule != null && currModule != null) {
    if (moduleGraph.dependsOn(currModule,varModule)) {
    }
 else {
      if (scope.isGlobal()) {
        if (moduleGraph.dependsOn(varModule,currModule)) {
          t.report(n,VIOLATED_MODULE_DEP_ERROR,currModule.getName(),varModule.getName(),varName);
        }
 else {
          t.report(n,MISSING_MODULE_DEP_ERROR,currModule.getName(),varModule.getName(),varName);
        }
      }
 else {
        t.report(n,STRICT_MODULE_DEP_ERROR,currModule.getName(),varModule.getName(),varName);
      }
    }
  }
}
