{
  if (parent == null) {
    return true;
  }
  if (n.getType() == Token.FOR) {
    if (!NodeUtil.isForIn(n)) {
      Node decl=n.getFirstChild();
      Node pred=decl.getNext();
      Node step=pred.getNext();
      addSimplifiedExpression(decl,n);
      addSimplifiedExpression(pred,n);
      addSimplifiedExpression(step,n);
    }
 else {
      Node decl=n.getFirstChild();
      Node iter=decl.getNext();
      addAllChildren(decl);
      addAllChildren(iter);
    }
  }
  if (parent.getType() == Token.VAR || parent.getType() == Token.EXPR_RESULT || parent.getType() == Token.RETURN || parent.getType() == Token.THROW) {
    addSimplifiedExpression(n,parent);
  }
  if ((parent.getType() == Token.IF || parent.getType() == Token.WHILE || parent.getType() == Token.WITH || parent.getType() == Token.SWITCH || parent.getType() == Token.CASE) && parent.getFirstChild() == n) {
    addAllChildren(n);
  }
  if (parent.getType() == Token.DO && parent.getLastChild() == n) {
    addAllChildren(n);
  }
  return true;
}
