{
  if (parent == null) {
    return true;
  }
  if (n.isFor()) {
    if (!NodeUtil.isForIn(n)) {
      Node decl=n.getFirstChild();
      Node pred=decl.getNext();
      Node step=pred.getNext();
      addSimplifiedExpression(decl,n);
      addSimplifiedExpression(pred,n);
      addSimplifiedExpression(step,n);
    }
 else {
      Node decl=n.getFirstChild();
      Node iter=decl.getNext();
      addAllChildren(decl);
      addAllChildren(iter);
    }
  }
  if (parent.isVar() || parent.isExprResult() || parent.isReturn()|| parent.isThrow()) {
    addSimplifiedExpression(n,parent);
  }
  if ((parent.isIf() || parent.getType() == Token.WHILE || parent.getType() == Token.WITH || parent.isSwitch() || parent.isCase()) && parent.getFirstChild() == n) {
    addAllChildren(n);
  }
  if (parent.isDo() && parent.getLastChild() == n) {
    addAllChildren(n);
  }
  return true;
}
