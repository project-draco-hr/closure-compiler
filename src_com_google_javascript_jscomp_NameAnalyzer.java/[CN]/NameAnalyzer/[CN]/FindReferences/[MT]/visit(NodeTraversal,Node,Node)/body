{
  if (!(n.isName() || (NodeUtil.isGet(n) && !parent.isGetProp()))) {
    return;
  }
  NameInformation nameInfo=createNameInformation(t,n);
  if (nameInfo == null) {
    return;
  }
  if (nameInfo.onlyAffectsClassDef) {
    if (nameInfo.superclass != null) {
      recordReference(nameInfo.name,nameInfo.superclass,RefType.INHERITANCE);
    }
    String nodeName=n.getQualifiedName();
    if (nodeName != null) {
      recordReference(nameInfo.name,nodeName,RefType.REGULAR);
    }
    return;
  }
  if (parent.isInstanceOf() && parent.getLastChild() == n && n.isQualifiedName()) {
    JsName checkedClass=getName(nameInfo.name,true);
    refNodes.add(new InstanceOfCheckNode(checkedClass,n));
    checkedClass.hasInstanceOfReference=true;
    return;
  }
  List<NameInformation> referers=getDependencyScope(n);
  if (referers.isEmpty()) {
    maybeRecordReferenceOrAlias(t,n,parent,nameInfo,null);
  }
 else {
    for (    NameInformation referring : referers) {
      maybeRecordReferenceOrAlias(t,n,parent,nameInfo,referring);
    }
    recordAliases(referers);
  }
}
