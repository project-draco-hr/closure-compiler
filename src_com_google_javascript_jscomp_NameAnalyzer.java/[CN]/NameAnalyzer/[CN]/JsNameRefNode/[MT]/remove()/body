{
  Node containingNode=parent.getParent();
switch (parent.getToken()) {
case VAR:
    Preconditions.checkState(parent.hasOneChild());
  replaceWithRhs(containingNode,parent);
break;
case FUNCTION:
replaceWithRhs(containingNode,parent);
break;
case ASSIGN:
if (containingNode.isExprResult()) {
replaceWithRhs(containingNode.getParent(),containingNode);
}
 else {
replaceWithRhs(containingNode,parent);
}
break;
case OBJECTLIT:
break;
case EXPR_RESULT:
Preconditions.checkState(isAnalyzableObjectDefinePropertiesDefinition(parent.getFirstChild()));
replaceWithRhs(containingNode,parent);
break;
default :
throw new IllegalArgumentException("Unsupported parent node type in JsNameRefNode.remove: " + parent.getToken());
}
}
