{
  Node containingNode=parent.getParent();
switch (parent.getType()) {
case Token.VAR:
    Preconditions.checkState(parent.hasOneChild());
  replaceWithRhs(containingNode,parent);
break;
case Token.FUNCTION:
replaceWithRhs(containingNode,parent);
break;
case Token.ASSIGN:
if (NodeUtil.isExpressionNode(containingNode)) {
replaceWithRhs(containingNode.getParent(),containingNode);
}
 else {
replaceWithRhs(containingNode,parent);
}
break;
}
}
