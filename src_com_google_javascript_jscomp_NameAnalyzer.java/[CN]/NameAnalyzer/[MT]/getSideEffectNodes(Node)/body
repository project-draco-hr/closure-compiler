{
  List<Node> subexpressions=Lists.newArrayList();
  NodeTraversal.traverse(compiler,n,new GatherSideEffectSubexpressionsCallback(compiler,new CopySideEffectSubexpressions(compiler,subexpressions)));
  List<Node> replacements=Lists.newArrayListWithExpectedSize(subexpressions.size());
  for (  Node subexpression : subexpressions) {
    replacements.add(NodeUtil.newExpr(subexpression));
  }
  return replacements;
}
