{
  StringBuilder sb=new StringBuilder();
  sb.append("TOTAL NAMES: " + countOf(TriState.BOTH,TriState.BOTH) + "\n");
  sb.append("TOTAL CLASSES: " + countOf(TriState.TRUE,TriState.BOTH) + "\n");
  sb.append("TOTAL STATIC FUNCTIONS: " + countOf(TriState.FALSE,TriState.BOTH) + "\n");
  sb.append("REFERENCED NAMES: " + countOf(TriState.BOTH,TriState.TRUE) + "\n");
  sb.append("REFERENCED CLASSES: " + countOf(TriState.TRUE,TriState.TRUE) + "\n");
  sb.append("REFERENCED STATIC FUNCTIONS: " + countOf(TriState.FALSE,TriState.TRUE) + "\n");
  for (int i=0; i < generations.size(); i++) {
    Set<JsName> gen=generations.get(i);
    sb.append("GENERATION " + i + ": "+ gen.size()+ " names\n");
    for (    JsName jsName : gen) {
      sb.append(" - " + jsName.name + "\n");
    }
  }
  sb.append("ALL NAMES\n");
  for (  JsName node : allNames.values()) {
    sb.append(node + "\n");
  }
  return sb.toString();
}
