{
  NodeTraversal.traverse(compiler,externs,new ProcessExternals());
  NodeTraversal.traverse(compiler,root,new FindDependencyScopes());
  NodeTraversal.traverse(compiler,root,new HoistVariableAndFunctionDeclarations());
  NodeTraversal.traverse(compiler,root,new FindDeclarationsAndSetters());
  NodeTraversal.traverse(compiler,root,new FindReferences());
  referenceParentNames();
  referenceAliases();
  calculateReferences();
  if (reportPath != null) {
    try {
      Files.append(getHtmlReport(),new File(reportPath),UTF_8);
    }
 catch (    IOException e) {
      compiler.report(JSError.make(REPORT_PATH_IO_ERROR,reportPath));
    }
  }
  if (removeUnreferenced) {
    removeUnreferenced();
  }
}
