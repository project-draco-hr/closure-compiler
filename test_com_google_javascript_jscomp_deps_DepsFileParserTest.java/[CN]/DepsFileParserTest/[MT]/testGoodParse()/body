{
  final String contents="/*" + "goog.addDependency('no1', [], []);*//*\n" + "goog.addDependency('no2', [ ], [ ]);\n"+ "*/goog.addDependency('yes1', [], []);\n"+ "/* blah */goog.addDependency(\"yes2\", [], [])/* blah*/\n"+ "goog.addDependency('yes3', ['a','b'], ['c']); // goog.addDependency('no3', [], []);\n"+ "// goog.addDependency('no4', [], []);\n"+ "goog.addDependency(\"yes4\", [], [ \"a\",'b' , 'c' ]); //no new line at EOF";
  List<DependencyInfo> result=parser.parseFile(SRC_PATH,contents);
  ImmutableList<DependencyInfo> expected=ImmutableList.<DependencyInfo>of(new SimpleDependencyInfo("yes1",SRC_PATH,EMPTY,EMPTY,false),new SimpleDependencyInfo("yes2",SRC_PATH,EMPTY,EMPTY,false),new SimpleDependencyInfo("yes3",SRC_PATH,ImmutableList.of("a","b"),ImmutableList.of("c"),false),new SimpleDependencyInfo("yes4",SRC_PATH,EMPTY,ImmutableList.of("a","b","c"),false));
  assertThat(result).isEqualTo(expected);
  assertThat(errorManager.getErrorCount()).isEqualTo(0);
  assertThat(errorManager.getWarningCount()).isEqualTo(0);
}
