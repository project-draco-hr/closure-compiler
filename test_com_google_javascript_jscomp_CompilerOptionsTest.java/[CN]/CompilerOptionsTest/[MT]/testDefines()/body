{
  CompilerOptions options=new CompilerOptions();
  options.setDefineToBooleanLiteral("trueVar",true);
  options.setDefineToBooleanLiteral("falseVar",false);
  options.setDefineToNumberLiteral("threeVar",3);
  options.setDefineToStringLiteral("strVar","str");
  Map<String,Node> actual=options.getDefineReplacements();
  assertEquivalent(new Node(Token.TRUE),actual.get("trueVar"));
  assertEquivalent(new Node(Token.FALSE),actual.get("falseVar"));
  assertEquivalent(Node.newNumber(3),actual.get("threeVar"));
  assertEquivalent(Node.newString("str"),actual.get("strVar"));
}
