{
  Node block=NodeUtil.getFunctionBody(fnNode);
  final String fnRecursionName=fnNode.getFirstChild().getString();
  Preconditions.checkState(fnRecursionName != null);
  Predicate<Node> p=new Predicate<Node>(){
    public boolean apply(    Node n){
      if (n.getType() == Token.NAME) {
        return n.getString().equals("arguments") || n.getString().equals("eval") || n.getString().equals(fnName)|| (!fnRecursionName.isEmpty() && n.getString().equals(fnRecursionName));
      }
      return false;
    }
  }
;
  return !NodeUtil.has(block,p,Predicates.<Node>alwaysTrue());
}
