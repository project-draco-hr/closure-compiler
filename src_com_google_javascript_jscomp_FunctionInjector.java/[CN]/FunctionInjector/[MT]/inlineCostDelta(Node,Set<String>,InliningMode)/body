{
  int paramCount=NodeUtil.getFnParameters(fnNode).getChildCount();
  int commaCount=(paramCount > 1) ? paramCount - 1 : 0;
  int costDeltaFunctionOverhead=15 + commaCount + (paramCount * InlineCostEstimator.ESTIMATED_IDENTIFIER_COST);
  Node block=fnNode.getLastChild();
  if (!block.hasChildren()) {
    return -costDeltaFunctionOverhead;
  }
  if (mode == InliningMode.DIRECT) {
    return -(costDeltaFunctionOverhead + 7);
  }
 else {
    int aliasCount=namesToAlias.size();
    final int INLINE_BLOCK_OVERHEAD=4;
    final int PER_RETURN_OVERHEAD=2;
    final int PER_RETURN_RESULT_OVERHEAD=3;
    final int PER_ALIAS_OVERHEAD=3;
    int returnCount=NodeUtil.getNodeTypeReferenceCount(block,Token.RETURN);
    int resultCount=(returnCount > 0) ? returnCount - 1 : 0;
    int baseOverhead=(returnCount > 0) ? INLINE_BLOCK_OVERHEAD : 0;
    int overhead=baseOverhead + returnCount * PER_RETURN_OVERHEAD + resultCount * PER_RETURN_RESULT_OVERHEAD + aliasCount * PER_ALIAS_OVERHEAD;
    return (overhead - costDeltaFunctionOverhead);
  }
}
