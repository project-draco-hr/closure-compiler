{
  if (!isDirectCallNodeReplacementPossible(fnNode)) {
    return CanInlineResult.NO;
  }
  Node block=fnNode.getLastChild();
  Node cArg=callNode.getFirstChild().getNext();
  if (callNode.getFirstChild().getType() != Token.NAME) {
    if (NodeUtil.isFunctionObjectCall(callNode)) {
      Preconditions.checkNotNull(cArg);
      Preconditions.checkState(cArg.getType() == Token.THIS);
      cArg=cArg.getNext();
    }
 else {
      Preconditions.checkState(!NodeUtil.isFunctionObjectApply(callNode));
    }
  }
  Node fnParam=NodeUtil.getFnParameters(fnNode).getFirstChild();
  while (cArg != null || fnParam != null) {
    if (fnParam != null) {
      if (cArg != null) {
        if (NodeUtil.mayEffectMutableState(cArg) && NodeUtil.getNameReferenceCount(block,fnParam.getString()) > 1) {
          return CanInlineResult.NO;
        }
      }
      fnParam=fnParam.getNext();
    }
    if (cArg != null) {
      if (NodeUtil.mayHaveSideEffects(cArg)) {
        return CanInlineResult.NO;
      }
      cArg=cArg.getNext();
    }
  }
  return CanInlineResult.YES;
}
