{
  Preconditions.checkArgument(n.isNot());
  Node parent=n.getParent();
  Node notChild=n.getFirstChild();
  Token complementOperator;
switch (notChild.getToken()) {
case EQ:
    complementOperator=Token.NE;
  break;
case NE:
complementOperator=Token.EQ;
break;
case SHEQ:
complementOperator=Token.SHNE;
break;
case SHNE:
complementOperator=Token.SHEQ;
break;
default :
return n;
}
Node newOperator=n.removeFirstChild();
newOperator.setType(complementOperator);
parent.replaceChild(n,newOperator);
reportCodeChange();
return newOperator;
}
