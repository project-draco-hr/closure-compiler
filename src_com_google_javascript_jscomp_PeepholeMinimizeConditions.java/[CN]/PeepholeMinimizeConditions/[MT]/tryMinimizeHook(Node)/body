{
  Node originalCond=n.getFirstChild();
  Node placeholder=IR.script();
  n.replaceChild(originalCond,placeholder);
  MinimizedCondition minCond=(aggressiveMinimization) ? MinimizedCondition.fromConditionNode(originalCond) : MinimizedCondition.unoptimized(originalCond);
  MinimizedCondition.MeasuredNode mNode=minCond.getShorterRepresentation(false);
  if (mNode.node.isNot()) {
    Node thenBranch=n.getFirstChild().getNext();
    n.replaceChild(placeholder,mNode.node.removeFirstChild());
    n.removeChild(thenBranch);
    n.addChildToBack(thenBranch);
    reportCodeChange();
  }
 else {
    replaceNode(placeholder,mNode);
  }
  return n;
}
