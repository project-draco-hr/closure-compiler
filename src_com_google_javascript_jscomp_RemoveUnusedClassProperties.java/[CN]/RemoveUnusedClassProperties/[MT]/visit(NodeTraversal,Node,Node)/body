{
switch (n.getType()) {
case Token.GETPROP:
    if (inExterns || isPinningPropertyUse(n)) {
      used.add(n.getLastChild().getString());
    }
 else {
      if (n.getFirstChild().isThis()) {
        candidates.add(n);
      }
    }
  break;
case Token.CALL:
Node target=n.getFirstChild();
if (n.hasMoreThanOneChild() && target.isName() && target.getString().equals(NodeUtil.JSC_PROPERTY_NAME_FN)) {
Node propName=target.getNext();
if (propName.isString()) {
  used.add(propName.getString());
}
}
break;
}
}
