{
  for (  Node n : candidates) {
    Preconditions.checkState(n.isGetProp());
    String propName=n.getLastChild().getString();
    if (!used.contains(propName)) {
      Node parent=n.getParent();
      Node replacement;
      if (NodeUtil.isAssignmentOp(parent)) {
        Node assign=parent;
        Preconditions.checkState(assign != null && NodeUtil.isAssignmentOp(assign) && assign.getFirstChild() == n);
        compiler.reportChangeToEnclosingScope(assign);
        replacement=assign.getLastChild().detachFromParent();
      }
 else       if (parent.isInc() || parent.isDec()) {
        compiler.reportChangeToEnclosingScope(parent);
        replacement=IR.number(0).srcref(parent);
      }
 else {
        throw new IllegalStateException("unexpected: " + parent);
      }
      if (!n.isQualifiedName()) {
        Node preserved=n.getFirstChild();
        while (preserved.isGetProp()) {
          preserved=preserved.getFirstChild();
        }
        replacement=IR.comma(preserved.detachFromParent(),replacement).srcref(parent);
      }
      compiler.reportChangeToEnclosingScope(parent);
      parent.getParent().replaceChild(parent,replacement);
    }
  }
}
