{
switch (n.getType()) {
case Token.LABEL:
    tryMinimizeExits(n.getLastChild(),Token.BREAK,n.getFirstChild().getString());
  break;
case Token.FOR:
case Token.WHILE:
tryMinimizeExits(NodeUtil.getLoopCodeBlock(n),Token.CONTINUE,null);
break;
case Token.DO:
tryMinimizeExits(NodeUtil.getLoopCodeBlock(n),Token.CONTINUE,null);
Node cond=NodeUtil.getConditionExpression(n);
if (NodeUtil.getImpureBooleanValue(cond) == TernaryValue.FALSE) {
tryMinimizeExits(n.getFirstChild(),Token.BREAK,null);
}
break;
case Token.FUNCTION:
tryMinimizeExits(n.getLastChild(),Token.RETURN,null);
break;
}
}
