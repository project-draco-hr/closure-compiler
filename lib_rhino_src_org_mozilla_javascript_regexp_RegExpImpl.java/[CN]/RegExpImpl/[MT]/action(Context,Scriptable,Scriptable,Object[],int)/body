{
  GlobData data=new GlobData();
  data.mode=actionType;
switch (actionType) {
case RA_MATCH:
{
      Object rval;
      data.optarg=1;
      rval=matchOrReplace(cx,scope,thisObj,args,this,data,false);
      return data.arrayobj == null ? rval : data.arrayobj;
    }
case RA_SEARCH:
  data.optarg=1;
return matchOrReplace(cx,scope,thisObj,args,this,data,false);
case RA_REPLACE:
{
Object arg1=args.length < 2 ? Undefined.instance : args[1];
String repstr=null;
Function lambda=null;
if (arg1 instanceof Function) {
  lambda=(Function)arg1;
}
 else {
  repstr=ScriptRuntime.toString(arg1);
}
data.optarg=2;
data.lambda=lambda;
data.repstr=repstr;
data.dollar=repstr == null ? -1 : repstr.indexOf('$');
data.charBuf=null;
data.leftIndex=0;
Object val=matchOrReplace(cx,scope,thisObj,args,this,data,true);
if (data.charBuf == null) {
  if (data.global || val == null || !val.equals(Boolean.TRUE)) {
    return data.str;
  }
  SubString lc=this.leftContext;
  replace_glob(data,cx,scope,this,lc.index,lc.length);
}
SubString rc=this.rightContext;
data.charBuf.append(rc.str,rc.index,rc.index + rc.length);
return data.charBuf.toString();
}
default :
throw Kit.codeBug();
}
}
