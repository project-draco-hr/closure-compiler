{
  ClassLoader classLoader=ShellLine.class.getClassLoader();
  if (classLoader == null) {
    classLoader=ClassLoader.getSystemClassLoader();
  }
  if (classLoader == null) {
    return null;
  }
  Class<?> readerClass=Kit.classOrNull(classLoader,"jline.ConsoleReader");
  if (readerClass == null)   return null;
  try {
    Constructor<?> c=readerClass.getConstructor();
    Object reader=c.newInstance();
    Method m=readerClass.getMethod("setBellEnabled",Boolean.TYPE);
    m.invoke(reader,Boolean.FALSE);
    Class<?> completorClass=Kit.classOrNull(classLoader,"jline.Completor");
    m=readerClass.getMethod("addCompletor",completorClass);
    Object completor=Proxy.newProxyInstance(classLoader,new Class[]{completorClass},new FlexibleCompletor(completorClass,scope));
    m.invoke(reader,completor);
    Class<?> inputStreamClass=Kit.classOrNull(classLoader,"jline.ConsoleReaderInputStream");
    c=inputStreamClass.getConstructor(readerClass);
    return (InputStream)c.newInstance(reader);
  }
 catch (  NoSuchMethodException e) {
  }
catch (  InstantiationException e) {
  }
catch (  IllegalAccessException e) {
  }
catch (  InvocationTargetException e) {
  }
  return null;
}
