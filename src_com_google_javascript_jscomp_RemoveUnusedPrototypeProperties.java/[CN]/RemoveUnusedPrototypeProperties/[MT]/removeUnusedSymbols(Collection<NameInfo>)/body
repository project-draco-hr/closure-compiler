{
  boolean changed=false;
  for (  NameInfo nameInfo : allNameInfo) {
    if (!nameInfo.isReferenced()) {
      for (      Symbol declaration : nameInfo.getDeclarations()) {
        boolean canRemove=false;
        if (specializationState == null) {
          canRemove=true;
        }
 else {
          Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);
          if (specializableFunction != null) {
            specializationState.reportRemovedFunction(specializableFunction);
            canRemove=true;
          }
        }
        if (canRemove) {
          declaration.remove();
          changed=true;
        }
      }
      logger.fine("Removed unused prototype property: " + nameInfo.name);
    }
  }
  if (changed) {
    compiler.reportCodeChange();
  }
}
