{
  NominalType parentClass=NominalType.makeClass("Parent",null,0);
  NominalType child1Class=NominalType.makeClass("Child1",null,1);
  NominalType child2Class=NominalType.makeClass("Child2",null,2);
  child1Class.addSuperClass(parentClass);
  child2Class.addSuperClass(parentClass);
  ObjectType foo=ObjectType.fromNominalType(NominalType.makeClass("Foo",null,3));
  ObjectType parent=ObjectType.fromNominalType(parentClass);
  ObjectType child1=ObjectType.fromNominalType(child1Class);
  ObjectType child2=ObjectType.fromNominalType(child2Class);
  ObjectType parentWithP=parent.withProperty("p",NUMBER);
  ObjectType parentWithOptP=ObjectType.join(parent,parentWithP);
  assertEquals(ImmutableSet.of(parentWithOptP),ObjectType.joinSets(ImmutableSet.of(parentWithP),ImmutableSet.of(child1)));
  assertTrue(ObjectType.isUnionSubtype(ImmutableSet.of(foo,child1),ImmutableSet.of(foo,parent)));
  assertFalse(ObjectType.isUnionSubtype(ImmutableSet.of(foo,parent),ImmutableSet.of(foo,child1)));
  assertTrue(ObjectType.isUnionSubtype(ImmutableSet.of(child1,child2),ImmutableSet.of(parent)));
  assertFalse(ObjectType.isUnionSubtype(ImmutableSet.of(parent),ImmutableSet.of(child1,child2)));
}
