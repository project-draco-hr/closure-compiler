{
  for (  Node staticGetProp : superClass.staticFieldAccess) {
    Preconditions.checkState(staticGetProp.isGetProp());
    String memberName=staticGetProp.getLastChild().getString();
    if (!superClass.definedProperties.contains(memberName)) {
      continue;
    }
    if (isOverriden(subClass,memberName)) {
      continue;
    }
    Node subclassNameNode=inheritsCall.getSecondChild();
    Node getprop=IR.getprop(subclassNameNode.cloneTree(),IR.string(memberName));
    JSDocInfoBuilder info=JSDocInfoBuilder.maybeCopyFrom(staticGetProp.getJSDocInfo());
    JSTypeExpression unknown=new JSTypeExpression(new Node(Token.QMARK),"<synthetic>");
    info.recordType(unknown);
    info.addSuppression("visibility");
    getprop.setJSDocInfo(info.build());
    Node declaration=IR.exprResult(getprop);
    declaration.useSourceInfoIfMissingFromForTree(inheritsCall);
    Node parent=inheritsCall.getParent();
    parent.getParent().addChildBefore(declaration,parent);
    compiler.reportCodeChange();
    if (!subClass.definedProperties.contains(memberName)) {
      subClass.staticFieldAccess.add(getprop);
      subClass.definedProperties.add(memberName);
    }
  }
}
