{
  for (  Node n : inheritsCalls) {
    Node parent=n.getParent();
    Node superclassNameNode=n.getLastChild();
    String superclassQname=superclassNameNode.getQualifiedName();
    Node subclassNameNode=n.getChildBefore(superclassNameNode);
    String subclassQname=subclassNameNode.getQualifiedName();
    if (multiplyDefinedClasses.contains(superclassQname)) {
      compiler.report(JSError.make(n,DUPLICATE_CLASS));
      return;
    }
    for (    Node staticMethod : getSet(staticMethods,superclassQname)) {
      copyStaticMethod(staticMethod,superclassNameNode,subclassNameNode,subclassQname,parent);
    }
    for (    Node staticProperty : getSet(staticProperties,superclassQname)) {
      copyStaticProperty(staticProperty,subclassNameNode,subclassQname,n);
    }
  }
}
