{
  for (  Node inheritsCall : inheritsCalls) {
    Node superclassNameNode=inheritsCall.getLastChild();
    String superclassQname=superclassNameNode.getQualifiedName();
    Node subclassNameNode=superclassNameNode.getPrevious();
    String subclassQname=subclassNameNode.getQualifiedName();
    JavascriptClass superClass=classByAlias.get(superclassQname);
    JavascriptClass subClass=classByAlias.get(subclassQname);
    if (duplicateClassNames.contains(superclassQname)) {
      compiler.report(JSError.make(inheritsCall,DUPLICATE_CLASS));
      return;
    }
    if (superClass == null || subClass == null) {
      continue;
    }
    copyStaticMembers(superClass,subClass,inheritsCall);
    copyDeclarations(superClass,subClass,inheritsCall);
  }
}
