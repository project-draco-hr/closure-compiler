{
  if (!n.isSuper()) {
    return;
  }
  Node classNode=NodeUtil.getEnclosingClass(n);
  if (classNode == null || classNode.getSecondChild().isEmpty()) {
    t.report(n,INVALID_SUPER_CALL);
    return;
  }
  if (parent.isCall()) {
    Node fn=NodeUtil.getEnclosingFunction(parent);
    if (fn == null) {
      t.report(n,INVALID_SUPER_CALL);
      return;
    }
    Node memberDef=fn.getParent();
    if (memberDef.isMemberFunctionDef()) {
      if (memberDef.matchesQualifiedName("constructor")) {
      }
 else {
        t.report(n,INVALID_SUPER_CALL_WITH_SUGGESTION,memberDef.getString());
      }
    }
 else {
      t.report(n,INVALID_SUPER_CALL);
    }
  }
}
