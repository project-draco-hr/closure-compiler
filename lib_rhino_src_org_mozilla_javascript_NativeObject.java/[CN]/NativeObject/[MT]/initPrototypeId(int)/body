{
  String s;
  int arity;
switch (id) {
case Id_constructor:
    arity=1;
  s="constructor";
break;
case Id_toString:
arity=0;
s="toString";
break;
case Id_toLocaleString:
arity=0;
s="toLocaleString";
break;
case Id_valueOf:
arity=0;
s="valueOf";
break;
case Id_hasOwnProperty:
arity=1;
s="hasOwnProperty";
break;
case Id_propertyIsEnumerable:
arity=1;
s="propertyIsEnumerable";
break;
case Id_isPrototypeOf:
arity=1;
s="isPrototypeOf";
break;
case Id_toSource:
arity=0;
s="toSource";
break;
case Id___defineGetter__:
arity=2;
s="__defineGetter__";
break;
case Id___defineSetter__:
arity=2;
s="__defineSetter__";
break;
case Id___lookupGetter__:
arity=1;
s="__lookupGetter__";
break;
case Id___lookupSetter__:
arity=1;
s="__lookupSetter__";
break;
default :
throw new IllegalArgumentException(String.valueOf(id));
}
initPrototypeMethod(OBJECT_TAG,id,s,arity);
}
