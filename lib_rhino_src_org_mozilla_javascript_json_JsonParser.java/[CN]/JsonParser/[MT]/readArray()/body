{
  consumeWhitespace();
  if (pos < length && src.charAt(pos) == ']') {
    pos+=1;
    return cx.newArray(scope,0);
  }
  List<Object> list=new ArrayList<Object>();
  boolean needsComma=false;
  while (pos < length) {
    char c=src.charAt(pos);
switch (c) {
case ']':
      if (!needsComma) {
        throw new ParseException("Unexpected comma in array literal");
      }
    pos+=1;
  return cx.newArray(scope,list.toArray());
case ',':
if (!needsComma) {
  throw new ParseException("Unexpected comma in array literal");
}
needsComma=false;
pos+=1;
break;
default :
if (needsComma) {
throw new ParseException("Missing comma in array literal");
}
list.add(readValue());
needsComma=true;
}
consumeWhitespace();
}
throw new ParseException("Unterminated array literal");
}
