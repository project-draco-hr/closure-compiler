{
  decompiler.addToken(Token.WHILE);
  loop.setType(Token.LOOP);
  pushScope(loop);
  try {
    decompiler.addToken(Token.LP);
    Node cond=transform(loop.getCondition());
    decompiler.addToken(Token.RP);
    decompiler.addEOL(Token.LC);
    Node body=transform(loop.getBody());
    decompiler.addEOL(Token.RC);
    return createLoop(loop,LOOP_WHILE,body,cond,null,null);
  }
  finally {
    popScope();
  }
}
