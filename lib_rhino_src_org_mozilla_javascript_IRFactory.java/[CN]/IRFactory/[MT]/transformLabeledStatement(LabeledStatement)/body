{
  Label label=ls.getFirstLabel();
  List<Label> labels=ls.getLabels();
  decompiler.addName(label.getName());
  if (labels.size() > 1) {
    for (    Label lb : labels.subList(1,labels.size())) {
      decompiler.addEOL(Token.COLON);
      decompiler.addName(lb.getName());
    }
  }
  if (ls.getStatement().getType() == Token.BLOCK) {
    decompiler.addToken(Token.OBJECTLIT);
    decompiler.addEOL(Token.LC);
  }
 else {
    decompiler.addEOL(Token.COLON);
  }
  Node statement=transform(ls.getStatement());
  if (ls.getStatement().getType() == Token.BLOCK) {
    decompiler.addEOL(Token.RC);
  }
  Node breakTarget=Node.newTarget();
  Node block=new Node(Token.BLOCK,label,statement,breakTarget);
  label.target=breakTarget;
  return block;
}
