{
  decompiler.addToken(Token.WITH);
  decompiler.addToken(Token.LP);
  Node expr=transform(node.getExpression());
  decompiler.addToken(Token.RP);
  decompiler.addEOL(Token.LC);
  Node stmt=transform(node.getStatement());
  decompiler.addEOL(Token.RC);
  return createWith(expr,stmt,node.getLineno());
}
