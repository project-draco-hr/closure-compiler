{
  CompilerOptions options=createCompilerOptions();
  CompilationLevel level=CompilationLevel.SIMPLE_OPTIMIZATIONS;
  level.setOptionsForCompilationLevel(options);
  WarningLevel warnings=WarningLevel.DEFAULT;
  warnings.setOptionsForWarningLevel(options);
  String code="" + "function some_function() {\n" + "  var fn1;\n"+ "  var fn2;\n"+ "\n"+ "  if (any_expression) {\n"+ "    fn2 = external_ref;\n"+ "    fn1 = function (content) {\n"+ "      return fn2();\n"+ "    }\n"+ "  }\n"+ "\n"+ "  return {\n"+ "    method1: function () {\n"+ "      if (fn1) fn1();\n"+ "      return true;\n"+ "    },\n"+ "    method2: function () {\n"+ "      return false;\n"+ "    }\n"+ "  }\n"+ "}";
  String result="" + "function some_function() {\n" + "  var a, b;\n"+ "  any_expression && (b = external_ref, a = function(a) {\n"+ "    return b()\n"+ "  });\n"+ "  return{method1:function() {\n"+ "    a && a();\n"+ "    return !0\n"+ "  }, method2:function() {\n"+ "    return !1\n"+ "  }}\n"+ "}\n"+ "";
  test(options,code,result);
}
