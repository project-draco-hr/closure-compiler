{
  SourcePosition start=getTreeStartLocation();
  ImmutableList.Builder<ParseTree> elements=ImmutableList.builder();
  eat(TokenType.OPEN_SQUARE);
  while (peek(TokenType.COMMA) || peekPatternElement()) {
    if (peek(TokenType.COMMA)) {
      eat(TokenType.COMMA);
      elements.add(new NullTree(getTreeLocation(getTreeStartLocation())));
    }
 else {
      ParseTree element=parsePatternElement(kind,arraySubPatternFollowSet);
      elements.add(element);
      if (element.isSpreadPatternElement()) {
        break;
      }
 else       if (peek(TokenType.COMMA)) {
        eat(TokenType.COMMA);
        if (peek(TokenType.CLOSE_SQUARE)) {
          reportError("Array pattern may not end with a comma");
          break;
        }
      }
 else {
        break;
      }
    }
  }
  eat(TokenType.CLOSE_SQUARE);
  return new ArrayPatternTree(getTreeLocation(start),elements.build());
}
