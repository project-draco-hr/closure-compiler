{
  SourcePosition start=getTreeStartLocation();
  if (peekType() == TokenType.OPEN_SQUARE) {
    ParseTree key=parseComputedPropertyName();
    eat(TokenType.COLON);
    ParseTree value=parseObjectPatternFieldRHS(kind);
    return new ComputedPropertyDefinitionTree(getTreeLocation(start),key,value);
  }
  Token name;
  if (peekId() || Keywords.isKeyword(peekType())) {
    name=eatIdOrKeywordAsId();
    if (!peek(TokenType.COLON)) {
      IdentifierToken idToken=(IdentifierToken)name;
      if (Keywords.isKeyword(idToken.value)) {
        reportError("cannot use keyword '" + name + "' here.");
      }
      if (peek(TokenType.EQUAL)) {
        IdentifierExpressionTree idTree=new IdentifierExpressionTree(getTreeLocation(start),idToken);
        eat(TokenType.EQUAL);
        ParseTree defaultValue=parseAssignmentExpression();
        return new DefaultParameterTree(getTreeLocation(start),idTree,defaultValue);
      }
      return new PropertyNameAssignmentTree(getTreeLocation(start),name,null);
    }
  }
 else {
    name=parseLiteralExpression().literalToken;
  }
  eat(TokenType.COLON);
  ParseTree value=parseObjectPatternFieldRHS(kind);
  return new PropertyNameAssignmentTree(getTreeLocation(start),name,value);
}
