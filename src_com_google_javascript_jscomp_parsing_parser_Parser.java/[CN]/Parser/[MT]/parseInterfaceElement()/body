{
  SourcePosition start=getTreeStartLocation();
  boolean isGenerator=eatOpt(TokenType.STAR) != null;
  IdentifierToken name=null;
  TokenType type=peekType();
  if (type == TokenType.IDENTIFIER || Keywords.isKeyword(type)) {
    name=eatIdOrKeywordAsId();
  }
 else   if (type == TokenType.OPEN_SQUARE) {
    return parseIndexSignature();
  }
 else {
  }
  boolean isOptional=false;
  if (peek(TokenType.QUESTION)) {
    eat(TokenType.QUESTION);
    isOptional=true;
  }
  if (peek(TokenType.OPEN_PAREN) || peek(TokenType.OPEN_ANGLE)) {
    ParseTree function=parseMethodSignature(start,name,false,isGenerator,isOptional);
    return function;
  }
 else {
    ParseTree declaredType=maybeParseColonType();
    return new MemberVariableTree(getTreeLocation(start),name,false,isOptional,declaredType);
  }
}
