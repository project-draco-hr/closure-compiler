{
  TokenType type=peekType();
  if (type == TokenType.STAR) {
    return parsePropertyAssignmentGenerator();
  }
 else   if (type == TokenType.STRING || type == TokenType.NUMBER || type == TokenType.IDENTIFIER || Keywords.isKeyword(type)) {
    if (peekGetAccessor()) {
      return parseGetAccessor();
    }
 else     if (peekSetAccessor()) {
      return parseSetAccessor();
    }
 else     if (peekAsyncMethod()) {
      return parseAsyncMethod();
    }
 else     if (peekType(1) == TokenType.OPEN_PAREN) {
      return parseClassMemberDeclaration();
    }
 else {
      return parsePropertyNameAssignment();
    }
  }
 else   if (type == TokenType.OPEN_SQUARE) {
    SourcePosition start=getTreeStartLocation();
    ParseTree name=parseComputedPropertyName();
    if (peek(TokenType.COLON)) {
      eat(TokenType.COLON);
      ParseTree value=parseAssignmentExpression();
      return new ComputedPropertyDefinitionTree(getTreeLocation(start),name,value);
    }
 else {
      FunctionDeclarationTree.Builder builder=FunctionDeclarationTree.builder(FunctionDeclarationTree.Kind.EXPRESSION);
      parseFunctionTail(builder);
      ParseTree value=builder.build(getTreeLocation(start));
      return new ComputedPropertyMethodTree(getTreeLocation(start),null,name,value);
    }
  }
 else {
    throw new RuntimeException("unreachable");
  }
}
