{
  SourcePosition listStart=getTreeStartLocation();
  eat(TokenType.OPEN_PAREN);
  ImmutableList.Builder<ParseTree> result=ImmutableList.builder();
  boolean hasDefaultParameters=false;
  while (peek(TokenType.SPREAD) || peekId() || peek(TokenType.OPEN_SQUARE)|| peek(TokenType.OPEN_CURLY)) {
    SourcePosition start=getTreeStartLocation();
    if (peek(TokenType.SPREAD)) {
      eat(TokenType.SPREAD);
      result.add(new RestParameterTree(getTreeLocation(start),eatId()));
      break;
    }
    ParseTree parameter;
    if (peekId()) {
      parameter=parseIdentifierExpression();
    }
 else     if (peek(TokenType.OPEN_SQUARE)) {
      parameter=parseArrayPattern(PatternKind.INITIALIZER);
    }
 else {
      parameter=parseObjectPattern(PatternKind.INITIALIZER);
    }
    if (hasDefaultParameters || peek(TokenType.EQUAL)) {
      eat(TokenType.EQUAL);
      ParseTree defaultValue=parseAssignmentExpression();
      parameter=new DefaultParameterTree(getTreeLocation(start),parameter,defaultValue);
      hasDefaultParameters=true;
    }
    result.add(parameter);
    if (!peek(TokenType.CLOSE_PAREN)) {
      eat(TokenType.COMMA);
    }
  }
  eat(TokenType.CLOSE_PAREN);
  return new FormalParameterListTree(getTreeLocation(listStart),result.build());
}
