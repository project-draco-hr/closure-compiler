{
  if (peek(TokenType.YIELD) && inGeneratorContext()) {
    return parseYield(expressionIn);
  }
  SourcePosition start=getTreeStartLocation();
  ParseTree left=parseConditional(expressionIn);
  if (peek(TokenType.ARROW)) {
    return completeAssignmentExpressionParseAtArrow(left,expressionIn);
  }
  if (left.type == ParseTreeType.FORMAL_PARAMETER_LIST) {
    reportError("invalid paren expression");
  }
  if (peekAssignmentOperator()) {
    left=transformLeftHandSideExpression(left);
    if (!left.isValidAssignmentTarget()) {
      reportError("invalid assignment target");
    }
    Token operator=nextToken();
    if (TokenType.STAR_STAR_EQUAL.equals(operator.type)) {
      features=features.require(Feature.EXPONENT_OP);
    }
    ParseTree right=parseAssignment(expressionIn);
    return new BinaryOperatorTree(getTreeLocation(start),left,operator,right);
  }
  return left;
}
