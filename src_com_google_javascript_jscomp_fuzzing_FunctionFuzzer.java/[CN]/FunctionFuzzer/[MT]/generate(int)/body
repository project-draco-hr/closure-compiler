{
  int paramBodyBudget;
  Node name;
  if (isExpression) {
    Preconditions.checkArgument(budget >= 3);
    scopeManager.addScope();
    if (budget >= 4 && random.nextInt(2) == 0) {
      name=getIdFuzzer().generate(1);
      paramBodyBudget=budget - 3;
    }
 else {
      name=Node.newString(Token.NAME,"");
      paramBodyBudget=budget - 2;
    }
  }
 else {
    Preconditions.checkArgument(budget >= 4);
    name=getIdFuzzer().generate(1);
    paramBodyBudget=budget - 3;
    scopeManager.addScope();
  }
  int numParams=random.nextInt(getOwnConfig().optInt("maxParams") + 1);
  int bodyBudget=paramBodyBudget - numParams - 1;
  Node params=new ParamListFuzzer(random,scopeManager,config,snGenerator).generate(numParams);
  int numStmts=generateLength(bodyBudget);
  if (numStmts < 1) {
    numStmts=1;
  }
  AbstractFuzzer[] fuzzers=new AbstractFuzzer[numStmts];
  Arrays.fill(fuzzers,new SourceElementFuzzer(random,scopeManager,config,snGenerator));
  Node[] components=distribute(paramBodyBudget,fuzzers);
  Node body=new Node(Token.BLOCK);
  for (int i=0; i < numStmts; i++) {
    body.addChildToBack(components[i]);
  }
  scopeManager.removeScope();
  return new Node(Token.FUNCTION,name,params,body);
}
