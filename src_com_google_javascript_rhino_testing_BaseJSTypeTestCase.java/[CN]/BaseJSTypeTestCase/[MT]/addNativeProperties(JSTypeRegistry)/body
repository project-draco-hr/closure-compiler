{
  JSType booleanType=registry.getNativeType(JSTypeNative.BOOLEAN_TYPE);
  JSType numberType=registry.getNativeType(JSTypeNative.NUMBER_TYPE);
  JSType stringType=registry.getNativeType(JSTypeNative.STRING_TYPE);
  JSType unknownType=registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);
  ObjectType objectType=registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);
  ObjectType arrayType=registry.getNativeObjectType(JSTypeNative.ARRAY_TYPE);
  ObjectType dateType=registry.getNativeObjectType(JSTypeNative.DATE_TYPE);
  ObjectType regexpType=registry.getNativeObjectType(JSTypeNative.REGEXP_TYPE);
  ObjectType booleanObjectType=registry.getNativeObjectType(JSTypeNative.BOOLEAN_OBJECT_TYPE);
  ObjectType numberObjectType=registry.getNativeObjectType(JSTypeNative.NUMBER_OBJECT_TYPE);
  ObjectType stringObjectType=registry.getNativeObjectType(JSTypeNative.STRING_OBJECT_TYPE);
  ObjectType objectPrototype=registry.getNativeFunctionType(JSTypeNative.OBJECT_FUNCTION_TYPE).getPrototype();
  addMethod(registry,objectPrototype,"constructor",objectType);
  addMethod(registry,objectPrototype,"toString",stringType);
  addMethod(registry,objectPrototype,"toLocaleString",stringType);
  addMethod(registry,objectPrototype,"valueOf",unknownType);
  addMethod(registry,objectPrototype,"hasOwnProperty",booleanType);
  addMethod(registry,objectPrototype,"isPrototypeOf",booleanType);
  addMethod(registry,objectPrototype,"propertyIsEnumerable",booleanType);
  ObjectType arrayPrototype=registry.getNativeFunctionType(JSTypeNative.ARRAY_FUNCTION_TYPE).getPrototype();
  addMethod(registry,arrayPrototype,"constructor",arrayType);
  addMethod(registry,arrayPrototype,"toString",stringType);
  addMethod(registry,arrayPrototype,"toLocaleString",stringType);
  addMethod(registry,arrayPrototype,"concat",arrayType);
  addMethod(registry,arrayPrototype,"join",stringType);
  addMethod(registry,arrayPrototype,"pop",unknownType);
  addMethod(registry,arrayPrototype,"push",numberType);
  addMethod(registry,arrayPrototype,"reverse",arrayType);
  addMethod(registry,arrayPrototype,"shift",unknownType);
  addMethod(registry,arrayPrototype,"slice",arrayType);
  addMethod(registry,arrayPrototype,"sort",arrayType);
  addMethod(registry,arrayPrototype,"splice",arrayType);
  addMethod(registry,arrayPrototype,"unshift",numberType);
  arrayType.defineDeclaredProperty("length",numberType,true);
  ObjectType booleanPrototype=registry.getNativeFunctionType(JSTypeNative.BOOLEAN_OBJECT_FUNCTION_TYPE).getPrototype();
  addMethod(registry,booleanPrototype,"constructor",booleanObjectType);
  addMethod(registry,booleanPrototype,"toString",stringType);
  addMethod(registry,booleanPrototype,"valueOf",booleanType);
  ObjectType datePrototype=registry.getNativeFunctionType(JSTypeNative.DATE_FUNCTION_TYPE).getPrototype();
  addMethod(registry,datePrototype,"constructor",dateType);
  addMethod(registry,datePrototype,"toString",stringType);
  addMethod(registry,datePrototype,"toDateString",stringType);
  addMethod(registry,datePrototype,"toTimeString",stringType);
  addMethod(registry,datePrototype,"toLocaleString",stringType);
  addMethod(registry,datePrototype,"toLocaleDateString",stringType);
  addMethod(registry,datePrototype,"toLocaleTimeString",stringType);
  addMethod(registry,datePrototype,"valueOf",numberType);
  addMethod(registry,datePrototype,"getTime",numberType);
  addMethod(registry,datePrototype,"getFullYear",numberType);
  addMethod(registry,datePrototype,"getUTCFullYear",numberType);
  addMethod(registry,datePrototype,"getMonth",numberType);
  addMethod(registry,datePrototype,"getUTCMonth",numberType);
  addMethod(registry,datePrototype,"getDate",numberType);
  addMethod(registry,datePrototype,"getUTCDate",numberType);
  addMethod(registry,datePrototype,"getDay",numberType);
  addMethod(registry,datePrototype,"getUTCDay",numberType);
  addMethod(registry,datePrototype,"getHours",numberType);
  addMethod(registry,datePrototype,"getUTCHours",numberType);
  addMethod(registry,datePrototype,"getMinutes",numberType);
  addMethod(registry,datePrototype,"getUTCMinutes",numberType);
  addMethod(registry,datePrototype,"getSeconds",numberType);
  addMethod(registry,datePrototype,"getUTCSeconds",numberType);
  addMethod(registry,datePrototype,"getMilliseconds",numberType);
  addMethod(registry,datePrototype,"getUTCMilliseconds",numberType);
  addMethod(registry,datePrototype,"getTimezoneOffset",numberType);
  addMethod(registry,datePrototype,"setTime",numberType);
  addMethod(registry,datePrototype,"setMilliseconds",numberType);
  addMethod(registry,datePrototype,"setUTCMilliseconds",numberType);
  addMethod(registry,datePrototype,"setSeconds",numberType);
  addMethod(registry,datePrototype,"setUTCSeconds",numberType);
  addMethod(registry,datePrototype,"setMinutes",numberType);
  addMethod(registry,datePrototype,"setUTCMinutes",numberType);
  addMethod(registry,datePrototype,"setHours",numberType);
  addMethod(registry,datePrototype,"setUTCHours",numberType);
  addMethod(registry,datePrototype,"setDate",numberType);
  addMethod(registry,datePrototype,"setUTCDate",numberType);
  addMethod(registry,datePrototype,"setMonth",numberType);
  addMethod(registry,datePrototype,"setUTCMonth",numberType);
  addMethod(registry,datePrototype,"setFullYear",numberType);
  addMethod(registry,datePrototype,"setUTCFullYear",numberType);
  addMethod(registry,datePrototype,"toUTCString",stringType);
  addMethod(registry,datePrototype,"toGMTString",stringType);
  ObjectType numberPrototype=registry.getNativeFunctionType(JSTypeNative.NUMBER_OBJECT_FUNCTION_TYPE).getPrototype();
  addMethod(registry,numberPrototype,"constructor",numberObjectType);
  addMethod(registry,numberPrototype,"toString",stringType);
  addMethod(registry,numberPrototype,"toLocaleString",stringType);
  addMethod(registry,numberPrototype,"valueOf",numberType);
  addMethod(registry,numberPrototype,"toFixed",stringType);
  addMethod(registry,numberPrototype,"toExponential",stringType);
  addMethod(registry,numberPrototype,"toPrecision",stringType);
  ObjectType regexpPrototype=registry.getNativeFunctionType(JSTypeNative.REGEXP_FUNCTION_TYPE).getPrototype();
  addMethod(registry,regexpPrototype,"constructor",regexpType);
  addMethod(registry,regexpPrototype,"exec",registry.createNullableType(arrayType));
  addMethod(registry,regexpPrototype,"test",booleanType);
  addMethod(registry,regexpPrototype,"toString",stringType);
  regexpType.defineDeclaredProperty("source",stringType,true);
  regexpType.defineDeclaredProperty("global",booleanType,true);
  regexpType.defineDeclaredProperty("ignoreCase",booleanType,true);
  regexpType.defineDeclaredProperty("multiline",booleanType,true);
  regexpType.defineDeclaredProperty("lastIndex",numberType,true);
  ObjectType stringPrototype=registry.getNativeFunctionType(JSTypeNative.STRING_OBJECT_FUNCTION_TYPE).getPrototype();
  addMethod(registry,stringPrototype,"constructor",stringObjectType);
  addMethod(registry,stringPrototype,"toString",stringType);
  addMethod(registry,stringPrototype,"valueOf",stringType);
  addMethod(registry,stringPrototype,"charAt",stringType);
  addMethod(registry,stringPrototype,"charCodeAt",numberType);
  addMethod(registry,stringPrototype,"concat",stringType);
  addMethod(registry,stringPrototype,"indexOf",numberType);
  addMethod(registry,stringPrototype,"lastIndexOf",numberType);
  addMethod(registry,stringPrototype,"localeCompare",numberType);
  addMethod(registry,stringPrototype,"match",registry.createNullableType(arrayType));
  addMethod(registry,stringPrototype,"replace",stringType);
  addMethod(registry,stringPrototype,"search",numberType);
  addMethod(registry,stringPrototype,"slice",stringType);
  addMethod(registry,stringPrototype,"split",arrayType);
  addMethod(registry,stringPrototype,"substring",stringType);
  addMethod(registry,stringPrototype,"toLowerCase",stringType);
  addMethod(registry,stringPrototype,"toLocaleLowerCase",stringType);
  addMethod(registry,stringPrototype,"toUpperCase",stringType);
  addMethod(registry,stringPrototype,"toLocaleUpperCase",stringType);
  stringObjectType.defineDeclaredProperty("length",numberType,true);
}
