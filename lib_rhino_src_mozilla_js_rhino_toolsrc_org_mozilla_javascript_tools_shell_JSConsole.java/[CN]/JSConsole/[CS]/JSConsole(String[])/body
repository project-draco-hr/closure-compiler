{
  super("Rhino JavaScript Console");
  JMenuBar menubar=new JMenuBar();
  createFileChooser();
  String[] fileItems={"Load...","Exit"};
  String[] fileCmds={"Load","Exit"};
  char[] fileShortCuts={'L','X'};
  String[] editItems={"Cut","Copy","Paste"};
  char[] editShortCuts={'T','C','P'};
  String[] plafItems={"Metal","Windows","Motif"};
  boolean[] plafState={true,false,false};
  JMenu fileMenu=new JMenu("File");
  fileMenu.setMnemonic('F');
  JMenu editMenu=new JMenu("Edit");
  editMenu.setMnemonic('E');
  JMenu plafMenu=new JMenu("Platform");
  plafMenu.setMnemonic('P');
  for (int i=0; i < fileItems.length; ++i) {
    JMenuItem item=new JMenuItem(fileItems[i],fileShortCuts[i]);
    item.setActionCommand(fileCmds[i]);
    item.addActionListener(this);
    fileMenu.add(item);
  }
  for (int i=0; i < editItems.length; ++i) {
    JMenuItem item=new JMenuItem(editItems[i],editShortCuts[i]);
    item.addActionListener(this);
    editMenu.add(item);
  }
  ButtonGroup group=new ButtonGroup();
  for (int i=0; i < plafItems.length; ++i) {
    JRadioButtonMenuItem item=new JRadioButtonMenuItem(plafItems[i],plafState[i]);
    group.add(item);
    item.addActionListener(this);
    plafMenu.add(item);
  }
  menubar.add(fileMenu);
  menubar.add(editMenu);
  menubar.add(plafMenu);
  setJMenuBar(menubar);
  consoleTextArea=new ConsoleTextArea(args);
  JScrollPane scroller=new JScrollPane(consoleTextArea);
  setContentPane(scroller);
  consoleTextArea.setRows(24);
  consoleTextArea.setColumns(80);
  addWindowListener(new WindowAdapter(){
    @Override public void windowClosing(    WindowEvent e){
      System.exit(0);
    }
  }
);
  pack();
  setVisible(true);
  Main.setIn(consoleTextArea.getIn());
  Main.setOut(consoleTextArea.getOut());
  Main.setErr(consoleTextArea.getErr());
  Main.main(args);
}
