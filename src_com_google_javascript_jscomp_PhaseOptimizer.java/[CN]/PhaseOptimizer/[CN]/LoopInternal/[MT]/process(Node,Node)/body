{
  Preconditions.checkState(!loopMutex,"Nested loops are forbidden");
  loopMutex=true;
  if (randomizeLoops) {
    List<NamedPass> mixedupPasses=Lists.newArrayList();
    Random random=new Random();
    while (myPasses.size() > 0) {
      mixedupPasses.add(myPasses.remove(random.nextInt(myPasses.size())));
    }
    myPasses.addAll(mixedupPasses);
  }
  try {
    int count=0;
    out:     do {
      if (count++ > MAX_LOOPS) {
        compiler.throwInternalError(OPTIMIZE_LOOP_ERROR,null);
      }
      recentChange.reset();
      for (      CompilerPass pass : myPasses) {
        pass.process(externs,root);
        if (hasHaltingErrors()) {
          break out;
        }
      }
    }
 while (recentChange.hasCodeChanged() && !hasHaltingErrors());
    if (randomizeLoops) {
      loopsRun.add(getPassOrder());
    }
  }
  finally {
    loopMutex=false;
  }
}
