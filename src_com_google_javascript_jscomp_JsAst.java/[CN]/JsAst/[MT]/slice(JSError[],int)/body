{
  if (errors.length > startErrorCount) {
    ImmutableList.Builder<JSError> builder=ImmutableList.<JSError>builder();
    for (int i=startErrorCount; i < errors.length; i++) {
      JSError error=errors[i];
      Preconditions.checkState(error.node == null,"Error %s with node %s will cause a memory leak when AST caching is enabled",error,error.node);
      builder.add(errors[i]);
    }
    return builder.build();
  }
 else {
    return ImmutableList.of();
  }
}
