{
switch (n.getType()) {
case Token.FUNCTION:
    JSDocInfo bestJSDocInfo=NodeUtil.getBestJSDocInfo(n);
  if (bestJSDocInfo != null) {
    setTypeExpression(n,bestJSDocInfo.getReturnType());
  }
break;
case Token.NAME:
if (parent == null) {
break;
}
JSDocInfo parentJSDoc=NodeUtil.getBestJSDocInfo(parent);
if (parentJSDoc == null) {
break;
}
if (parent.isVar()) {
setTypeExpression(n,parentJSDoc.getType());
}
 else if (parent.isParamList()) {
JSTypeExpression parameterType=parentJSDoc.getParameterType(n.getString());
if (parameterType != null) {
Node attachTypeExpr=n;
if (parameterType.getRoot().getType() == Token.ELLIPSIS) {
attachTypeExpr=Node.newString(Token.REST,n.getString());
n.getParent().replaceChild(n,attachTypeExpr);
compiler.reportCodeChange();
}
setTypeExpression(attachTypeExpr,parameterType);
}
}
break;
default :
break;
}
}
