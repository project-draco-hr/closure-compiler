{
  new NodeTraversal(compiler,this).traverse(root);
  for (  ProvidedName pn : providedNames.values()) {
    pn.replace();
  }
  if (requiresLevel.isOn()) {
    for (    UnrecognizedRequire r : unrecognizedRequires) {
      DiagnosticType error;
      ProvidedName expectedName=providedNames.get(r.namespace);
      if (expectedName != null && expectedName.firstNode != null) {
        error=LATE_PROVIDE_ERROR;
      }
 else {
        error=MISSING_PROVIDE_ERROR;
      }
      compiler.report(JSError.make(r.inputName,r.requireNode,requiresLevel,error,r.namespace));
    }
  }
}
