{
  if (n.getType() != Token.CALL) {
    return;
  }
  String callName=n.getFirstChild().getQualifiedName();
  NameGenerator nameGenerator=nameGenerators.get(callName);
  if (nameGenerator == null) {
    return;
  }
  List<Replacement> idGeneratorMap=idGeneratorMaps.get(callName);
  if (!t.inGlobalScope()) {
    compiler.report(t.makeError(n,NON_GLOBAL_ID_GENERATOR_CALL));
    return;
  }
  for (  Node ancestor : n.getAncestors()) {
    if (NodeUtil.isControlStructure(ancestor)) {
      compiler.report(t.makeError(n,CONDITIONAL_ID_GENERATOR_CALL));
      return;
    }
  }
  String nextName=nameGenerator.generateNextName();
  parent.replaceChild(n,Node.newString(nextName));
  idGeneratorMap.add(new Replacement(nextName,t.getSourceName(),t.getLineNumber()));
  compiler.reportCodeChange();
}
