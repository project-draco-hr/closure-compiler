{
  SourceMapObject.Builder builder=SourceMapObject.builder();
  Object jsonInstance=null;
  try {
    jsonInstance=parseJson(contents);
  }
 catch (  Exception ex) {
    throw new SourceMapParseException("JSON parse exception: " + ex);
  }
  JsonMap sourceMap=(JsonMap)jsonInstance;
  builder.setVersion(sourceMap.version);
  builder.setFile(sourceMap.file);
  builder.setLineCount(sourceMap.getLineCount() != null ? sourceMap.lineCount : -1);
  builder.setMappings(sourceMap.mappings);
  builder.setSourceRoot(sourceMap.sourceRoot);
  if (sourceMap.sections != null) {
    ImmutableList.Builder<SourceMapSection> listBuilder=ImmutableList.builder();
    for (    Section section : sourceMap.sections) {
      listBuilder.add(buildSection(section));
    }
    builder.setSections(listBuilder.build());
  }
 else {
    builder.setSections(null);
  }
  builder.setSources(sourceMap.sources);
  builder.setNames(sourceMap.names);
  Map<String,Object> extensions=new LinkedHashMap<>();
  String[] keys=keys(sourceMap);
  for (  String key : keys) {
    if (key.startsWith("x_")) {
      extensions.put(key,get(sourceMap,key));
    }
  }
  builder.setExtensions(Collections.unmodifiableMap(extensions));
  return builder.build();
}
