{
  if (token != JsDocToken.LEFT_CURLY) {
    addParserWarning("msg.jsdoc.suppress");
    return token;
  }
 else {
    Set<String> suppressions=new HashSet<>();
    while (true) {
      if (match(JsDocToken.STRING)) {
        String name=stream.getString();
        if (!suppressionNames.contains(name)) {
          addParserWarning("msg.jsdoc.suppress.unknown",name);
        }
        suppressions.add(stream.getString());
        token=next();
      }
 else {
        addParserWarning("msg.jsdoc.suppress");
        return token;
      }
      if (match(JsDocToken.PIPE,JsDocToken.COMMA)) {
        token=next();
      }
 else {
        break;
      }
    }
    if (!match(JsDocToken.RIGHT_CURLY)) {
      addParserWarning("msg.jsdoc.suppress");
    }
 else {
      token=next();
      if (!jsdocBuilder.recordSuppressions(suppressions)) {
        addParserWarning("msg.jsdoc.suppress.duplicate");
      }
    }
    return eatUntilEOLIfNotAnnotation();
  }
}
