{
  AstNode pn=unaryExpr();
  for (; ; ) {
    int tt=peekToken(), opPos=ts.tokenBeg;
switch (tt) {
case Token.MUL:
case Token.DIV:
case Token.MOD:
      consumeToken();
    int line=ts.lineno;
  pn=new InfixExpression(tt,pn,unaryExpr(),opPos);
continue;
}
break;
}
return pn;
}
