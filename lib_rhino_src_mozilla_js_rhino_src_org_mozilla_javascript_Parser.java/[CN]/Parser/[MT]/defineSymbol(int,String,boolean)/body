{
  if (name == null) {
    if (compilerEnv.isIdeMode()) {
      return;
    }
 else {
      codeBug();
    }
  }
  Scope definingScope=currentScope.getDefiningScope(name);
  Symbol symbol=definingScope != null ? definingScope.getSymbol(name) : null;
  int symDeclType=symbol != null ? symbol.getDeclType() : -1;
  if (symbol != null && (symDeclType == Token.CONST || declType == Token.CONST || (definingScope == currentScope && symDeclType == Token.LET))) {
    addError(symDeclType == Token.CONST ? "msg.const.redecl" : symDeclType == Token.LET ? "msg.let.redecl" : symDeclType == Token.VAR ? "msg.var.redecl" : symDeclType == Token.FUNCTION ? "msg.fn.redecl" : "msg.parm.redecl",name);
    return;
  }
switch (declType) {
case Token.LET:
    if (!ignoreNotInBlock && ((currentScope.getType() == Token.IF) || currentScope instanceof Loop)) {
      addError("msg.let.decl.not.in.block");
      return;
    }
  currentScope.putSymbol(new Symbol(declType,name));
return;
case Token.VAR:
case Token.CONST:
case Token.FUNCTION:
if (symbol != null) {
if (symDeclType == Token.VAR) addStrictWarning("msg.var.redecl",name);
 else if (symDeclType == Token.LP) {
  addStrictWarning("msg.var.hides.arg",name);
}
}
 else {
currentScriptOrFn.putSymbol(new Symbol(declType,name));
}
return;
case Token.LP:
if (symbol != null) {
addWarning("msg.dup.parms",name);
}
currentScriptOrFn.putSymbol(new Symbol(declType,name));
return;
default :
throw codeBug();
}
}
