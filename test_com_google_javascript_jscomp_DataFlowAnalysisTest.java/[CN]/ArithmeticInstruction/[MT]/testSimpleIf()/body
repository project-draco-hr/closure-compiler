{
  Variable a=new Variable("a");
  Variable b=new Variable("b");
  Variable c=new Variable("c");
  Instruction inst1=new BranchInstruction(a);
  Instruction inst2=newAssignNumberToVariableInstruction(b,1);
  Instruction inst3=newAssignNumberToVariableInstruction(b,1);
  Instruction inst4=newAssignVariableToVariableInstruction(c,b);
  ControlFlowGraph<Instruction> cfg=new ControlFlowGraph<Instruction>(inst1);
  GraphNode<Instruction,Branch> n1=cfg.createNode(inst1);
  GraphNode<Instruction,Branch> n2=cfg.createNode(inst2);
  GraphNode<Instruction,Branch> n3=cfg.createNode(inst3);
  GraphNode<Instruction,Branch> n4=cfg.createNode(inst4);
  cfg.connect(inst1,ControlFlowGraph.Branch.ON_FALSE,inst2);
  cfg.connect(inst1,ControlFlowGraph.Branch.ON_TRUE,inst3);
  cfg.connect(inst2,ControlFlowGraph.Branch.UNCOND,inst4);
  cfg.connect(inst3,ControlFlowGraph.Branch.UNCOND,inst4);
  DummyConstPropagation constProp=new DummyConstPropagation(cfg);
  constProp.analyze();
  verifyInHas(n1,a,null);
  verifyInHas(n1,b,null);
  verifyInHas(n1,c,null);
  verifyOutHas(n1,a,null);
  verifyOutHas(n1,b,null);
  verifyOutHas(n1,c,null);
  verifyInHas(n2,a,null);
  verifyInHas(n2,b,null);
  verifyInHas(n2,c,null);
  verifyOutHas(n2,a,null);
  verifyOutHas(n2,b,1);
  verifyOutHas(n2,c,null);
  verifyInHas(n3,a,null);
  verifyInHas(n3,b,null);
  verifyInHas(n3,c,null);
  verifyOutHas(n3,a,null);
  verifyOutHas(n3,b,1);
  verifyOutHas(n3,c,null);
  verifyInHas(n4,a,null);
  verifyInHas(n4,b,1);
  verifyInHas(n4,c,null);
  verifyOutHas(n4,a,null);
  verifyOutHas(n4,b,1);
  verifyOutHas(n4,c,1);
}
