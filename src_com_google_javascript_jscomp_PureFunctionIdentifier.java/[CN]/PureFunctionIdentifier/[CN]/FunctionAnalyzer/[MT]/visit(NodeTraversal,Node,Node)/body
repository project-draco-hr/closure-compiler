{
  if (inExterns) {
    return;
  }
  if (!NodeUtil.nodeTypeMayHaveSideEffects(node) && !node.isReturn()) {
    return;
  }
  if (node.isCall() || node.isNew()) {
    allFunctionCalls.add(node);
  }
  Node enclosingFunction=traversal.getEnclosingFunction();
  if (enclosingFunction != null) {
    FunctionInformation sideEffectInfo=functionSideEffectMap.get(enclosingFunction);
    Preconditions.checkNotNull(sideEffectInfo);
    if (NodeUtil.isAssignmentOp(node)) {
      visitAssignmentOrUnaryOperator(sideEffectInfo,traversal.getScope(),node,node.getFirstChild(),node.getLastChild());
    }
 else {
switch (node.getType()) {
case CALL:
case NEW:
        visitCall(sideEffectInfo,node);
      break;
case DELPROP:
case DEC:
case INC:
    visitAssignmentOrUnaryOperator(sideEffectInfo,traversal.getScope(),node,node.getFirstChild(),null);
  break;
case NAME:
Preconditions.checkArgument(NodeUtil.isNameDeclaration(parent));
Node value=node.getFirstChild();
if (value != null && !NodeUtil.evaluatesToLocalValue(value)) {
Scope scope=traversal.getScope();
Var var=scope.getVar(node.getString());
sideEffectInfo.blacklistLocal(var);
}
break;
case THROW:
visitThrow(sideEffectInfo);
break;
case RETURN:
if (node.hasChildren() && !NodeUtil.evaluatesToLocalValue(node.getFirstChild())) {
sideEffectInfo.setTaintsReturn();
}
break;
default :
throw new IllegalArgumentException("Unhandled side effect node type " + Token.name(node.getType()));
}
}
}
}
