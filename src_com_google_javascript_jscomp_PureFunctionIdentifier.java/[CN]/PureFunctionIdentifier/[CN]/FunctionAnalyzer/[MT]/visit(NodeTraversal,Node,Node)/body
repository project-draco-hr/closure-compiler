{
  if (inExterns) {
    return;
  }
  if (!NodeUtil.nodeTypeMayHaveSideEffects(node) && node.getType() != Token.RETURN) {
    return;
  }
  if (NodeUtil.isCall(node) || NodeUtil.isNew(node)) {
    allFunctionCalls.add(node);
  }
  Node enclosingFunction=traversal.getEnclosingFunction();
  if (enclosingFunction != null) {
    FunctionSideEffectData sideEffectInfo=functionSideEffectMap.get(enclosingFunction);
    Preconditions.checkNotNull(sideEffectInfo);
    if (NodeUtil.isAssignmentOp(node)) {
      visitAssignmentOrUnaryOperator(sideEffectInfo,traversal.getScope(),node,node.getFirstChild(),node.getLastChild());
    }
 else {
switch (node.getType()) {
case Token.CALL:
case Token.NEW:
        visitCall(sideEffectInfo,node);
      break;
case Token.DELPROP:
case Token.DEC:
case Token.INC:
    visitAssignmentOrUnaryOperator(sideEffectInfo,traversal.getScope(),node,node.getFirstChild(),null);
  break;
case Token.NAME:
Preconditions.checkArgument(NodeUtil.isVarDeclaration(node));
Node value=node.getFirstChild();
if (value != null && !analyzeSet(new NameValueEntry(node),value,sideEffectInfo)) {
Scope scope=traversal.getScope();
Var var=scope.getVar(node.getString());
sideEffectInfo.addNonLocalValue(var);
}
break;
case Token.THROW:
visitThrow(sideEffectInfo);
break;
case Token.RETURN:
if (node.hasChildren() && !analyzeSet(KeywordValueEntry.RETURN,node.getFirstChild(),sideEffectInfo)) {
sideEffectInfo.setTaintsReturn();
}
break;
default :
throw new IllegalArgumentException("Unhandled side effect node type " + Token.name(node.getType()));
}
}
}
}
