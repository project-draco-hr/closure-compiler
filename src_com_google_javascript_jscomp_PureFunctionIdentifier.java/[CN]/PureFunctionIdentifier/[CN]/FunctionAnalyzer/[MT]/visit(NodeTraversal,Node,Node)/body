{
  if (inExterns) {
    return;
  }
  if (!NodeUtil.nodeTypeMayHaveSideEffects(node,compiler) && !node.isReturn()) {
    return;
  }
  if (NodeUtil.isCallOrNew(node)) {
    allFunctionCalls.add(node);
  }
  Node enclosingFunction=traversal.getEnclosingFunction();
  if (enclosingFunction == null) {
    return;
  }
  FunctionInformation sideEffectInfo=functionSideEffectMap.get(enclosingFunction);
  Preconditions.checkNotNull(sideEffectInfo);
  if (NodeUtil.isAssignmentOp(node) || node.isInc() || node.isDelProp()|| node.isDec()) {
    visitAssignmentOrUnaryOperator(sideEffectInfo,traversal.getScope(),node);
  }
 else   if (NodeUtil.isCallOrNew(node)) {
    visitCall(sideEffectInfo,node);
  }
 else   if (node.isName()) {
    Preconditions.checkArgument(NodeUtil.isNameDeclaration(parent));
    Node value=node.getFirstChild();
    if (value != null && !NodeUtil.evaluatesToLocalValue(value)) {
      Scope scope=traversal.getScope();
      Var var=scope.getVar(node.getString());
      sideEffectInfo.blacklistLocal(var);
    }
  }
 else   if (node.isThrow()) {
    sideEffectInfo.setFunctionThrows();
  }
 else   if (node.isReturn()) {
    if (node.hasChildren() && !NodeUtil.evaluatesToLocalValue(node.getFirstChild())) {
      sideEffectInfo.setTaintsReturn();
    }
  }
 else {
    throw new IllegalArgumentException("Unhandled side effect node type " + node.getType());
  }
}
