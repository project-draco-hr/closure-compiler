{
  typeCheck(LINE_JOINER.join("/** @record */","function Rec1() {}","/** @type {!Rec1} */","Rec1.prototype.p1;","/** @record */","function Rec2() {}","/** @type {!Rec2} */","Rec2.prototype.p1;","function f(/** !Rec1 */ x, /** !Rec2 */ y) {","  x = y;","}"));
  typeCheck(LINE_JOINER.join("/** @record */","function Rec1() {}","/** @type {!Rec2} */","Rec1.prototype.p1;","/** @record */","function Rec2() {}","/** @type {!Rec1} */","Rec2.prototype.p1;","function f(/** !Rec1 */ x, /** !Rec2 */ y) {","  x = y;","}"));
  typeCheck(LINE_JOINER.join("/** @record */","function Foo() {}","/** @type {function(?Foo)} */","Foo.prototype.p1;","/** @record */","function Bar() {}","/** @type {function(?Bar)} */","Bar.prototype.p1;","function f(/** !Bar */ x) {","  var /** !Foo */ y = x;","}"));
  typeCheck(LINE_JOINER.join("/** @record */","function Foo() {}","/** @type {function():?Foo} */","Foo.prototype.p1;","/** @record */","function Bar() {}","/** @type {function():?Bar} */","Bar.prototype.p1;","function f(/** !Bar */ x) {","  var /** !Foo */ y = x;","}"));
  typeCheck(LINE_JOINER.join("/** @record */","function Rec() {}","/** @type {number} */","Rec.prototype.num;","/** @type {!Rec} */","Rec.prototype.recur;","function f(/** !Rec */ x) {}","var lit = { num: 123 };","lit.recur = lit;","f(lit);"));
  typeCheck(LINE_JOINER.join("/** @record */","function Rec1() {}","/** @type {!Rec1} */","Rec1.prototype.p1;","/** @type {number} */","Rec1.prototype.p2;","/** @record */","function Rec2() {}","/** @type {!Rec2} */","Rec2.prototype.p1;","/** @type {string} */","Rec2.prototype.p2;","/** @record */","function Baz() {}","/** @type {!Rec2} */","Baz.prototype.prop1;","/** @type {!Rec2} */","Baz.prototype.prop2;","function f(/** {prop1:!Rec1}|{prop2:!Rec1} */ x, /** !Baz */ y) {","  x = y;","}"),NewTypeInference.MISTYPED_ASSIGN_RHS);
  typeCheck(LINE_JOINER.join("/** @record */","function Foo() {};","/** @return {!MutableFoo} */","Foo.prototype.toMutable;","/** @record */","function MutableFoo() {};","/** @param {!Foo} from */","MutableFoo.prototype.copyFrom = function(from) {};","/** @record */ function Bar() {};","/** @return {!MutableBar} */","Bar.prototype.toMutable;","/** @record */","function MutableBar() {};","/** @param {!Bar} from */","MutableBar.prototype.copyFrom = function(from) {};","/** @constructor @implements {MutableBar} */","function MutableBarImpl() {};","MutableBarImpl.prototype.copyFrom = function(from) {};","/** @constructor @implements {MutableFoo} */","function MutableFooImpl() {};","MutableFooImpl.prototype.copyFrom = function(from) {};"));
  typeCheck(LINE_JOINER.join("/**"," * @record"," * @template T"," */","function GenericRec() {}","/** @type {?GenericRec<T>} */","GenericRec.prototype.recur;","/** @record */","function Rec() {}","/** @type {?Rec} */","Rec.prototype.recur;","/**"," * @template T"," * @param {!GenericRec<T>} x"," */","function f(x) {}","/** @param {!Rec} x */","function g(x) {","  f(x);","}"));
  typeCheck(LINE_JOINER.join("/**"," * @record"," * @template T"," */","function GenericRec() {}","/** @type {?GenericRec<T>} */","GenericRec.prototype.recur;","/**"," * @template T"," * @param {!GenericRec<T>} x"," */","function f(x) {}","/** @param {{recur:?GenericRec<number>}} x */","function g(x) {","  f(x);","}"));
}
