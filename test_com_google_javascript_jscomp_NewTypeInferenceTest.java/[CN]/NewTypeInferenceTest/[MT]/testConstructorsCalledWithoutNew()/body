{
  typeCheck(LINE_JOINER.join("var n = new Number();","n.prop = 0;","n.prop - 5;"));
  typeCheck(LINE_JOINER.join("var n = Number();","n.prop = 0;","n.prop - 5;"),NewTypeInference.INEXISTENT_PROPERTY);
  typeCheck(LINE_JOINER.join("/** @constructor @return {number} */ function Foo(){ return 5; }","var /** !Foo */ f = new Foo;","var /** number */ n = Foo();"));
  typeCheck(LINE_JOINER.join("/** @constructor */ function Foo(){ return 5; }","var /** !Foo */ f = new Foo;","var n = Foo();"),NewTypeInference.CONSTRUCTOR_NOT_CALLABLE);
  typeCheck(LINE_JOINER.join("/** @constructor @return {?} */ function Foo(){}","var /** !Foo */ f = new Foo;","var n = Foo();"),NewTypeInference.CONSTRUCTOR_NOT_CALLABLE);
}
