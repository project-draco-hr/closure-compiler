{
  typeCheck("/** @const */\n" + "var s = 'str';\n" + "function f() { s - 5; }",NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck("function f(/** string */ x) {\n" + "  /** @const */\n" + "  var s = x;\n"+ "  function g() { s - 5; }\n"+ "}",NewTypeInference.INVALID_OPERAND_TYPE);
  checkNoWarnings("var /** string */ x;\n" + "/** @const */\n" + "var s = x;\n"+ "function g() { s - 5; }");
  typeCheck("/** @constructor */\n" + "function Foo() {\n" + "  /** @const */\n"+ "  this.prop = 'str';\n"+ "}\n"+ "(new Foo).prop - 5;",NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck("/** @constructor */\n" + "function Foo() {}\n" + "/** @const */\n"+ "Foo.prop = 'str';\n"+ "function g() { Foo.prop - 5; }",NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck("function f(/** string */ s) {\n" + "  /** @constructor */\n" + "  function Foo() {}\n"+ "  /** @const */\n"+ "  Foo.prototype.prop = s;\n"+ "  function g() {\n"+ "    (new Foo).prop - 5;\n"+ "  }\n"+ "}",NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck("/** @const */\n" + "var ns = {};\n" + "/** @const */\n"+ "ns.prop = 'str';\n"+ "function f() {\n"+ "  ns.prop - 5;\n"+ "}",NewTypeInference.INVALID_OPERAND_TYPE);
}
