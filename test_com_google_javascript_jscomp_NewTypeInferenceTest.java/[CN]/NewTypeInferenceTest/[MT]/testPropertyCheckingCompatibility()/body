{
  compilerOptions.setWarningLevel(DiagnosticGroups.NEW_CHECK_TYPES_EXTRA_CHECKS,CheckLevel.OFF);
  typeCheck(LINE_JOINER.join("function f(/** !Object */ x) {","  return x.length + 1;","}"));
  typeCheck(LINE_JOINER.join("function f(/** !Object */ x) {","  return x.prop + 1;","}","/** @constructor */","function Bar() {","  this.prop = 123;","}"));
  typeCheck(LINE_JOINER.join("/** @constructor */","function Foo() {}","/** @constructor @extends {Foo} */","function Bar() {","  this.prop = 123;","}","function f(/** !Foo */ x) {","  return x.prop;","}"));
  typeCheck(LINE_JOINER.join("/** @interface */","function Foo() {}","/** @constructor @implements {Foo} */","function Bar() {","  this.prop = 123;","}","function f(/** !Foo */ x) {","  return x.prop;","}"));
  typeCheck(LINE_JOINER.join("/** @constructor @struct */","function Foo() {}","/** @constructor @extends {Foo} */","function Bar() {","  this.prop = 123;","}","function f(/** !Foo */ x) {","  return x.prop;","}"),NewTypeInference.INEXISTENT_PROPERTY);
  typeCheck(LINE_JOINER.join("/** @enum {!Foo} */","var E = {","  A: new Foo,","  B: new Foo","};","/** @constructor */","function Foo() {}","/** @constructor @extends {Foo} */","function Bar() {","  this.prop = 123;","}","function f(/** !E */ x) {","  return x.prop;","}","f(E.A);"));
  typeCheck(LINE_JOINER.join("/** @constructor */","function Foo() {}","function f(/** (!Foo | { a: number }) */ x) {","  return x.myprop;","}"),NewTypeInference.INEXISTENT_PROPERTY);
  typeCheck(LINE_JOINER.join("/** @constructor */","function Foo() {}","/** @constructor @extends {Foo} */","function Bar() {}","/** @constructor @extends {Bar} */","function Baz() {","  this.prop = 123;","}","function f(/** !Foo */ x) {","  return x.prop + 123;","}"));
  typeCheck(LINE_JOINER.join("/** @constructor */","function Foo() {}","/**"," * @constructor"," * @template T"," * @extends {Foo}"," */","function Bar() {}","/**"," * @constructor"," * @extends {Bar<number>}"," */","function Baz() {}","/**"," * @constructor"," * @extends {Bar<string>}"," */","function Qux() {","  this.prop = 123;","}","function f(/** !Foo */ x) {","  return x.prop + 234;","}"));
}
