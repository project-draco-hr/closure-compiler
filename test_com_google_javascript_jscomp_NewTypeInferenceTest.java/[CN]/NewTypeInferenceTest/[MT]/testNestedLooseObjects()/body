{
  checkNoWarnings("function f(obj) {\n" + "  obj.a.b = 123;\n" + "}");
  typeCheck("function f(obj) {\n" + "  obj.a.b = 123;\n" + "  obj.a.b < 'str';\n"+ "}",NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck("function f(obj, cond) {\n" + "  (cond ? obj : obj).x - 1;\n" + "  return obj.x;\n"+ "}\n"+ "f({x: 'str'}, true);",NewTypeInference.INVALID_ARGUMENT_TYPE);
  typeCheck("function f(obj) {\n" + "  obj.a.b - 123;\n" + "}\n"+ "f({a: {b: 'str'}})",NewTypeInference.INVALID_ARGUMENT_TYPE);
  checkNoWarnings("function f(obj) {\n" + "  obj.a.b = 123;\n" + "}\n"+ "f({a: {b: 'str'}})");
  typeCheck("function f(obj) {\n" + "  var o;\n" + "  (o = obj).x - 1;\n"+ "  return o.x;\n"+ "}\n"+ "f({x: 'str'});",NewTypeInference.INVALID_ARGUMENT_TYPE);
  typeCheck("function f(obj) {\n" + "  ({x: obj.foo}).x - 1;\n" + "}\n"+ "f({foo: 'str'});",NewTypeInference.INVALID_ARGUMENT_TYPE);
  typeCheck("function f(x) {\n" + "  ({p: x++}).p = 'str';\n" + "}\n"+ "f('str');",NewTypeInference.INVALID_ARGUMENT_TYPE);
  typeCheck("function f(x) {\n" + "  ({p: 'str'}).p = x++;\n" + "}\n"+ "f('str');",NewTypeInference.INVALID_ARGUMENT_TYPE);
  typeCheck("function f(x, y, z) {\n" + "  ({p: (y = x++), q: 'str'}).p = z = y;\n" + "  z < 'str';\n"+ "}",NewTypeInference.INVALID_OPERAND_TYPE);
}
