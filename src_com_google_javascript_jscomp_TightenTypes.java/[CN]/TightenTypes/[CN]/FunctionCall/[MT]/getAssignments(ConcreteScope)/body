{
  ConcreteType thisType=ConcreteType.NONE;
  ConcreteType recvType=inferConcreteType(scope,receiver);
  if (propName != null) {
    thisType=recvType;
    recvType=thisType.getPropertyType(propName);
  }
  if (recvType.isAll()) {
    throw new AssertionError("Found call on all type, which makes tighten types useless.");
  }
  if (isNewCall) {
    thisType=ConcreteType.NONE;
    for (    ConcreteInstanceType instType : recvType.getFunctionInstanceTypes()) {
      thisType=thisType.unionWith(instType);
    }
    boolean added=allInstantiatedTypes.add(thisType);
    if (added) {
      typeIntersectionMemos.clear();
    }
  }
  List<ConcreteType> argTypes=Lists.newArrayList();
  for (Node arg=firstArgument; arg != null; arg=arg.getNext()) {
    argTypes.add(inferConcreteType(scope,arg));
  }
  return getFunctionCallAssignments(recvType,thisType,argTypes);
}
