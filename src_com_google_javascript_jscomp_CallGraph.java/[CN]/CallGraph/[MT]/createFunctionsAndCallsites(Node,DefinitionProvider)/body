{
  mainFunction=createFunction(jsRoot);
  NodeTraversal.traverseEs6(compiler,jsRoot,new AbstractPostOrderCallback(){
    @Override public void visit(    NodeTraversal t,    Node n,    Node parent){
      int nodeType=n.getType();
      if (nodeType == Token.CALL || nodeType == Token.NEW) {
        Callsite callsite=createCallsite(n);
        Node containingFunctionNode=NodeUtil.getEnclosingFunction(t.getScopeRoot());
        if (containingFunctionNode == null) {
          containingFunctionNode=t.getClosestHoistScope().getRootNode();
        }
        Function containingFunction=functionsByNode.get(containingFunctionNode);
        if (containingFunction == null) {
          containingFunction=createFunction(containingFunctionNode);
        }
        callsite.containingFunction=containingFunction;
        containingFunction.addCallsiteInFunction(callsite);
        connectCallsiteToTargets(callsite,provider);
      }
 else       if (n.isFunction()) {
        if (!functionsByNode.containsKey(n)) {
          createFunction(n);
        }
      }
    }
  }
);
}
