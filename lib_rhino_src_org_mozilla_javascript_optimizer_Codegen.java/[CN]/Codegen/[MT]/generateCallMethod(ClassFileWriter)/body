{
  cfw.startMethod("call","(Lorg/mozilla/javascript/Context;" + "Lorg/mozilla/javascript/Scriptable;" + "Lorg/mozilla/javascript/Scriptable;"+ "[Ljava/lang/Object;)Ljava/lang/Object;",(short)(ACC_PUBLIC | ACC_FINAL));
  int nonTopCallLabel=cfw.acquireLabel();
  cfw.addALoad(1);
  cfw.addInvoke(ByteCode.INVOKESTATIC,"org/mozilla/javascript/ScriptRuntime","hasTopCall","(Lorg/mozilla/javascript/Context;" + ")Z");
  cfw.add(ByteCode.IFNE,nonTopCallLabel);
  cfw.addALoad(0);
  cfw.addALoad(1);
  cfw.addALoad(2);
  cfw.addALoad(3);
  cfw.addALoad(4);
  cfw.addInvoke(ByteCode.INVOKESTATIC,"org/mozilla/javascript/ScriptRuntime","doTopCall","(Lorg/mozilla/javascript/Callable;" + "Lorg/mozilla/javascript/Context;" + "Lorg/mozilla/javascript/Scriptable;"+ "Lorg/mozilla/javascript/Scriptable;"+ "[Ljava/lang/Object;"+ ")Ljava/lang/Object;");
  cfw.add(ByteCode.ARETURN);
  cfw.markLabel(nonTopCallLabel);
  cfw.addALoad(0);
  cfw.addALoad(1);
  cfw.addALoad(2);
  cfw.addALoad(3);
  cfw.addALoad(4);
  int end=scriptOrFnNodes.length;
  boolean generateSwitch=(2 <= end);
  int switchStart=0;
  int switchStackTop=0;
  if (generateSwitch) {
    cfw.addLoadThis();
    cfw.add(ByteCode.GETFIELD,cfw.getClassName(),ID_FIELD_NAME,"I");
    switchStart=cfw.addTableSwitch(1,end - 1);
  }
  for (int i=0; i != end; ++i) {
    ScriptNode n=scriptOrFnNodes[i];
    if (generateSwitch) {
      if (i == 0) {
        cfw.markTableSwitchDefault(switchStart);
        switchStackTop=cfw.getStackTop();
      }
 else {
        cfw.markTableSwitchCase(switchStart,i - 1,switchStackTop);
      }
    }
    if (n.getType() == Token.FUNCTION) {
      OptFunctionNode ofn=OptFunctionNode.get(n);
      if (ofn.isTargetOfDirectCall()) {
        int pcount=ofn.fnode.getParamCount();
        if (pcount != 0) {
          for (int p=0; p != pcount; ++p) {
            cfw.add(ByteCode.ARRAYLENGTH);
            cfw.addPush(p);
            int undefArg=cfw.acquireLabel();
            int beyond=cfw.acquireLabel();
            cfw.add(ByteCode.IF_ICMPLE,undefArg);
            cfw.addALoad(4);
            cfw.addPush(p);
            cfw.add(ByteCode.AALOAD);
            cfw.add(ByteCode.GOTO,beyond);
            cfw.markLabel(undefArg);
            pushUndefined(cfw);
            cfw.markLabel(beyond);
            cfw.adjustStackTop(-1);
            cfw.addPush(0.0);
            cfw.addALoad(4);
          }
        }
      }
    }
    cfw.addInvoke(ByteCode.INVOKESTATIC,mainClassName,getBodyMethodName(n),getBodyMethodSignature(n));
    cfw.add(ByteCode.ARETURN);
  }
  cfw.stopMethod((short)5);
}
