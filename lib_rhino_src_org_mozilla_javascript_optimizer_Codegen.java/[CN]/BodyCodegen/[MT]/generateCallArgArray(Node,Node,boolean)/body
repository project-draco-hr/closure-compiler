{
  int argCount=0;
  for (Node child=argChild; child != null; child=child.getNext()) {
    ++argCount;
  }
  if (argCount == 1 && itsOneArgArray >= 0) {
    cfw.addALoad(itsOneArgArray);
  }
 else {
    addNewObjectArray(argCount);
  }
  for (int i=0; i != argCount; ++i) {
    if (!isGenerator) {
      cfw.add(ByteCode.DUP);
      cfw.addPush(i);
    }
    if (!directCall) {
      generateExpression(argChild,node);
    }
 else {
      int dcp_register=nodeIsDirectCallParameter(argChild);
      if (dcp_register >= 0) {
        dcpLoadAsObject(dcp_register);
      }
 else {
        generateExpression(argChild,node);
        int childNumberFlag=argChild.getIntProp(Node.ISNUMBER_PROP,-1);
        if (childNumberFlag == Node.BOTH) {
          addDoubleWrap();
        }
      }
    }
    if (isGenerator) {
      short tempLocal=getNewWordLocal();
      cfw.addAStore(tempLocal);
      cfw.add(ByteCode.CHECKCAST,"[Ljava/lang/Object;");
      cfw.add(ByteCode.DUP);
      cfw.addPush(i);
      cfw.addALoad(tempLocal);
      releaseWordLocal(tempLocal);
    }
    cfw.add(ByteCode.AASTORE);
    argChild=argChild.getNext();
  }
}
