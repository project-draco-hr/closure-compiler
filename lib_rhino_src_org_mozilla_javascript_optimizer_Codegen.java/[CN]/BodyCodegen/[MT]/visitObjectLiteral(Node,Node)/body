{
  Object[] properties=(Object[])node.getProp(Node.OBJECT_IDS_PROP);
  int count=properties.length;
  addNewObjectArray(count);
  for (int i=0; i != count; ++i) {
    cfw.add(ByteCode.DUP);
    cfw.addPush(i);
    Object id=properties[i];
    if (id instanceof String) {
      cfw.addPush((String)id);
    }
 else {
      cfw.addPush(((Integer)id).intValue());
      addScriptRuntimeInvoke("wrapInt","(I)Ljava/lang/Integer;");
    }
    cfw.add(ByteCode.AASTORE);
  }
  addNewObjectArray(count);
  Node child2=child;
  for (int i=0; i != count; ++i) {
    cfw.add(ByteCode.DUP);
    cfw.addPush(i);
    int childType=child2.getType();
    if (childType == Token.GET || childType == Token.SET) {
      generateExpression(child2.getFirstChild(),node);
    }
 else {
      generateExpression(child2,node);
    }
    cfw.add(ByteCode.AASTORE);
    child2=child2.getNext();
  }
  boolean hasGetterSetters=false;
  child2=child;
  for (int i=0; i != count; ++i) {
    int childType=child2.getType();
    if (childType == Token.GET || childType == Token.SET) {
      hasGetterSetters=true;
      break;
    }
    child2=child2.getNext();
  }
  if (hasGetterSetters) {
    cfw.addPush(count);
    cfw.add(ByteCode.NEWARRAY,ByteCode.T_INT);
    child2=child;
    for (int i=0; i != count; ++i) {
      cfw.add(ByteCode.DUP);
      cfw.addPush(i);
      int childType=child2.getType();
      if (childType == Token.GET) {
        cfw.add(ByteCode.ICONST_M1);
      }
 else       if (childType == Token.SET) {
        cfw.add(ByteCode.ICONST_1);
      }
 else {
        cfw.add(ByteCode.ICONST_0);
      }
      cfw.add(ByteCode.IASTORE);
      child2=child2.getNext();
    }
  }
 else {
    cfw.add(ByteCode.ACONST_NULL);
  }
  cfw.addALoad(contextLocal);
  cfw.addALoad(variableObjectLocal);
  addScriptRuntimeInvoke("newObjectLiteral","([Ljava/lang/Object;" + "[Ljava/lang/Object;" + "[I"+ "Lorg/mozilla/javascript/Context;"+ "Lorg/mozilla/javascript/Scriptable;"+ ")Lorg/mozilla/javascript/Scriptable;");
}
