{
  Node firstArgChild=child.getNext();
  String className=codegen.mainClassName;
  short thisObjLocal=0;
  if (type == Token.NEW) {
    generateExpression(child,node);
  }
 else {
    generateFunctionAndThisObj(child,node);
    thisObjLocal=getNewWordLocal();
    cfw.addAStore(thisObjLocal);
  }
  int beyond=cfw.acquireLabel();
  int regularCall=cfw.acquireLabel();
  cfw.add(ByteCode.DUP);
  cfw.add(ByteCode.INSTANCEOF,className);
  cfw.add(ByteCode.IFEQ,regularCall);
  cfw.add(ByteCode.CHECKCAST,className);
  cfw.add(ByteCode.DUP);
  cfw.add(ByteCode.GETFIELD,className,Codegen.ID_FIELD_NAME,"I");
  cfw.addPush(codegen.getIndex(target.fnode));
  cfw.add(ByteCode.IF_ICMPNE,regularCall);
  cfw.addALoad(contextLocal);
  cfw.addALoad(variableObjectLocal);
  if (type == Token.NEW) {
    cfw.add(ByteCode.ACONST_NULL);
  }
 else {
    cfw.addALoad(thisObjLocal);
  }
  Node argChild=firstArgChild;
  while (argChild != null) {
    int dcp_register=nodeIsDirectCallParameter(argChild);
    if (dcp_register >= 0) {
      cfw.addALoad(dcp_register);
      cfw.addDLoad(dcp_register + 1);
    }
 else     if (argChild.getIntProp(Node.ISNUMBER_PROP,-1) == Node.BOTH) {
      cfw.add(ByteCode.GETSTATIC,"java/lang/Void","TYPE","Ljava/lang/Class;");
      generateExpression(argChild,node);
    }
 else {
      generateExpression(argChild,node);
      cfw.addPush(0.0);
    }
    argChild=argChild.getNext();
  }
  cfw.add(ByteCode.GETSTATIC,"org/mozilla/javascript/ScriptRuntime","emptyArgs","[Ljava/lang/Object;");
  cfw.addInvoke(ByteCode.INVOKESTATIC,codegen.mainClassName,(type == Token.NEW) ? codegen.getDirectCtorName(target.fnode) : codegen.getBodyMethodName(target.fnode),codegen.getBodyMethodSignature(target.fnode));
  cfw.add(ByteCode.GOTO,beyond);
  cfw.markLabel(regularCall);
  cfw.addALoad(contextLocal);
  cfw.addALoad(variableObjectLocal);
  if (type != Token.NEW) {
    cfw.addALoad(thisObjLocal);
    releaseWordLocal(thisObjLocal);
  }
  generateCallArgArray(node,firstArgChild,true);
  if (type == Token.NEW) {
    addScriptRuntimeInvoke("newObject","(Ljava/lang/Object;" + "Lorg/mozilla/javascript/Context;" + "Lorg/mozilla/javascript/Scriptable;"+ "[Ljava/lang/Object;"+ ")Lorg/mozilla/javascript/Scriptable;");
  }
 else {
    cfw.addInvoke(ByteCode.INVOKEINTERFACE,"org/mozilla/javascript/Callable","call","(Lorg/mozilla/javascript/Context;" + "Lorg/mozilla/javascript/Scriptable;" + "Lorg/mozilla/javascript/Scriptable;"+ "[Ljava/lang/Object;"+ ")Ljava/lang/Object;");
  }
  cfw.markLabel(beyond);
}
