{
  String source="function A() {var x; x()}\n" + "var B = function() {\n" + "(function C(){A()})()\n"+ "};\n";
  CallGraph callgraph=compileAndRunForward(source);
  CallGraph.Function functionA=callgraph.getUniqueFunctionWithName("A");
  Collection<CallGraph.Callsite> callsitesInA=functionA.getCallsitesInFunction();
  assertEquals(1,callsitesInA.size());
  CallGraph.Callsite firstCallsiteInA=callsitesInA.iterator().next();
  Node aTargetExpression=firstCallsiteInA.getAstNode().getFirstChild();
  assertEquals(Token.NAME,aTargetExpression.getType());
  assertEquals("x",aTargetExpression.getString());
  CallGraph.Function functionB=callgraph.getUniqueFunctionWithName("B");
  Collection<CallGraph.Callsite> callsitesInB=functionB.getCallsitesInFunction();
  assertEquals(1,callsitesInB.size());
  CallGraph.Callsite firstCallsiteInB=callsitesInB.iterator().next();
  Node bTargetExpression=firstCallsiteInB.getAstNode().getFirstChild();
  assertEquals(Token.FUNCTION,bTargetExpression.getType());
  assertEquals("C",NodeUtil.getFunctionName(bTargetExpression));
  CallGraph.Function functionC=callgraph.getUniqueFunctionWithName("C");
  Collection<CallGraph.Callsite> callsitesInC=functionC.getCallsitesInFunction();
  assertEquals(1,callsitesInC.size());
  CallGraph.Callsite firstCallsiteInC=callsitesInC.iterator().next();
  Node cTargetExpression=firstCallsiteInC.getAstNode().getFirstChild();
  assertEquals(Token.NAME,aTargetExpression.getType());
  assertEquals("A",cTargetExpression.getString());
}
