{
  compiler.init(Lists.newArrayList(SourceFile.fromCode("[externs]",externs)),Lists.newArrayList(SourceFile.fromCode("[testcode]",js)),compiler.getOptions());
  Node n=compiler.getInput(new InputId("[testcode]")).getAstRoot(compiler);
  Node externsNode=compiler.getInput(new InputId("[externs]")).getAstRoot(compiler);
  Node externAndJsRoot=new Node(Token.BLOCK,externsNode,n);
  externAndJsRoot.setIsSyntheticBlock(true);
  assertEquals("parsing error: " + Joiner.on(", ").join(compiler.getErrors()),0,compiler.getErrorCount());
  Scope s=makeTypeCheck().processForTesting(externsNode,n);
  return new TypeCheckResult(n,s);
}
