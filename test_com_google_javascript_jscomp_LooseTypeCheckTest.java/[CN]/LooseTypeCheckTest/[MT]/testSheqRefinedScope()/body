{
  Node n=parseAndTypeCheck("/** @constructor */function A() {}\n" + "/** @constructor \n @extends A */ function B() {}\n" + "/** @return {number} */\n"+ "B.prototype.p = function() { return 1; }\n"+ "/** @param {A} a\n @param {B} b */\n"+ "function f(a, b) {\n"+ "  b.p();\n"+ "  if (a === b) {\n"+ "    b.p();\n"+ "  }\n"+ "}");
  Node nodeC=n.getLastChild().getLastChild().getLastChild().getLastChild().getLastChild().getLastChild();
  JSType typeC=nodeC.getJSType();
  assertTrue(typeC.isNumber());
  Node nodeB=nodeC.getFirstChild().getFirstChild();
  JSType typeB=nodeB.getJSType();
  assertEquals("B",typeB.toString());
}
