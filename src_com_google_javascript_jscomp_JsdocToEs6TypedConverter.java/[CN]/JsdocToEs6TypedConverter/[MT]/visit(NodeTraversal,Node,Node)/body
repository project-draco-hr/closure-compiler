{
  JSDocInfo bestJSDocInfo=NodeUtil.getBestJSDocInfo(n);
switch (n.getType()) {
case Token.FUNCTION:
    if (bestJSDocInfo != null) {
      setTypeExpression(n,bestJSDocInfo.getReturnType());
    }
  break;
case Token.NAME:
case Token.GETPROP:
if (parent == null) {
  break;
}
if (parent.isVar() || parent.isAssign() || parent.isExprResult()) {
if (bestJSDocInfo != null) {
  setTypeExpression(n,bestJSDocInfo.getType());
}
}
 else if (parent.isParamList()) {
JSDocInfo parentDocInfo=NodeUtil.getBestJSDocInfo(parent.getParent());
if (parentDocInfo == null) {
  break;
}
JSTypeExpression parameterType=parentDocInfo.getParameterType(n.getString());
if (parameterType != null) {
  Node attachTypeExpr=n;
  if (parameterType.getRoot().getType() == Token.ELLIPSIS) {
    attachTypeExpr=IR.rest(n.getString());
    n.getParent().replaceChild(n,attachTypeExpr);
    compiler.reportCodeChange();
  }
  setTypeExpression(attachTypeExpr,parameterType);
}
}
break;
default :
break;
}
}
