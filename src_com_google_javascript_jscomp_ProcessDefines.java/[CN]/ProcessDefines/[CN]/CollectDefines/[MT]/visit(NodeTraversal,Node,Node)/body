{
  RefInfo refInfo=allRefInfo.get(n);
  if (refInfo != null) {
    Ref ref=refInfo.ref;
    Name name=refInfo.name;
    String fullName=name.getFullName();
switch (ref.type) {
case SET_FROM_GLOBAL:
case SET_FROM_LOCAL:
      Node valParent=getValueParent(ref);
    Node val=valParent.getLastChild();
  if (valParent.isAssign() && name.isSimpleName() && name.getDeclaration() == ref) {
    compiler.report(t.makeError(val,INVALID_DEFINE_INIT_ERROR,fullName));
  }
 else   if (processDefineAssignment(t,fullName,val,valParent)) {
    refInfo.name.removeRef(ref);
    lvalueToRemoveLater=valParent;
  }
break;
default :
if (t.getClosestHoistScope().isGlobal()) {
DefineInfo info=assignableDefines.get(fullName);
if (info != null) {
  setDefineInfoNotAssignable(info,t);
  assignableDefines.remove(fullName);
}
}
break;
}
}
if (!t.inGlobalScope() && n.getJSDocInfo() != null && n.getJSDocInfo().isDefine()) {
compiler.report(t.makeError(n,NON_GLOBAL_DEFINE_INIT_ERROR,""));
}
if (lvalueToRemoveLater == n) {
lvalueToRemoveLater=null;
if (n.isAssign()) {
Node last=n.getLastChild();
n.removeChild(last);
parent.replaceChild(n,last);
}
 else {
Preconditions.checkState(n.isName());
n.removeChild(n.getFirstChild());
}
compiler.reportCodeChange();
}
if (n.isCall()) {
if (t.inGlobalScope()) {
for (DefineInfo info : assignableDefines.values()) {
setDefineInfoNotAssignable(info,t);
}
assignableDefines.clear();
}
}
updateAssignAllowedStack(n,false);
}
