{
  List<Name> allDefines=Lists.newArrayList();
  for (  Name name : namespace.getNameIndex().values()) {
    Ref decl=name.getDeclaration();
    if (name.docInfo != null && name.docInfo.isDefine()) {
      if (isValidDefineType(name.docInfo.getType())) {
        allDefines.add(name);
      }
 else {
        JSError error=JSError.make(decl.getSourceName(),decl.node,INVALID_DEFINE_TYPE_ERROR);
        compiler.report(error);
      }
    }
 else {
      for (      Ref ref : name.getRefs()) {
        if (ref == decl) {
          continue;
        }
        Node n=ref.node;
        Node parent=ref.node.getParent();
        JSDocInfo info=n.getJSDocInfo();
        if (info == null && parent.getType() == Token.VAR && parent.hasOneChild()) {
          info=parent.getJSDocInfo();
        }
        if (info != null && info.isDefine()) {
          allDefines.add(name);
          break;
        }
      }
    }
  }
  CollectDefines pass=new CollectDefines(compiler,allDefines);
  NodeTraversal.traverse(compiler,root,pass);
  return pass.getAllDefines();
}
