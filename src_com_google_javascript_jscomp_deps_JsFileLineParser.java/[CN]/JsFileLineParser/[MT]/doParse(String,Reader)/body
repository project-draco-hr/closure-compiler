{
  this.filePath=filePath;
  parseSucceeded=true;
  BufferedReader lineBuffer=new BufferedReader(fileContents);
  String line=null;
  lineNum=0;
  boolean inMultilineComment=false;
  try {
    while (null != (line=lineBuffer.readLine())) {
      ++lineNum;
      try {
        String revisedLine=line;
        if (inMultilineComment) {
          int endOfComment=revisedLine.indexOf("*/");
          if (endOfComment != -1) {
            revisedLine=revisedLine.substring(endOfComment + 2);
            inMultilineComment=false;
          }
 else {
            revisedLine="";
          }
        }
        if (!inMultilineComment) {
          while (true) {
            int startOfLineComment=revisedLine.indexOf("//");
            int startOfMultilineComment=revisedLine.indexOf("/*");
            if (startOfLineComment != -1 && (startOfMultilineComment == -1 || startOfLineComment < startOfMultilineComment)) {
              revisedLine=revisedLine.substring(0,startOfLineComment);
              break;
            }
 else             if (startOfMultilineComment != -1) {
              int endOfMultilineComment=revisedLine.indexOf("*/",startOfMultilineComment + 2);
              if (endOfMultilineComment == -1) {
                revisedLine=revisedLine.substring(0,startOfMultilineComment);
                inMultilineComment=true;
                break;
              }
 else {
                revisedLine=revisedLine.substring(0,startOfMultilineComment) + revisedLine.substring(endOfMultilineComment + 2);
              }
            }
 else {
              break;
            }
          }
        }
        if (!revisedLine.isEmpty()) {
          if (!parseLine(revisedLine)) {
            break;
          }
        }
      }
 catch (      ParseException e) {
        errorManager.report(e.isFatal() ? CheckLevel.ERROR : CheckLevel.WARNING,JSError.make(filePath,lineNum,0,e.isFatal() ? PARSE_ERROR : PARSE_WARNING,e.getMessage(),line));
        parseSucceeded=parseSucceeded && !e.isFatal();
      }
    }
  }
 catch (  IOException e) {
    errorManager.report(CheckLevel.ERROR,JSError.make(filePath,0,0,PARSE_ERROR,"Error reading file: " + filePath));
    parseSucceeded=false;
  }
}
