{
  if (objs1.isEmpty()) {
    return objs2;
  }
 else   if (objs2.isEmpty()) {
    return objs1;
  }
  ObjectType[] objs1Arr=objs1.toArray(new ObjectType[0]);
  ObjectType[] keptFrom1=objs1Arr.clone();
  ImmutableSet.Builder<ObjectType> newObjs=ImmutableSet.builder();
  for (  ObjectType obj2 : objs2) {
    boolean addedObj2=false;
    for (int i=0; i < objs1Arr.length; i++) {
      ObjectType obj1=objs1Arr[i];
      NominalType nominalType1=obj1.nominalType;
      NominalType nominalType2=obj2.nominalType;
      if (areRelatedClasses(nominalType1,nominalType2)) {
        if (nominalType2 == null && nominalType1 != null && !obj1.isSubtypeOf(obj2) || nominalType1 == null && nominalType2 != null && !obj2.isSubtypeOf(obj1)) {
          break;
        }
        keptFrom1[i]=null;
        newObjs.add(join(obj1,obj2));
        addedObj2=true;
        break;
      }
    }
    if (!addedObj2) {
      newObjs.add(obj2);
    }
  }
  for (  ObjectType o : keptFrom1) {
    if (o != null) {
      newObjs.add(o);
    }
  }
  return newObjs.build();
}
