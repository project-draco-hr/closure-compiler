{
  if (other == TOP_OBJECT) {
    return true;
  }
  if ((keepLoosenessOfThis && this.isLoose) || other.isLoose) {
    return this.isLooseSubtypeOf(other);
  }
  NominalType thisNt=this.nominalType;
  NominalType otherNt=other.nominalType;
  if (thisNt == null && otherNt != null || thisNt != null && otherNt != null && !thisNt.isSubtypeOf(otherNt)) {
    return false;
  }
  if (otherNt == null && !this.objectKind.isSubtypeOf(other.objectKind) && !(this.isInterfaceInstance() && other.objectKind.isUnrestricted())) {
    return false;
  }
  for (  Map.Entry<String,Property> entry : other.props.entrySet()) {
    String pname=entry.getKey();
    Property prop2=entry.getValue();
    Property prop1=this.getLeftmostProp(new QualifiedName(pname));
    JSType prop2type=prop2.getType();
    if (prop2.isOptional() || prop2type.isUnknown()) {
      if (prop1 != null && !prop1.getType().isSubtypeOf(prop2type)) {
        return false;
      }
    }
 else {
      if (prop1 == null || prop1.isOptional() || !prop1.getType().isSubtypeOf(prop2type)) {
        return false;
      }
    }
  }
  if (other.fn == null) {
    return true;
  }
 else   if (this.fn == null) {
    return false;
  }
  return this.fn.isSubtypeOf(other.fn);
}
