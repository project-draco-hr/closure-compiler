{
  if (bType.isAllType() || bType.isUnknownType() || bType.isNoResolvedType()|| aType.isAllType()|| aType.isUnknownType()|| aType.isNoResolvedType()) {
    return UNKNOWN;
  }
  boolean aIsEmpty=aType.isEmptyType();
  boolean bIsEmpty=bType.isEmptyType();
  if (aIsEmpty || bIsEmpty) {
    if (aIsEmpty && bIsEmpty) {
      return TernaryValue.TRUE;
    }
 else {
      return UNKNOWN;
    }
  }
  if (aType.isFunctionType() || bType.isFunctionType()) {
    JSType otherType=aType.isFunctionType() ? bType : aType;
    if (!otherType.getGreatestSubtype(getNativeType(JSTypeNative.OBJECT_TYPE)).isEmptyType()) {
      return TernaryValue.UNKNOWN;
    }
 else {
      return TernaryValue.FALSE;
    }
  }
  if (bType.isEnumElementType() || bType.isUnionType()) {
    return bType.testForEquality(aType);
  }
  return null;
}
