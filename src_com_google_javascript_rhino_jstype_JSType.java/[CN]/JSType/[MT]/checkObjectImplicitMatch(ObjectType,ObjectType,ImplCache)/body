{
  Preconditions.checkArgument(superType.getConstructor().isStructuralInterface());
  MatchStatus result=implicitImplCache.checkCache(subType,superType);
  if (result != null) {
    return result.subtypeValue();
  }
  if (superType.getConstructor().hasAnyTemplateTypes()) {
    implicitImplCache.updateCache(subType,superType,MatchStatus.NOT_MATCH);
    return false;
  }
  for (  String propName : superType.getPropertyNames()) {
    if (subType.hasProperty(propName) && subType.getPropertyType(propName).isSubtype(superType.getPropertyType(propName),implicitImplCache)) {
      continue;
    }
    implicitImplCache.updateCache(subType,superType,MatchStatus.NOT_MATCH);
    return false;
  }
  implicitImplCache.updateCache(subType,superType,MatchStatus.MATCH);
  return true;
}
