{
  if (thatType.isUnknownType()) {
    return true;
  }
  if (thatType.isAllType()) {
    return true;
  }
  if (thisType.isEquivalentTo(thatType)) {
    return true;
  }
  if (thatType.isUnionType()) {
    UnionType union=thatType.toMaybeUnionType();
    for (    JSType element : union.alternates) {
      if (thisType.isSubtype(element)) {
        return true;
      }
    }
    return false;
  }
  if (thisType.isParameterizedType()) {
    return thisType.toMaybeParameterizedType().isParameterizeSubtypeOf(thatType);
  }
  if (thatType instanceof ProxyObjectType) {
    return thisType.isSubtype(((ProxyObjectType)thatType).getReferencedTypeInternal());
  }
  return false;
}
