{
  if (thatType.isUnknownType()) {
    return true;
  }
  if (thatType.isAllType()) {
    return true;
  }
  if (thisType.isEquivalentTo(thatType)) {
    return true;
  }
  if (thatType.isUnionType()) {
    UnionType union=thatType.toMaybeUnionType();
    for (    JSType element : union.alternates) {
      if (thisType.isSubtype(element)) {
        return true;
      }
    }
    return false;
  }
  TemplateTypeMap thisTypeParams=thisType.getTemplateTypeMap();
  TemplateTypeMap thatTypeParams=thatType.getTemplateTypeMap();
  boolean templateMatch=true;
  if (isExemptFromTemplateTypeInvariance(thatType)) {
    TemplateType key=thisType.registry.getObjectElementKey();
    JSType thisElement=thisTypeParams.getTemplateType(key);
    JSType thatElement=thatTypeParams.getTemplateType(key);
    templateMatch=thisElement.isSubtype(thatElement) || thatElement.isSubtype(thisElement);
  }
 else {
    templateMatch=thisTypeParams.checkEquivalenceHelper(thatTypeParams,EquivalenceMethod.INVARIANT);
  }
  if (!templateMatch) {
    return false;
  }
  if (thisType.isTemplatizedType()) {
    return thisType.toMaybeTemplatizedType().getReferencedType().isSubtype(thatType);
  }
  if (thatType instanceof ProxyObjectType) {
    return thisType.isSubtype(((ProxyObjectType)thatType).getReferencedTypeInternal());
  }
  return false;
}
