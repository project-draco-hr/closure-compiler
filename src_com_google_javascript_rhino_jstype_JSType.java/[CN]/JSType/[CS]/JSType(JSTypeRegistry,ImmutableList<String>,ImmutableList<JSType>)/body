{
  this.registry=registry;
  int keysLength=templateKeys == null ? 0 : templateKeys.size();
  int typesLength=templatizedTypes == null ? 0 : templatizedTypes.size();
  if (typesLength > keysLength) {
    throw new IllegalArgumentException("Cannot have more templatized types than template keys");
  }
 else   if (typesLength < keysLength) {
    ImmutableList.Builder<JSType> builder=ImmutableList.builder();
    if (typesLength > 0) {
      builder.addAll(templatizedTypes);
    }
    for (int i=0; i < keysLength - typesLength; i++) {
      builder.add(registry.getNativeType(JSTypeNative.UNKNOWN_TYPE));
    }
    templatizedTypes=builder.build();
  }
 else   if (keysLength == 0 && typesLength == 0) {
    templateKeys=ImmutableList.of();
    templatizedTypes=ImmutableList.of();
  }
  this.templateKeys=templateKeys;
  this.templatizedTypes=templatizedTypes;
}
