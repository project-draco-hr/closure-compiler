{
  LinkedHashMap<String,Node> argMap=Maps.newLinkedHashMap();
  Node cArg=callNode.getFirstChild().getNext();
  if (callNode.getFirstChild().getType() != Token.NAME) {
    if (NodeUtil.isFunctionObjectCall(callNode)) {
      Preconditions.checkNotNull(cArg);
      Preconditions.checkState(cArg.getType() == Token.THIS);
      cArg=cArg.getNext();
    }
 else {
      Preconditions.checkState(!NodeUtil.isFunctionObjectApply(callNode));
    }
  }
  for (  Node fnArg : NodeUtil.getFnParameters(fnNode).children()) {
    if (cArg != null) {
      argMap.put(fnArg.getString(),cArg);
      cArg=cArg.getNext();
    }
 else {
      argMap.put(fnArg.getString(),Node.newString(Token.NAME,"undefined"));
    }
  }
  int anonArg=0;
  while (cArg != null) {
    String uniquePlaceholder=getUniqueAnonymousParameterName(safeNameIdSupplier);
    argMap.put(uniquePlaceholder,cArg);
    cArg=cArg.getNext();
  }
  return argMap;
}
