{
  runInCompilerThread(new Callable<Void>(){
    @Override public Void call() throws Exception {
      if (options.printInputDelimiter) {
        if ((cb.getLength() > 0) && !cb.endsWith("\n")) {
          cb.append("\n");
        }
        Preconditions.checkState(root.isScript());
        String delimiter=options.inputDelimiter;
        String inputName=root.getInputId().getIdName();
        String sourceName=root.getSourceFileName();
        Preconditions.checkState(sourceName != null);
        Preconditions.checkState(!sourceName.isEmpty());
        delimiter=delimiter.replaceAll("%name%",Matcher.quoteReplacement(inputName)).replaceAll("%num%",String.valueOf(inputSeqNum));
        cb.append(delimiter).append("\n");
      }
      if (root.getJSDocInfo() != null && root.getJSDocInfo().getLicense() != null) {
        cb.append("/*\n").append(root.getJSDocInfo().getLicense()).append("*/\n");
      }
      if (options.sourceMapOutputPath != null) {
        sourceMap.setStartingPosition(cb.getLineIndex(),cb.getColumnIndex());
      }
      String code=toSource(root,sourceMap,inputSeqNum == 0);
      if (!code.isEmpty()) {
        cb.append(code);
        int length=code.length();
        char lastChar=code.charAt(length - 1);
        char secondLastChar=length >= 2 ? code.charAt(length - 2) : '\0';
        boolean hasSemiColon=lastChar == ';' || (lastChar == '\n' && secondLastChar == ';');
        if (!hasSemiColon) {
          cb.append(";");
        }
      }
      return null;
    }
  }
);
}
