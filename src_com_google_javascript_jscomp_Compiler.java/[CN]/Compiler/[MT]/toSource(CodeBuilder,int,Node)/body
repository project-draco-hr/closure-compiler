{
  runInCompilerThread(new Callable<Void>(){
    public Void call() throws Exception {
      if (options_.printInputDelimiter) {
        if ((cb.getLength() > 0) && !cb.endsWith("\n")) {
          cb.append("\n");
        }
        Preconditions.checkState(root.getType() == Token.SCRIPT);
        String delimiter=options_.inputDelimiter;
        String sourceName=(String)root.getProp(Node.SOURCENAME_PROP);
        Preconditions.checkState(sourceName != null);
        Preconditions.checkState(!sourceName.isEmpty());
        delimiter=delimiter.replaceAll("%name%",sourceName).replaceAll("%num%",String.valueOf(inputSeqNum));
        cb.append(delimiter).append("\n");
      }
      if (root.getJSDocInfo() != null && root.getJSDocInfo().getLicense() != null) {
        cb.append("/*\n").append(root.getJSDocInfo().getLicense()).append("*/\n");
      }
      if (options_.sourceMapOutputPath != null) {
        sourceMap_.setStartingPosition(cb.getLineIndex(),cb.getColumnIndex());
      }
      String code=toSource(root);
      if (!code.isEmpty()) {
        cb.append(code);
        if (!code.endsWith(";")) {
          cb.append(";");
        }
      }
      return null;
    }
  }
);
}
