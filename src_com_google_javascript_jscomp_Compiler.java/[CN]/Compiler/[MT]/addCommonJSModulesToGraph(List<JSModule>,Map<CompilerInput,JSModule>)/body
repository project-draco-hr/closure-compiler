{
  List<CompilerInput> inputs=new ArrayList<>();
  for (  JSModule module : inputModules) {
    inputs.addAll(module.getInputs());
  }
  modules=new ArrayList<>();
  DependencyOptions depOptions=options.dependencyOptions;
  for (  CompilerInput input : this.moduleGraph.manageDependencies(depOptions,inputs)) {
    modules.add(modulesByInput.get(input));
  }
  SortedDependencies<JSModule> sorter=new SortedDependencies<>(modules);
  modules=sorter.getDependenciesOf(modules,true);
  JSModule firstModule=Iterables.getFirst(modules,null);
  for (int i=1; i < modules.size(); i++) {
    if (!modules.get(i).getDependencies().contains(firstModule)) {
      modules.get(i).addDependency(firstModule);
    }
  }
  this.moduleGraph=new JSModuleGraph(modules);
}
