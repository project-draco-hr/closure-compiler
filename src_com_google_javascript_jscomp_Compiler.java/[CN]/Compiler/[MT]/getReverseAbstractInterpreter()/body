{
  if (abstractInterpreter == null) {
    ChainableReverseAbstractInterpreter interpreter=new SemanticReverseAbstractInterpreter(getCodingConvention(),getTypeRegistry());
    if (options.closurePass) {
      interpreter=new ClosureReverseAbstractInterpreter(getCodingConvention(),getTypeRegistry()).append(interpreter).getFirst();
    }
    abstractInterpreter=interpreter;
  }
  return abstractInterpreter;
}
