{
  int maxID=-1;
  for (int i=0; i < lineCount; ++i) {
    String currentLine=parser.readLine();
    if (currentLine.isEmpty()) {
      continue;
    }
    ImmutableList.Builder<LineFragment> fragmentList=ImmutableList.builder();
    LineFragment myLineFragment=null;
    JSONArray charArray=new JSONArray(currentLine);
    int numOffsets=charArray.length();
    int lastID=-1;
    int startID=Integer.MIN_VALUE;
    List<Byte> currentOffsets=Lists.newArrayList();
    for (int j=0; j < charArray.length(); ++j) {
      int mappingID=lastID;
      if (!charArray.isNull(j)) {
        mappingID=charArray.optInt(j);
        if (mappingID > maxID) {
          maxID=mappingID;
        }
      }
      if (startID == Integer.MIN_VALUE) {
        startID=mappingID;
      }
 else {
        if (mappingID - lastID > Byte.MAX_VALUE || mappingID - lastID < Byte.MIN_VALUE) {
          myLineFragment=new LineFragment(startID,Bytes.toArray(currentOffsets));
          currentOffsets.clear();
          fragmentList.add(myLineFragment);
          startID=mappingID;
        }
 else {
          currentOffsets.add((byte)(mappingID - lastID));
        }
      }
      lastID=mappingID;
    }
    if (startID != Integer.MIN_VALUE) {
      myLineFragment=new LineFragment(startID,Bytes.toArray(currentOffsets));
      fragmentList.add(myLineFragment);
    }
    characterMapBuilder.add(fragmentList.build());
  }
  return maxID;
}
