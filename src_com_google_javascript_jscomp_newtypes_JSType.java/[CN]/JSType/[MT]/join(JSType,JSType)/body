{
  Preconditions.checkNotNull(lhs);
  Preconditions.checkNotNull(rhs);
  if (lhs.isTop() || rhs.isTop()) {
    return TOP;
  }
  if (lhs.isUnknown() || rhs.isUnknown()) {
    return UNKNOWN;
  }
  if (lhs.isBottom()) {
    return rhs;
  }
  if (rhs.isBottom()) {
    return lhs;
  }
  if (lhs.hasTruthyMask() || lhs.hasFalsyMask() || rhs.hasTruthyMask()|| rhs.hasFalsyMask()) {
    return UNKNOWN;
  }
  if (lhs.getTypeVar() != null && rhs.getTypeVar() != null && !lhs.getTypeVar().equals(rhs.getTypeVar())) {
    return UNKNOWN;
  }
  int newMask=lhs.getMask() | rhs.getMask();
  ImmutableSet<ObjectType> newObjs=ObjectType.joinSets(lhs.getObjs(),rhs.getObjs());
  String newTypevar=lhs.getTypeVar() != null ? lhs.getTypeVar() : rhs.getTypeVar();
  ImmutableSet<EnumType> newEnums=EnumType.union(lhs.getEnums(),rhs.getEnums());
  if (newEnums.isEmpty()) {
    return makeType(newMask,newObjs,newTypevar,ImmutableSet.<EnumType>of());
  }
  JSType tmpJoin=makeType(newMask & ~ENUM_MASK,newObjs,newTypevar,ImmutableSet.<EnumType>of());
  return makeType(newMask,newObjs,newTypevar,EnumType.normalizeForJoin(newEnums,tmpJoin));
}
