{
  if (other.isTop() || other.isUnknown() || this == other) {
    return this;
  }
  if (other.hasTruthyMask()) {
    return makeTruthy();
  }
  if (hasTruthyMask()) {
    JSType otherTruthy=other.makeTruthy();
    return otherTruthy.hasNonScalar() ? otherTruthy.withLoose() : otherTruthy;
  }
  if (other.hasFalsyMask()) {
    return makeFalsy();
  }
  if (hasFalsyMask()) {
    return other.makeFalsy();
  }
  if (this.isTop()) {
    return other;
  }
  if (this.isUnknown()) {
    NominalType otherNt=other.getNominalTypeIfSingletonObj();
    return otherNt != null && otherNt.isBuiltinObject() ? other.withLoose() : other;
  }
  int newMask=getMask() & other.getMask();
  String newTypevar;
  if (Objects.equals(getTypeVar(),other.getTypeVar())) {
    newTypevar=getTypeVar();
  }
 else   if (getTypeVar() != null && other.getTypeVar() == null) {
    return other;
  }
 else {
    newTypevar=null;
    newMask&=~TYPEVAR_MASK;
  }
  return meetEnums(newMask,getMask() | other.getMask(),ObjectType.specializeSet(getObjs(),other.getObjs()),newTypevar,getObjs(),other.getObjs(),getEnums(),other.getEnums());
}
