{
  FunctionType funType=n.getJSType().toMaybeFunctionType();
  if (funType != null && !funType.isConstructor()) {
    return;
  }
  Node nodeToInsertAfter=findNodeToInsertAfter(n);
  nodeToInsertAfter=addMarker(funType,nodeToInsertAfter,null);
  TreeSet<ObjectType> stuff=new TreeSet<>(ALPHA);
  Iterables.addAll(stuff,funType.getAllImplementedInterfaces());
  for (  ObjectType interfaceType : stuff) {
    nodeToInsertAfter=addMarker(funType,nodeToInsertAfter,interfaceType);
  }
}
