{
  FunctionType funType=JSType.toMaybeFunctionType(n.getJSType());
  Node block=n.getLastChild();
  Node paramName=NodeUtil.getFunctionParameters(n).getFirstChild();
  Node insertionPoint=null;
  for (Node next=block.getFirstChild(); next != null && NodeUtil.isFunctionDeclaration(next); next=next.getNext()) {
    insertionPoint=next;
  }
  for (  Node paramType : funType.getParameters()) {
    if (paramName == null) {
      return;
    }
    Node checkNode=createCheckTypeCallNode(paramType.getJSType(),paramName.cloneTree());
    if (checkNode == null) {
      paramName=paramName.getNext();
      continue;
    }
    checkNode=new Node(Token.EXPR_RESULT,checkNode);
    if (insertionPoint == null) {
      block.addChildToFront(checkNode);
    }
 else {
      block.addChildAfter(checkNode,insertionPoint);
    }
    compiler.reportCodeChange();
    paramName=paramName.getNext();
    insertionPoint=checkNode;
  }
}
