{
  Node arrayNode=IR.arraylit();
  Collection<JSType> alternates;
  if (type.isUnionType()) {
    alternates=Sets.newTreeSet(ALPHA);
    alternates.addAll(type.toMaybeUnionType().getAlternates());
  }
 else {
    alternates=ImmutableList.of(type);
  }
  for (  JSType alternate : alternates) {
    Node checkerNode=createCheckerNode(alternate);
    if (checkerNode == null) {
      return null;
    }
    arrayNode.addChildToBack(checkerNode);
  }
  return IR.call(jsCode("checkType"),expr,arrayNode);
}
