{
  ++nestingOfFunction;
  Node pn=nf.createBlock(ts.getLineno(),ts.getCharno());
  try {
    bodyLoop:     for (; ; ) {
      Node n;
      int tt=peekToken();
switch (tt) {
case Token.ERROR:
case Token.EOF:
case Token.RC:
        break bodyLoop;
case Token.FUNCTION:
      consumeToken();
    n=function(FunctionNode.FUNCTION_STATEMENT);
  break;
default :
n=statement();
break;
}
nf.addChildToBack(pn,n);
}
}
 catch (ParserException e) {
}
 finally {
--nestingOfFunction;
}
return pn;
}
