{
  Node pn=addExpr();
  int lineno;
  int charno;
  for (; ; ) {
    int tt=peekToken();
    lineno=ts.getLineno();
    charno=ts.getCharno();
switch (tt) {
case Token.LSH:
case Token.URSH:
case Token.RSH:
      consumeToken();
    decompiler.addToken(tt);
  pn=nf.createBinary(tt,pn,addExpr(),lineno,charno);
continue;
}
break;
}
return pn;
}
