{
  InputStream input=AbstractCommandLineRunner.class.getResourceAsStream("/externs.zip");
  if (input == null) {
    input=AbstractCommandLineRunner.class.getResourceAsStream("externs.zip");
  }
  Preconditions.checkNotNull(input);
  ZipInputStream zip=new ZipInputStream(input);
  String envPrefix=env.toString().toLowerCase() + "/";
  String browserEnv=CompilerOptions.Environment.BROWSER.toString().toLowerCase();
  boolean flatExternStructure=true;
  Map<String,SourceFile> mapFromExternsZip=new HashMap<>();
  for (ZipEntry entry=null; (entry=zip.getNextEntry()) != null; ) {
    String filename=entry.getName();
    if (filename.contains(browserEnv)) {
      flatExternStructure=false;
    }
    if (!filename.contains("/") || (filename.indexOf(envPrefix) == 0 && filename.length() > envPrefix.length())) {
      BufferedInputStream entryStream=new BufferedInputStream(ByteStreams.limit(zip,entry.getSize()));
      mapFromExternsZip.put(filename,SourceFile.fromInputStream("externs.zip//" + filename,entryStream,UTF_8));
    }
  }
  List<SourceFile> externs=new ArrayList<>();
  for (  String key : BUILTIN_LANG_EXTERNS) {
    Preconditions.checkState(mapFromExternsZip.containsKey(key),"Externs zip must contain %s.",key);
    externs.add(mapFromExternsZip.remove(key));
  }
  for (  String key : BUILTIN_EXTERN_DEP_ORDER) {
    if (!flatExternStructure && !key.contains(envPrefix)) {
      continue;
    }
    if (flatExternStructure) {
      key=key.substring(key.indexOf('/') + 1);
    }
    Preconditions.checkState(mapFromExternsZip.containsKey(key),"Externs zip must contain %s when environment is %s.",key,env);
    externs.add(mapFromExternsZip.remove(key));
  }
  externs.addAll(mapFromExternsZip.values());
  return externs;
}
