{
  setResolvedTypeInternal(this);
  boolean changed=false;
  ImmutableSet.Builder<JSType> resolvedTypes=ImmutableSet.builder();
  for (  JSType alternate : alternates) {
    JSType newAlternate=alternate.resolve(t,scope);
    changed|=(alternate != newAlternate);
    resolvedTypes.add(alternate);
  }
  if (changed) {
    Set<JSType> newAlternates=resolvedTypes.build();
    Preconditions.checkState(newAlternates.hashCode() == this.hashcode);
    alternates=newAlternates;
  }
  return this;
}
