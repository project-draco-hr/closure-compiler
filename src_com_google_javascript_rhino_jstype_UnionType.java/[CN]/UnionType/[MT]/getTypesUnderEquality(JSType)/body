{
  UnionTypeBuilder thisRestricted=new UnionTypeBuilder(registry);
  UnionTypeBuilder thatRestricted=new UnionTypeBuilder(registry);
  for (  JSType element : alternatesWithoutStucturalTyping) {
    TypePair p=element.getTypesUnderEquality(that);
    if (p.typeA != null) {
      thisRestricted.addAlternate(p.typeA);
    }
    if (p.typeB != null) {
      thatRestricted.addAlternate(p.typeB);
    }
  }
  return new TypePair(thisRestricted.build(),thatRestricted.build());
}
