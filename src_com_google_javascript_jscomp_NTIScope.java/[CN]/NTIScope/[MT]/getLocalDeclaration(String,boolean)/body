{
  Preconditions.checkArgument(!name.contains("."));
  if (!isDefinedLocally(name,includeTypes)) {
    return null;
  }
  JSType type=null;
  boolean isTypeVar=false;
  if ("this".equals(name)) {
    type=getDeclaredTypeOf("this");
  }
 else   if (locals.containsKey(name)) {
    type=locals.get(name);
  }
 else   if (formals.contains(name)) {
    int formalIndex=formals.indexOf(name);
    if (declaredType != null && formalIndex != -1) {
      JSType formalType=declaredType.getFormalType(formalIndex);
      if (formalType != null && !formalType.isBottom()) {
        type=formalType;
      }
    }
  }
 else   if (localFunDefs.containsKey(name)) {
    if (isFinalized && externs.containsKey(name)) {
      type=externs.get(name);
    }
  }
 else   if (localTypedefs.containsKey(name) || localNamespaces.containsKey(name)) {
  }
 else   if (declaredType != null && declaredType.isTypeVariableDefinedLocally(name)) {
    isTypeVar=true;
    type=JSType.fromTypeVar(this.commonTypes,declaredType.getTypeVariableDefinedLocally(name));
  }
 else   if (externs.containsKey(name)) {
    type=externs.get(name);
  }
  Namespace ns=null;
  if (localNamespaces.containsKey(name)) {
    ns=localNamespaces.get(name);
  }
 else   if (preservedNamespaces != null) {
    ns=preservedNamespaces.get(name);
  }
  return new Declaration(type,localTypedefs.get(name),ns,localFunDefs.get(name),isTypeVar,constVars.contains(name));
}
