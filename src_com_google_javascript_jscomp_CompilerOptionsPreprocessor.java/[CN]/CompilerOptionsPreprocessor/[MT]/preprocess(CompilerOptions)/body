{
  if (options.checkMissingGetCssNameLevel.isOn() && (isNullOrEmpty(options.checkMissingGetCssNameBlacklist))) {
    throw new InvalidOptionsException("Cannot check use of goog.getCssName because of empty blacklist.");
  }
  if (options.removeUnusedPrototypePropertiesInExterns && !options.removeUnusedPrototypeProperties) {
    throw new InvalidOptionsException("remove_unused_prototype_properties_in_externs requires " + "remove_unused_prototype_properties to be turned on.");
  }
  if (options.getLanguageOut().isEs6OrHigher() && !options.skipNonTranspilationPasses && !options.skipTranspilationAndCrash) {
    throw new InvalidOptionsException("ES6 is only supported for transpilation to a lower ECMAScript" + " version. Set --language_out to ES3, ES5, or ES5_STRICT.");
  }
  if (!options.inlineFunctions && options.maxFunctionSizeAfterInlining != CompilerOptions.UNLIMITED_FUN_SIZE_AFTER_INLINING) {
    throw new InvalidOptionsException("max_function_size_after_inlining has no effect if inlining is" + " disabled.");
  }
  if (options.useNewTypeInference) {
    options.checkMissingReturn=CheckLevel.OFF;
    options.checkGlobalThisLevel=CheckLevel.OFF;
  }
  if (options.jqueryPass && options.closurePass) {
    throw new InvalidOptionsException("The jQuery pass and the Closure pass cannot both be enabled.");
  }
  if (options.dartPass) {
    if (!options.getLanguageOut().isEs5OrHigher()) {
      throw new InvalidOptionsException("Dart requires --language_out=ES5 or higher.");
    }
    options.setAmbiguateProperties(false);
    options.setDisambiguateProperties(false);
  }
  if (options.removeUnusedPrototypePropertiesInExterns && options.exportLocalPropertyDefinitions) {
    throw new InvalidOptionsException("remove_unused_prototype_properties_in_externs " + "and export_local_property_definitions cannot be used together.");
  }
}
