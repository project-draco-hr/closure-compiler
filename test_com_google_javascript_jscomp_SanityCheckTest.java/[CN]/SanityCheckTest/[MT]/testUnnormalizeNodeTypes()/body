{
  otherPass=new CompilerPass(){
    @Override public void process(    Node externs,    Node root){
      getLastCompiler().reportCodeChange();
      root.getFirstChild().addChildToBack(new Node(Token.IF,new Node(Token.TRUE),new Node(Token.EMPTY)));
    }
  }
;
  boolean exceptionCaught=false;
  try {
    test("var x = 3;","var x=3;0;0");
  }
 catch (  IllegalStateException e) {
    assertEquals("Expected BLOCK but was EMPTY Reference node EMPTY",e.getMessage());
    exceptionCaught=true;
  }
  assertTrue(exceptionCaught);
}
