{
  otherPass=new CompilerPass(){
    @Override public void process(    Node externs,    Node root){
      getLastCompiler().reportCodeChange();
      Node name=Node.newString(Token.NAME,"x");
      name.putBooleanProp(Node.IS_CONSTANT_NAME,true);
      root.getFirstChild().addChildToBack(new Node(Token.EXPR_RESULT,name));
      getLastCompiler().setLifeCycleStage(LifeCycleStage.NORMALIZED);
    }
  }
;
  try {
    test("var x;","var x; x;");
    fail("Expected RuntimeException");
  }
 catch (  RuntimeException e) {
    assertThat(e.getMessage()).contains("The name x is not consistently annotated as constant.");
  }
}
