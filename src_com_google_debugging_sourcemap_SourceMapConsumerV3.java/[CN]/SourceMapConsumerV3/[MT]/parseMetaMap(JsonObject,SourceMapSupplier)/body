{
  if (sectionSupplier == null) {
    sectionSupplier=new DefaultSourceMapSupplier();
  }
  try {
    int version=sourceMapRoot.get("version").getAsInt();
    if (version != 3) {
      throw new SourceMapParseException("Unknown version: " + version);
    }
    String file=sourceMapRoot.get("file").getAsString();
    if (file.isEmpty()) {
      throw new SourceMapParseException("File entry is missing or empty");
    }
    if (sourceMapRoot.has("lineCount") || sourceMapRoot.has("mappings") || sourceMapRoot.has("sources")|| sourceMapRoot.has("names")) {
      throw new SourceMapParseException("Invalid map format");
    }
    SourceMapGeneratorV3 generator=new SourceMapGeneratorV3();
    JsonArray sections=sourceMapRoot.get("sections").getAsJsonArray();
    for (int i=0, count=sections.size(); i < count; i++) {
      JsonObject section=sections.get(i).getAsJsonObject();
      if (section.has("map") && section.has("url")) {
        throw new SourceMapParseException("Invalid map format: section may not have both 'map' and 'url'");
      }
      JsonObject offset=section.get("offset").getAsJsonObject();
      int line=offset.get("line").getAsInt();
      int column=offset.get("column").getAsInt();
      String mapSectionContents;
      if (section.has("url")) {
        String url=section.get("url").getAsString();
        mapSectionContents=sectionSupplier.getSourceMap(url);
        if (mapSectionContents == null) {
          throw new SourceMapParseException("Unable to retrieve: " + url);
        }
      }
 else       if (section.has("map")) {
        mapSectionContents=section.get("map").getAsString();
      }
 else {
        throw new SourceMapParseException("Invalid map format: section must have either 'map' or 'url'");
      }
      generator.mergeMapSection(line,column,mapSectionContents);
    }
    StringBuilder sb=new StringBuilder();
    try {
      generator.appendTo(sb,file);
    }
 catch (    IOException e) {
      throw new RuntimeException(e);
    }
    parse(sb.toString());
  }
 catch (  IOException ex) {
    throw new SourceMapParseException("IO exception: " + ex);
  }
catch (  JsonParseException ex) {
    throw new SourceMapParseException("JSON parse exception: " + ex);
  }
}
