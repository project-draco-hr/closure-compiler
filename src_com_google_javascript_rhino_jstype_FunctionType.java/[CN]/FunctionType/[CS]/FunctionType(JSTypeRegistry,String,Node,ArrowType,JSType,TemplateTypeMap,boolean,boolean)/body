{
  super(registry,name,registry.getNativeObjectType(JSTypeNative.FUNCTION_INSTANCE_TYPE),nativeType,templateTypeMap);
  setPrettyPrint(true);
  Preconditions.checkArgument(source == null || Token.FUNCTION == source.getType());
  Preconditions.checkNotNull(arrowType);
  this.source=source;
  if (isConstructor) {
    this.kind=Kind.CONSTRUCTOR;
    this.propAccess=PropAccess.ANY;
    this.typeOfThis=typeOfThis != null ? typeOfThis : new InstanceObjectType(registry,this,nativeType);
  }
 else {
    this.kind=Kind.ORDINARY;
    this.typeOfThis=typeOfThis != null ? typeOfThis : registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);
  }
  this.call=arrowType;
}
