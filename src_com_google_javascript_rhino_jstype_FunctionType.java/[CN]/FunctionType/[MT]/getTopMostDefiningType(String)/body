{
  Preconditions.checkState(isConstructor() || isInterface());
  Preconditions.checkArgument(getPrototype().hasProperty(propertyName));
  FunctionType ctor=this;
  if (isInterface()) {
    return getTopDefiningInterface(this.getInstanceType(),propertyName);
  }
  ObjectType topInstanceType=ctor.getInstanceType();
  while (true) {
    topInstanceType=ctor.getInstanceType();
    ctor=ctor.getSuperClassConstructor();
    if (ctor == null || !ctor.getPrototype().hasProperty(propertyName)) {
      break;
    }
  }
  return topInstanceType;
}
