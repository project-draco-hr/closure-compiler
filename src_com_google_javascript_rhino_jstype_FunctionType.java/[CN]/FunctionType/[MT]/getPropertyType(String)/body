{
  if (!hasOwnProperty(name)) {
    boolean isCall="call".equals(name);
    boolean isBind="bind".equals(name);
    if (isCall || isBind) {
      FunctionBuilder builder=new FunctionBuilder(registry).withReturnType(isCall ? getReturnType() : (new FunctionBuilder(registry).withReturnType(getReturnType()).build()));
      Node origParams=getParametersNode();
      if (origParams != null) {
        Node params=origParams.cloneTree();
        Node thisTypeNode=Node.newString(Token.NAME,"thisType");
        thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));
        params.addChildToFront(thisTypeNode);
        thisTypeNode.setOptionalArg(isCall);
        if (isBind) {
          for (Node current=thisTypeNode.getNext(); current != null; current=current.getNext()) {
            current.setOptionalArg(true);
          }
        }
        builder.withParamsNode(params);
      }
      defineDeclaredProperty(name,builder.build(),source);
    }
 else     if ("apply".equals(name)) {
      FunctionParamBuilder builder=new FunctionParamBuilder(registry);
      builder.addOptionalParams(registry.createNullableType(getTypeOfThis()),registry.createNullableType(registry.getNativeType(JSTypeNative.OBJECT_TYPE)));
      defineDeclaredProperty(name,new FunctionBuilder(registry).withParams(builder).withReturnType(getReturnType()).build(),source);
    }
  }
  return super.getPropertyType(name);
}
