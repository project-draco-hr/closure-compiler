{
  boolean next_is_unreachable=false;
  if (begin + 1 == end) {
    P.p(' ');
    IdValuePair pair=pairs[begin];
    if (L > char_tail_test_threshold) {
      P.p(v_guess);
      P.p("=");
      P.qstring(pair.id);
      P.p(";");
      P.p(v_id);
      P.p("=");
      P.p(pair.value);
      P.p(";");
    }
 else {
      if (L == 0) {
        next_is_unreachable=true;
        P.p(v_id);
        P.p("=");
        P.p(pair.value);
        P.p("; break ");
        P.p(v_switch_label);
        P.p(";");
      }
 else {
        P.p("if (");
        int column=columns[0];
        P.p(v_s);
        P.p(".charAt(");
        P.p(column);
        P.p(")==");
        P.qchar(pair.id.charAt(column));
        for (int i=1; i != L; ++i) {
          P.p(" && ");
          column=columns[i];
          P.p(v_s);
          P.p(".charAt(");
          P.p(column);
          P.p(")==");
          P.qchar(pair.id.charAt(column));
        }
        P.p(") {");
        P.p(v_id);
        P.p("=");
        P.p(pair.value);
        P.p("; break ");
        P.p(v_switch_label);
        P.p(";}");
      }
    }
    P.p(' ');
    return next_is_unreachable;
  }
  int max_column_index=find_max_different_column(begin,end,L);
  int max_column=columns[max_column_index];
  int count=count_different_chars(begin,end,max_column);
  columns[max_column_index]=columns[L - 1];
  if (inside_if) {
    P.nl();
    P.indent(indent_level);
  }
 else {
    P.p(' ');
  }
  boolean use_if;
  if (count <= use_if_threshold) {
    use_if=true;
    c_was_defined=true;
    P.p(v_c);
    P.p("=");
    P.p(v_s);
    P.p(".charAt(");
    P.p(max_column);
    P.p(");");
  }
 else {
    use_if=false;
    if (!label_was_defined) {
      label_was_defined=true;
      P.p(v_label);
      P.p(": ");
    }
    P.p("switch (");
    P.p(v_s);
    P.p(".charAt(");
    P.p(max_column);
    P.p(")) {");
  }
  int same_char_begin=begin;
  int cur_ch=pairs[begin].id.charAt(max_column), ch=0;
  for (int i=begin; ; ) {
    ++i;
    if (i == end || (ch=pairs[i].id.charAt(max_column)) != cur_ch) {
      int next_indent;
      if (use_if) {
        P.nl();
        P.indent(indent_level);
        if (same_char_begin != begin) {
          P.p("else ");
        }
        P.p("if (");
        P.p(v_c);
        P.p("==");
        P.qchar(cur_ch);
        P.p(") {");
        next_indent=indent_level + 1;
      }
 else {
        P.nl();
        P.indent(indent_level);
        P.p("case ");
        P.qchar(cur_ch);
        P.p(":");
        next_indent=indent_level + 1;
      }
      boolean after_unreachable=generate_letter_switch_r(same_char_begin,i,L - 1,next_indent,label_was_defined,use_if);
      if (use_if) {
        P.p("}");
      }
 else {
        if (!after_unreachable) {
          P.p("break ");
          P.p(v_label);
          P.p(";");
        }
      }
      if (i == end) {
        break;
      }
      same_char_begin=i;
      cur_ch=ch;
    }
  }
  if (use_if) {
    P.nl();
    if (inside_if) {
      P.indent(indent_level - 1);
    }
 else {
      P.indent(indent_level);
    }
  }
 else {
    P.nl();
    P.indent(indent_level);
    P.p("}");
    if (inside_if) {
      P.nl();
      P.indent(indent_level - 1);
    }
 else {
      P.p(' ');
    }
  }
  columns[max_column_index]=max_column;
  return next_is_unreachable;
}
