{
  Compiler compiler=new Compiler();
  compiler.disableThreads();
  CompilerOptions options=new CompilerOptions();
  options.setCheckTypes(true);
  compiler.compile(ImmutableList.of(SourceFile.fromCode("externs",EXTERNS)),ImmutableList.of(SourceFile.fromCode("test",String.format("/** @type {%s} */ var x; /** @type {%s} */ var y;",templateType,type))),options);
  Node script=compiler.getRoot().getLastChild().getFirstChild();
  Node xNode=script.getFirstChild();
  Node yNode=script.getLastChild();
  JSType templateJsType=xNode.getFirstChild().getJSType();
  JSType jsType=yNode.getFirstChild().getJSType();
  MatchResult matchResult=typeMatchingStrategy.match(templateJsType,jsType);
  assertEquals(isMatch ? "'" + templateJsType + "' should match '"+ jsType+ "'" : "'" + templateType + "' should not match '"+ type+ "'",isMatch,matchResult.isMatch());
  assertEquals(isLooseMatch ? "'" + templateType + "' should loosely match '"+ type+ "'" : "'" + templateType + "' should not loosely match '"+ type+ "'",isLooseMatch,matchResult.isLooseMatch());
}
