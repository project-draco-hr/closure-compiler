{
  assertMatch(SUBTYPES,"!SuperType","!SuperType",true,false);
  assertMatch(SUBTYPES,"!SuperType","?SuperType",false,false);
  assertMatch(SUBTYPES,"!SuperType","!OtherType",false,false);
  assertMatch(SUBTYPES,"!SuperType","SuperType|undefined",false,false);
  assertMatch(SUBTYPES,"!SuperType","SuperType|void",false,false);
  assertMatch(SUBTYPES,"!SuperType","!SubType",true,false);
  assertMatch(SUBTYPES,"!SuperType","?SubType",false,false);
  assertMatch(SUBTYPES,"!SuperType","SubType|undefined",false,false);
  assertMatch(SUBTYPES,"!SuperType","SubType|void",false,false);
  assertMatch(SUBTYPES,"!SuperType","number",false,false);
  assertMatch(SUBTYPES,"!SuperType","*",false,false);
  assertMatch(SUBTYPES,"!SuperType","?",false,false);
  assertMatch(SUBTYPES,"?SuperType","!SuperType",true,false);
  assertMatch(SUBTYPES,"?SuperType","?SuperType",true,false);
  assertMatch(SUBTYPES,"?SuperType","?OtherType",false,false);
  assertMatch(SUBTYPES,"?SuperType","SuperType|undefined",false,false);
  assertMatch(SUBTYPES,"?SuperType","SuperType|void",false,false);
  assertMatch(SUBTYPES,"?SuperType","SuperType|OtherType",false,false);
  assertMatch(SUBTYPES,"?SuperType","!SubType",true,false);
  assertMatch(SUBTYPES,"?SuperType","?SubType",true,false);
  assertMatch(SUBTYPES,"?SuperType","SubType|undefined",false,false);
  assertMatch(SUBTYPES,"?SuperType","SubType|void",false,false);
  assertMatch(SUBTYPES,"?SuperType","number",false,false);
  assertMatch(SUBTYPES,"?SuperType","*",false,false);
  assertMatch(SUBTYPES,"?SuperType","?",false,false);
  assertMatch(SUBTYPES,"?","string",true,false);
  assertMatch(SUBTYPES,"?","?",true,false);
  assertMatch(SUBTYPES,"?","*",true,false);
}
