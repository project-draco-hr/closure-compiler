{
  assertMatch(LOOSE,"!SuperType","!SuperType",true,false);
  assertMatch(LOOSE,"!SuperType","?SuperType",true,false);
  assertMatch(LOOSE,"!SuperType","SuperType|undefined",true,false);
  assertMatch(LOOSE,"!SuperType","SuperType|void",true,false);
  assertMatch(LOOSE,"!SuperType","!SubType",true,false);
  assertMatch(LOOSE,"!SuperType","?SubType",true,false);
  assertMatch(LOOSE,"!SuperType","SubType|undefined",true,false);
  assertMatch(LOOSE,"!SuperType","SubType|void",true,false);
  assertMatch(LOOSE,"!SuperType","number",false,false);
  assertMatch(LOOSE,"!SuperType","*",true,true);
  assertMatch(LOOSE,"!SuperType","?",true,true);
  assertMatch(LOOSE,"?","string",true,false);
}
