{
  if (currentToken != Token.NAME)   throw codeBug();
  int pos=ts.tokenBeg;
  currentFlaggedToken|=TI_CHECK_LABEL;
  AstNode expr=expr();
  if (expr.getType() != Token.LABEL) {
    AstNode n=new ExpressionStatement(expr,!insideFunction());
    n.lineno=expr.lineno;
    return n;
  }
  LabeledStatement bundle=new LabeledStatement(pos);
  recordLabel((Label)expr,bundle);
  bundle.setLineno(ts.lineno);
  AstNode stmt=null;
  while (peekToken() == Token.NAME) {
    currentFlaggedToken|=TI_CHECK_LABEL;
    expr=expr();
    if (expr.getType() != Token.LABEL) {
      stmt=new ExpressionStatement(expr,!insideFunction());
      autoInsertSemicolon(stmt);
      break;
    }
    recordLabel((Label)expr,bundle);
  }
  try {
    currentLabel=bundle;
    if (stmt == null) {
      stmt=statementHelper();
    }
  }
  finally {
    currentLabel=null;
    for (    Label lb : bundle.getLabels()) {
      labelSet.remove(lb.getName());
    }
  }
  bundle.setLength(stmt.getParent() == null ? getNodeEnd(stmt) - pos : getNodeEnd(stmt));
  bundle.setStatement(stmt);
  return bundle;
}
