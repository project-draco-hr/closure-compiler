{
  in.defaultReadObject();
  int tableSize=in.readInt();
  if (tableSize != 0) {
    if ((tableSize & (tableSize - 1)) != 0) {
      if (tableSize > 1 << 30)       throw new RuntimeException("Property table overflow");
      int newSize=INITIAL_SLOT_SIZE;
      while (newSize < tableSize)       newSize<<=1;
      tableSize=newSize;
    }
    slots=new Slot[tableSize];
    int objectsCount=count;
    if (objectsCount < 0) {
      objectsCount=~objectsCount;
    }
    Slot prev=null;
    for (int i=0; i != objectsCount; ++i) {
      lastAdded=(Slot)in.readObject();
      if (i == 0) {
        firstAdded=lastAdded;
      }
 else {
        prev.orderedNext=lastAdded;
      }
      int slotIndex=getSlotIndex(tableSize,lastAdded.indexOrHash);
      addKnownAbsentSlot(slots,lastAdded,slotIndex);
      prev=lastAdded;
    }
  }
}
