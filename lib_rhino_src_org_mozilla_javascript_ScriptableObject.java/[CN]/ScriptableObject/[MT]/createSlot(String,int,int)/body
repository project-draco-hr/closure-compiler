{
  Slot[] slotsLocalRef=slots;
  int insertPos;
  if (count == 0) {
    slotsLocalRef=new Slot[INITIAL_SLOT_SIZE];
    slots=slotsLocalRef;
    insertPos=getSlotIndex(slotsLocalRef.length,indexOrHash);
  }
 else {
    int tableSize=slotsLocalRef.length;
    insertPos=getSlotIndex(tableSize,indexOrHash);
    Slot prev=slotsLocalRef[insertPos];
    Slot slot=prev;
    while (slot != null) {
      if (slot.indexOrHash == indexOrHash && (slot.name == name || (name != null && name.equals(slot.name)))) {
        break;
      }
      prev=slot;
      slot=slot.next;
    }
    if (slot != null) {
      Slot inner=unwrapSlot(slot);
      Slot newSlot;
      if (accessType == SLOT_MODIFY_GETTER_SETTER && !(inner instanceof GetterSlot)) {
        newSlot=new GetterSlot(name,indexOrHash,inner.getAttributes());
      }
 else       if (accessType == SLOT_CONVERT_ACCESSOR_TO_DATA && (inner instanceof GetterSlot)) {
        newSlot=new Slot(name,indexOrHash,inner.getAttributes());
      }
 else       if (accessType == SLOT_MODIFY_CONST) {
        return null;
      }
 else {
        return inner;
      }
      newSlot.value=inner.value;
      newSlot.next=slot.next;
      if (lastAdded != null) {
        lastAdded.orderedNext=newSlot;
      }
      if (firstAdded == null) {
        firstAdded=newSlot;
      }
      lastAdded=newSlot;
      if (prev == slot) {
        slotsLocalRef[insertPos]=newSlot;
      }
 else {
        prev.next=newSlot;
      }
      slot.markDeleted();
      return newSlot;
    }
 else {
      if (4 * (count + 1) > 3 * slotsLocalRef.length) {
        slotsLocalRef=new Slot[slotsLocalRef.length * 2];
        copyTable(slots,slotsLocalRef,count);
        slots=slotsLocalRef;
        insertPos=getSlotIndex(slotsLocalRef.length,indexOrHash);
      }
    }
  }
  Slot newSlot=(accessType == SLOT_MODIFY_GETTER_SETTER ? new GetterSlot(name,indexOrHash,0) : new Slot(name,indexOrHash,0));
  if (accessType == SLOT_MODIFY_CONST)   newSlot.setAttributes(CONST);
  ++count;
  if (lastAdded != null)   lastAdded.orderedNext=newSlot;
  if (firstAdded == null)   firstAdded=newSlot;
  lastAdded=newSlot;
  addKnownAbsentSlot(slotsLocalRef,newSlot,insertPos);
  return newSlot;
}
