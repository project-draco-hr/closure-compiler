{
  DiGraph<String,String> graph=LinkedDirectedGraph.create();
  graph.createNode("A");
  graph.createNode("B");
  graph.createNode("C");
  graph.createNode("D");
  graph.createNode("E");
  graph.connect("A","--","B");
  graph.connect("B","--","C");
  graph.connect("C","--","D");
  graph.connect("D","--","E");
  graph.connect("D","--","B");
  DiGraph<String,String> pruned=new GraphPruner<>(graph).prune(Predicates.not(Predicates.in(Lists.newArrayList("B","C","D"))));
  assertEquals(2,pruned.getNodes().size());
  assertTrue(pruned.isConnectedInDirection("A","E"));
}
