{
  assumeMinimumCapture=false;
  testSame("var factorial = ((function(M) {\n" + "      return ((function(f) {\n" + "                 return M(function(arg) {\n"+ "                            return (f(f))(arg);\n"+ "                            })\n"+ "               })\n"+ "              (function(f) {\n"+ "                 return M(function(arg) {\n"+ "                            return (f(f))(arg);\n"+ "                           })\n"+ "                 }));\n"+ "     })\n"+ "    (function(f) {\n"+ "       return function(n) {\n"+ "        if (n === 0)\n"+ "          return 1;\n"+ "        else\n"+ "          return n * f(n - 1);\n"+ "       };\n"+ "     }));\n"+ "\n"+ "factorial(5)\n");
  assumeMinimumCapture=true;
  test("var factorial = ((function(M) {\n" + "      return ((function(f) {\n" + "                 return M(function(arg) {\n"+ "                            return (f(f))(arg);\n"+ "                            })\n"+ "               })\n"+ "              (function(f) {\n"+ "                 return M(function(arg) {\n"+ "                            return (f(f))(arg);\n"+ "                           })\n"+ "                 }));\n"+ "     })\n"+ "    (function(f) {\n"+ "       return function(n) {\n"+ "        if (n === 0)\n"+ "          return 1;\n"+ "        else\n"+ "          return n * f(n - 1);\n"+ "       };\n"+ "     }));\n"+ "\n"+ "factorial(5)\n","var factorial;\n" + "{\n" + "var M$$inline_4 = function(f$$2) {\n"+ "  return function(n){if(n===0)return 1;else return n*f$$2(n-1)}\n"+ "};\n"+ "{\n"+ "var f$$inline_0=function(f$$inline_7){\n"+ "  return M$$inline_4(\n"+ "    function(arg$$inline_8){\n"+ "      return f$$inline_7(f$$inline_7)(arg$$inline_8)\n"+ "     })\n"+ "};\n"+ "factorial=M$$inline_4(\n"+ "  function(arg$$inline_1){\n"+ "    return f$$inline_0(f$$inline_0)(arg$$inline_1)\n"+ "});\n"+ "}\n"+ "}"+ "factorial(5)");
}
