{
  if (ControlFlowGraph.isEnteringNewCfgNode(n)) {
    return VariableLiveness.MAYBE_LIVE;
  }
  if (n.isName() && variable.equals(n.getString())) {
    if (NodeUtil.isVarOrSimpleAssignLhs(n,n.getParent())) {
      Preconditions.checkState(n.getParent().isAssign(),n.getParent());
      Node rhs=n.getNext();
      VariableLiveness state=isVariableReadBeforeKill(rhs,variable);
      if (state == VariableLiveness.READ) {
        return state;
      }
      return VariableLiveness.KILL;
    }
 else {
      return VariableLiveness.READ;
    }
  }
switch (n.getType()) {
case OR:
case AND:
    VariableLiveness v1=isVariableReadBeforeKill(n.getFirstChild(),variable);
  VariableLiveness v2=isVariableReadBeforeKill(n.getLastChild(),variable);
if (v1 != VariableLiveness.MAYBE_LIVE) {
  return v1;
}
 else if (v2 == VariableLiveness.READ) {
  return VariableLiveness.READ;
}
 else {
  return VariableLiveness.MAYBE_LIVE;
}
case HOOK:
VariableLiveness first=isVariableReadBeforeKill(n.getFirstChild(),variable);
if (first != VariableLiveness.MAYBE_LIVE) {
return first;
}
return checkHookBranchReadBeforeKill(n.getSecondChild(),n.getLastChild(),variable);
default :
for (Node child=n.getFirstChild(); child != null; child=child.getNext()) {
VariableLiveness state=isVariableReadBeforeKill(child,variable);
if (state != VariableLiveness.MAYBE_LIVE) {
return state;
}
}
}
return VariableLiveness.MAYBE_LIVE;
}
