{
  Preconditions.checkArgument(t.inFunctionBlockScope());
  Preconditions.checkState(!functionStack.isEmpty());
  if (!compiler.hasScopeChanged(t.getScopeRoot().getParent())) {
    return;
  }
  BailoutInformation currentFunction=functionStack.peekFirst();
  if (currentFunction.containsFunction) {
    return;
  }
  if (!currentFunction.containsRemovableAssign) {
    return;
  }
  Scope blockScope=t.getScope();
  Scope functionScope=blockScope.getParent();
  if (LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE < blockScope.getVarCount() + functionScope.getVarCount()) {
    return;
  }
  for (  Var var : blockScope.getVarIterable()) {
    Preconditions.checkArgument(!var.isClass() && !var.isLet() && !var.isConst());
    functionScope.declare(var.getName(),var.getNameNode(),var.getInput());
  }
  ControlFlowGraph<Node> cfg=t.getControlFlowGraph();
  liveness=new LiveVariablesAnalysis(cfg,functionScope,compiler);
  liveness.analyze();
  tryRemoveDeadAssignments(t,cfg);
}
