{
  if (!atStart) {
    if (lookAhead == null) {
      return;
    }
    Node curNode=iterator.current();
    if (curNode.isName() && varName.equals(curNode.getString())) {
      lookAhead=null;
      return;
    }
  }
  if (!iterator.hasNext()) {
    lookAhead=null;
    return;
  }
  Node nextNode=iterator.next();
  Node nextParent=iterator.currentParent();
  Token type=nextNode.getToken();
  if (valueHasSideEffects) {
    boolean readsState=false;
    if ((nextNode.isName() && !varName.equals(nextNode.getString())) || (nextNode.isGetProp() || nextNode.isGetElem())) {
      if (nextParent == null || !NodeUtil.isVarOrSimpleAssignLhs(nextNode,nextParent)) {
        readsState=true;
      }
    }
 else     if (nextNode.isCall() || nextNode.isNew()) {
      readsState=true;
    }
    if (readsState) {
      lookAhead=null;
      return;
    }
  }
  if (NodeUtil.nodeTypeMayHaveSideEffects(nextNode) && type != Token.NAME || type == Token.NAME && nextParent.isCatch()) {
    lookAhead=null;
    return;
  }
  lookAhead=nextNode;
}
