{
  if (name.props != null) {
    Preconditions.checkState(!value.getQualifiedName().equals(name.getFullName()));
    for (    Name prop : name.props) {
      rewriteAliasProps(prop,value,depth + 1,newNodes);
      List<Ref> refs=Lists.newArrayList(prop.getRefs());
      for (      Ref ref : refs) {
        Node target=ref.node;
        for (int i=0; i <= depth; i++) {
          if (target.isGetProp()) {
            target=target.getFirstChild();
          }
 else           if (NodeUtil.isObjectLitKey(target)) {
            Node gparent=target.getParent().getParent();
            if (gparent.isAssign()) {
              target=gparent.getFirstChild();
            }
 else {
              Preconditions.checkState(NodeUtil.isObjectLitKey(gparent));
              target=gparent;
            }
          }
 else {
            throw new IllegalStateException("unexpected: " + target.toString());
          }
        }
        Preconditions.checkState(target.isGetProp() || target.isName());
        target.getParent().replaceChild(target,value.cloneTree());
        prop.removeRef(ref);
        newNodes.add(new AstChange(ref.module,ref.scope,ref.node));
      }
    }
  }
}
