{
  boolean canCollapseChildNames=n.canCollapseUnannotatedChildNames();
  if (n.canCollapse()) {
    if (n.docInfo != null && n.docInfo.isNoCollapse() && n.isDescendantOfEnum()) {
      compiler.report(JSError.make(n.docInfo.getAssociatedNode(),INVALID_NOCOLLAPSE));
    }
    updateObjLitOrFunctionDeclaration(n,alias,canCollapseChildNames);
  }
  if (n.props != null) {
    for (    Name p : n.props) {
      collapseDeclarationOfNameAndDescendants(p,appendPropForAlias(alias,p.getBaseName()));
      if (!p.inExterns && canCollapseChildNames && p.getDeclaration() != null && p.canCollapse() && p.getDeclaration().node != null && p.getDeclaration().node.getParent() != null && p.getDeclaration().node.getParent().isAssign()) {
        updateSimpleDeclaration(appendPropForAlias(alias,p.getBaseName()),p,p.getDeclaration());
      }
    }
  }
}
