{
  if (!n.isCall() || !n.getFirstChild().isName()) {
    return;
  }
  Node callTarget=n.getFirstChild();
  String callName=callTarget.getString();
  if (startMarkerName.equals(callName)) {
    if (!parent.isExprResult()) {
      compiler.report(t.makeError(n,INVALID_MARKER_USAGE,startMarkerName));
      return;
    }
    markerStack.push(parent);
    return;
  }
  if (!endMarkerName.equals(callName)) {
    return;
  }
  Node endMarkerNode=parent;
  if (!endMarkerNode.isExprResult()) {
    compiler.report(t.makeError(n,INVALID_MARKER_USAGE,endMarkerName));
    return;
  }
  if (markerStack.isEmpty()) {
    compiler.report(t.makeError(n,UNMATCHED_END_MARKER,startMarkerName,endMarkerName));
    return;
  }
  Node startMarkerNode=markerStack.pop();
  if (endMarkerNode.getParent() != startMarkerNode.getParent()) {
    compiler.report(t.makeError(n,UNMATCHED_END_MARKER,startMarkerName,endMarkerName));
    return;
  }
  validMarkers.add(new Marker(startMarkerNode,endMarkerNode));
}
