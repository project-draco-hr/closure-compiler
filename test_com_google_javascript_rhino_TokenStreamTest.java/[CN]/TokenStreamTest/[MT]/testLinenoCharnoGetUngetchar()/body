{
  TokenStream stream=stream("some\nrandom\nstring");
  int c;
  assertLinenoOffset(stream,0,-1);
  c=getAndTestChar(stream,'s');
  assertLinenoOffset(stream,0,0);
  stream.ungetChar(c);
  assertLinenoOffset(stream,0,-1);
  c=getAndTestChar(stream,'s');
  c=getAndTestChar(stream,'o');
  assertLinenoOffset(stream,0,1);
  stream.ungetChar(c);
  assertLinenoOffset(stream,0,0);
  c=getAndTestChar(stream,'o');
  assertLinenoOffset(stream,0,1);
  c=getAndTestChar(stream,'m');
  assertLinenoOffset(stream,0,2);
  stream.ungetChar(c);
  assertLinenoOffset(stream,0,1);
  c=getAndTestChar(stream,'m');
  c=getAndTestChar(stream,'e');
  assertLinenoOffset(stream,0,3);
  c=getAndTestChar(stream,'\n');
  assertLinenoOffset(stream,0,4);
  c=getAndTestChar(stream,'r');
  assertLinenoOffset(stream,1,0);
  c=getAndTestChar(stream,'a');
  assertLinenoOffset(stream,1,1);
  c=getAndTestChar(stream,'n');
  assertLinenoOffset(stream,1,2);
  c=getAndTestChar(stream,'d');
  assertLinenoOffset(stream,1,3);
  stream.ungetChar(c);
  stream.ungetChar('n');
  c=getAndTestChar(stream,'n');
  assertLinenoOffset(stream,1,2);
  c=getAndTestChar(stream,'d');
  assertLinenoOffset(stream,1,3);
  c=getAndTestChar(stream,'o');
  assertLinenoOffset(stream,1,4);
  c=getAndTestChar(stream,'m');
  assertLinenoOffset(stream,1,5);
  c=getAndTestChar(stream,'\n');
  assertLinenoOffset(stream,1,6);
  c=getAndTestChar(stream,'s');
  assertLinenoOffset(stream,2,0);
  c=getAndTestChar(stream,'t');
  assertLinenoOffset(stream,2,1);
  c=getAndTestChar(stream,'r');
  assertLinenoOffset(stream,2,2);
  c=getAndTestChar(stream,'i');
  assertLinenoOffset(stream,2,3);
  c=getAndTestChar(stream,'n');
  assertLinenoOffset(stream,2,4);
  c=getAndTestChar(stream,'g');
  assertLinenoOffset(stream,2,5);
}
