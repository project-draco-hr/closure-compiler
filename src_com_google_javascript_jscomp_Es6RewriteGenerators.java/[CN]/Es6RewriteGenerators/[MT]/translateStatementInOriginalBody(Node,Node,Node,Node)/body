{
  if (statement.isExprResult() && statement.getFirstChild().isYield()) {
    visitYieldExprResult(statement,currentCase);
    return true;
  }
 else   if (statement.isVar()) {
    visitVar(statement,currentCase,varRoot);
    return false;
  }
 else   if (statement.isFor() && yieldsOrReturns(statement)) {
    visitFor(statement,originalBody);
    return false;
  }
 else   if (statement.isWhile() && yieldsOrReturns(statement)) {
    visitWhile(statement,originalBody);
    return false;
  }
 else   if (statement.isIf() && yieldsOrReturns(statement) && !statement.isGeneratorSafe()) {
    visitIf(statement,originalBody);
    return false;
  }
 else   if (statement.isBlock()) {
    visitBlock(statement,originalBody);
    return false;
  }
 else   if (statement.isGeneratorMarker()) {
    return true;
  }
 else   if (statement.isReturn()) {
    visitReturn(statement,currentCase);
    return false;
  }
 else   if ((statement.isBreak() && !statement.isGeneratorSafe()) || statement.isContinue() || statement.isThrow()) {
    compiler.report(JSError.make(statement,Es6ToEs3Converter.CANNOT_CONVERT_YET,"Breaks, continues, and throws are not yet allowed if their" + " enclosing control structure contains a yield or return."));
    return false;
  }
 else {
    currentCase.getLastChild().addChildToBack(statement);
    return false;
  }
}
