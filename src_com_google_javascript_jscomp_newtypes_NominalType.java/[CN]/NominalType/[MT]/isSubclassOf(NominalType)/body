{
  RawNominalType otherRawType=other.rawType;
  if (rawType.isInterface && !otherRawType.isInterface) {
    return false;
  }
  if (!rawType.isInterface && otherRawType.isInterface) {
    if (rawType.interfaces == null) {
      return false;
    }
    for (    NominalType i : rawType.interfaces) {
      if (i.instantiateGenerics(typeMap).isSubclassOf(other)) {
        return true;
      }
    }
    return false;
  }
  if (rawType.isInterface && otherRawType.isInterface) {
    if (rawType.equals(otherRawType)) {
      return areTypeParametersSubtypes(other);
    }
 else     if (rawType.interfaces == null) {
      return false;
    }
 else {
      for (      NominalType i : rawType.interfaces) {
        if (i.instantiateGenerics(typeMap).isSubclassOf(other)) {
          return true;
        }
      }
      return false;
    }
  }
  if (rawType.equals(otherRawType)) {
    return areTypeParametersSubtypes(other);
  }
 else   if (rawType.superClass == null) {
    return false;
  }
 else {
    return rawType.superClass.instantiateGenerics(typeMap).isSubclassOf(other);
  }
}
