{
  if (newTypeMap.isEmpty()) {
    return this;
  }
  if (!rawType.isGeneric() && !hasFreeTypeVars(new HashSet<String>())) {
    return this.rawType.wrappedAsNominal;
  }
  ImmutableMap.Builder<String,JSType> builder=ImmutableMap.builder();
  if (!typeMap.isEmpty()) {
    for (    String oldKey : typeMap.keySet()) {
      builder.put(oldKey,typeMap.get(oldKey).substituteGenerics(newTypeMap));
    }
  }
 else {
    for (    Map.Entry<String,JSType> newTypeEntry : newTypeMap.entrySet()) {
      String newKey=newTypeEntry.getKey();
      if (rawType.typeParameters.contains(newKey)) {
        builder.put(newKey,newTypeEntry.getValue());
      }
    }
  }
  return new NominalType(builder.build(),this.rawType);
}
