{
  Preconditions.checkState(this.rawType.equals(other.rawType));
  if (this.typeMap.isEmpty()) {
    return other.instantiationIsUnknownOrIdentity();
  }
  if (other.typeMap.isEmpty()) {
    return instantiationIsUnknownOrIdentity();
  }
  for (  String typeVar : this.rawType.getTypeParameters()) {
    Preconditions.checkState(this.typeMap.containsKey(typeVar),"Type variable %s not in the domain: %s",typeVar,this.typeMap.keySet());
    Preconditions.checkState(other.typeMap.containsKey(typeVar),"Other (%s) doesn't contain mapping (%s->%s) from this (%s)",other,typeVar,this.typeMap.get(typeVar),this);
    JSType thisType=this.typeMap.get(typeVar);
    JSType otherType=other.typeMap.get(typeVar);
    JSTypes commonTypes=getCommonTypes();
    if (commonTypes.bivariantArrayGenerics && this.rawType.isBuiltinWithName("Array")) {
      thisType=thisType.removeType(commonTypes.NULL_OR_UNDEFINED);
      otherType=otherType.removeType(commonTypes.NULL_OR_UNDEFINED);
      if (!thisType.isSubtypeOf(otherType) && !otherType.isSubtypeOf(thisType)) {
        return false;
      }
    }
 else     if (!thisType.isSubtypeOf(otherType)) {
      return false;
    }
  }
  return true;
}
