{
  other=other.findMatchingAncestorWith(this);
  if (other == null) {
    return false;
  }
  if (!isGeneric()) {
    return true;
  }
  Preconditions.checkState(!typeMap.isEmpty());
  if (other.typeMap.isEmpty()) {
    return true;
  }
  boolean hasUnified=true;
  for (  String typeParam : this.rawType.typeParameters) {
    JSType fromOtherMap=other.typeMap.get(typeParam);
    Preconditions.checkNotNull(fromOtherMap,"Type variable %s not found in map %s",typeParam,other.typeMap);
    hasUnified=hasUnified && this.typeMap.get(typeParam).unifyWithSubtype(fromOtherMap,typeParameters,typeMultimap);
  }
  return hasUnified && isInvariantWith(typeMultimap,other);
}
