{
switch (hasFreeTypeVars) {
case UNKNOWN:
    hasFreeTypeVars=HasFreeTypeVars.CHECKING_NOW;
  break;
case CHECKING_NOW:
hasFreeTypeVars=HasFreeTypeVars.FALSE;
return false;
case TRUE:
return true;
case FALSE:
return false;
}
if (isGeneric()) {
boundTypeVars.addAll(typeParameters);
}
for (Property prop : classProps.values()) {
if (prop.hasFreeTypeVars(boundTypeVars)) {
hasFreeTypeVars=HasFreeTypeVars.TRUE;
return true;
}
}
for (Property prop : protoProps.values()) {
if (prop.hasFreeTypeVars(boundTypeVars)) {
hasFreeTypeVars=HasFreeTypeVars.TRUE;
return true;
}
}
if (interfaces != null) {
for (NominalType nt : interfaces) {
if (nt.hasFreeTypeVars(boundTypeVars)) {
hasFreeTypeVars=HasFreeTypeVars.TRUE;
return true;
}
}
}
if (superClass != null && superClass.hasFreeTypeVars(boundTypeVars)) {
hasFreeTypeVars=HasFreeTypeVars.TRUE;
return true;
}
 else {
hasFreeTypeVars=HasFreeTypeVars.FALSE;
return false;
}
}
