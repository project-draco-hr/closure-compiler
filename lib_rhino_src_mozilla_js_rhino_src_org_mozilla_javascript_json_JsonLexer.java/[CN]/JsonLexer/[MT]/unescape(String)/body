{
  char[] escaped=lexeme.toCharArray();
  int start=0;
  int end=escaped.length - 1;
  while (escaped[start] != '"') {
    ++start;
  }
  while (escaped[end] != '"') {
    --end;
  }
  ++start;
  StringBuffer buffer=new StringBuffer(end - start);
  boolean escaping=false;
  for (int i=start; i < end; i+=1) {
    char c=escaped[i];
    if (escaping) {
switch (c) {
case '"':
        buffer.append('"');
      break;
case '\\':
    buffer.append('\\');
  break;
case '/':
buffer.append('/');
break;
case 'b':
buffer.append('\b');
break;
case 'f':
buffer.append('\f');
break;
case 'n':
buffer.append('\n');
break;
case 'r':
buffer.append('\r');
break;
case 't':
buffer.append('\t');
break;
case 'u':
int codePoint=Integer.parseInt(new String(escaped,i + 1,4),16);
buffer.appendCodePoint(codePoint);
i+=4;
break;
default :
throw new IllegalArgumentException("Illegal escape sequence: '\\" + c + "'");
}
escaping=false;
}
 else {
if (c == '\\') {
escaping=true;
}
 else {
buffer.append(c);
}
}
}
return buffer.toString();
}
