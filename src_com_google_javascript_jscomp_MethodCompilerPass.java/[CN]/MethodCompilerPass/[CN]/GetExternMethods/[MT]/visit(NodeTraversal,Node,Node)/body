{
switch (n.getType()) {
case Token.GETPROP:
case Token.GETELEM:
{
      Node dest=n.getFirstChild().getNext();
      if (!dest.isString()) {
        return;
      }
      String name=dest.getString();
      if (parent.isAssign() && parent.getFirstChild() == n && n.getNext().isFunction()) {
        addSignature(name,n.getNext(),t.getSourceName());
      }
 else {
        getSignatureStore().removeSignature(name);
        externMethodsWithoutSignatures.add(name);
      }
      externMethods.add(name);
    }
  break;
case Token.OBJECTLIT:
{
  for (Node key=n.getFirstChild(); key != null; key=key.getNext()) {
    Node value=key.getFirstChild();
    String name=key.getString();
    if (key.isString() && value.isFunction()) {
      addSignature(name,value,t.getSourceName());
    }
 else {
      getSignatureStore().removeSignature(name);
      externMethodsWithoutSignatures.add(name);
    }
    externMethods.add(name);
  }
}
break;
}
}
