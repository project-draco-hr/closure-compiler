{
  StringBuilder sb=new StringBuilder();
  sb.append("/** Begin line maps. **/{ count : 2 }\n");
  sb.append("[0,,,,1,,2]\n");
  sb.append("[3,,,,,,,]\n");
  sb.append("/** Begin file information. **/\n");
  sb.append("['test.js']\n");
  sb.append("['foo.js']\n");
  sb.append("/** Begin mapping definitions. **/\n");
  sb.append("['test.js', 0, 1]\n");
  sb.append("['bleg.js', 5, 8, 'hello']\n");
  sb.append("['bleg.js', 12, 78]\n");
  sb.append("['foo.js', 15, 16, 'yo!']");
  SourceMapConsumerV1 sourceMap=new SourceMapConsumerV1();
  sourceMap.parse(sb.toString());
  OriginalMapping mapping=sourceMap.getMappingForLine(1,1);
  assertNotNull(mapping);
  assertEquals("test.js",mapping.getOriginalFile());
  assertEquals(0,mapping.getLineNumber());
  assertEquals(1,mapping.getColumnPosition());
  assertEquals("",mapping.getIdentifier());
  mapping=sourceMap.getMappingForLine(1,6);
  assertNotNull(mapping);
  assertEquals("bleg.js",mapping.getOriginalFile());
  assertEquals(5,mapping.getLineNumber());
  assertEquals(8,mapping.getColumnPosition());
  assertEquals("hello",mapping.getIdentifier());
  mapping=sourceMap.getMappingForLine(2,4);
  assertNotNull(mapping);
  assertEquals("foo.js",mapping.getOriginalFile());
  assertEquals(15,mapping.getLineNumber());
  assertEquals(16,mapping.getColumnPosition());
  assertEquals("yo!",mapping.getIdentifier());
  assertNull(sourceMap.getMappingForLine(Integer.MAX_VALUE,1));
  assertNotNull(sourceMap.getMappingForLine(1,Integer.MAX_VALUE));
}
