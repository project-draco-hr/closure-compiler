{
  testSame("/**\n" + " * @constructor\n" + " * @template T\n"+ " */\n"+ "function C() {};\n"+ ""+ "/** @type {T} */"+ "C.prototype.foo = 1;\n"+ ""+ "/**\n"+ " * @constructor\n"+ " * @template T, U\n"+ " * @extends {C<U>}"+ " */\n"+ "function D() {};\n"+ ""+ "/** @type {T} */"+ "D.prototype.bar;\n"+ ""+ "/** @type {D<string, number>} */ var x = new D();\n"+ "var result1 = x.foo;\n"+ "var result2 = x.bar;\n");
  assertEquals("number",findNameType("result1",globalScope).toString());
  assertEquals("string",findNameType("result2",globalScope).toString());
}
