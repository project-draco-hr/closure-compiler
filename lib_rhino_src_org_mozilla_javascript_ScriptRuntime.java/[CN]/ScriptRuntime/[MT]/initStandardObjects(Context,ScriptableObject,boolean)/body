{
  if (scope == null) {
    scope=new NativeObject();
  }
  scope.associateValue(LIBRARY_SCOPE_KEY,scope);
  (new ClassCache()).associate(scope);
  BaseFunction.init(scope,sealed);
  NativeObject.init(scope,sealed);
  Scriptable objectProto=ScriptableObject.getObjectPrototype(scope);
  Scriptable functionProto=ScriptableObject.getClassPrototype(scope,"Function");
  functionProto.setPrototype(objectProto);
  if (scope.getPrototype() == null)   scope.setPrototype(objectProto);
  NativeError.init(scope,sealed);
  NativeGlobal.init(cx,scope,sealed);
  NativeArray.init(scope,sealed);
  if (cx.getOptimizationLevel() > 0) {
    NativeArray.setMaximumInitialCapacity(200000);
  }
  NativeString.init(scope,sealed);
  NativeBoolean.init(scope,sealed);
  NativeNumber.init(scope,sealed);
  NativeDate.init(scope,sealed);
  NativeMath.init(scope,sealed);
  NativeJSON.init(scope,sealed);
  NativeWith.init(scope,sealed);
  NativeCall.init(scope,sealed);
  NativeScript.init(scope,sealed);
  NativeIterator.init(scope,sealed);
  boolean withXml=cx.hasFeature(Context.FEATURE_E4X) && cx.getE4xImplementationFactory() != null;
  new LazilyLoadedCtor(scope,"RegExp","org.mozilla.javascript.regexp.NativeRegExp",sealed,true);
  new LazilyLoadedCtor(scope,"Packages","org.mozilla.javascript.NativeJavaTopPackage",sealed,true);
  new LazilyLoadedCtor(scope,"getClass","org.mozilla.javascript.NativeJavaTopPackage",sealed,true);
  new LazilyLoadedCtor(scope,"JavaAdapter","org.mozilla.javascript.JavaAdapter",sealed,true);
  new LazilyLoadedCtor(scope,"JavaImporter","org.mozilla.javascript.ImporterTopLevel",sealed,true);
  new LazilyLoadedCtor(scope,"Continuation","org.mozilla.javascript.NativeContinuation",sealed,true);
  for (  String packageName : getTopPackageNames()) {
    new LazilyLoadedCtor(scope,packageName,"org.mozilla.javascript.NativeJavaTopPackage",sealed,true);
  }
  if (withXml) {
    String xmlImpl=cx.getE4xImplementationFactory().getImplementationClassName();
    new LazilyLoadedCtor(scope,"XML",xmlImpl,sealed,true);
    new LazilyLoadedCtor(scope,"XMLList",xmlImpl,sealed,true);
    new LazilyLoadedCtor(scope,"Namespace",xmlImpl,sealed,true);
    new LazilyLoadedCtor(scope,"QName",xmlImpl,sealed,true);
  }
  if (scope instanceof TopLevel) {
    ((TopLevel)scope).cacheBuiltins();
  }
  return scope;
}
