{
  Node ancestor=parent;
  Node ancestorChild=node;
  while (true) {
    if (ancestor.getFirstChild() != ancestorChild) {
      replaceWithNull(ancestorChild,ancestor);
      break;
    }
    if (ancestor.isExprResult()) {
      Node ancParent=ancestor.getParent();
      replaceWithEmpty(ancestor,ancParent);
      break;
    }
    if (ancestor.isAssign()) {
      Node ancParent=ancestor.getParent();
      ancParent.replaceChild(ancestor,ancestor.getLastChild().detach());
      break;
    }
    if (!NodeUtil.isGet(ancestor) && !ancestor.isCall()) {
      replaceWithNull(ancestorChild,ancestor);
      break;
    }
    ancestorChild=ancestor;
    ancestor=ancestor.getParent();
  }
  compiler.reportCodeChange();
}
