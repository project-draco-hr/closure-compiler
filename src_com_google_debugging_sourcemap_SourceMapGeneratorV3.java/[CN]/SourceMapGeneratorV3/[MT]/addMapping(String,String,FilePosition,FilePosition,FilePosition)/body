{
  if (sourceName == null || sourceStartPosition.getLine() < 0) {
    return;
  }
  FilePosition adjustedStart=startPosition;
  FilePosition adjustedEnd=endPosition;
  if (offsetPosition.getLine() != 0 || offsetPosition.getColumn() != 0) {
    int offsetLine=offsetPosition.getLine();
    int startOffsetPosition=offsetPosition.getColumn();
    int endOffsetPosition=offsetPosition.getColumn();
    if (startPosition.getLine() > 0) {
      startOffsetPosition=0;
    }
    if (endPosition.getLine() > 0) {
      endOffsetPosition=0;
    }
    adjustedStart=new FilePosition(startPosition.getLine() + offsetLine,startPosition.getColumn() + startOffsetPosition);
    adjustedEnd=new FilePosition(endPosition.getLine() + offsetLine,endPosition.getColumn() + endOffsetPosition);
  }
  Mapping mapping=new Mapping();
  mapping.sourceFile=sourceName;
  mapping.originalPosition=sourceStartPosition;
  mapping.originalName=symbolName;
  mapping.startPosition=adjustedStart;
  mapping.endPosition=adjustedEnd;
  if (lastMapping != null) {
    int lastLine=lastMapping.startPosition.getLine();
    int lastColumn=lastMapping.startPosition.getColumn();
    int nextLine=mapping.startPosition.getLine();
    int nextColumn=mapping.startPosition.getColumn();
    Preconditions.checkState(nextLine > lastLine || (nextLine == lastLine && nextColumn >= lastColumn),"Incorrect source mappings order, previous : (%s,%s)\n" + "new : (%s,%s)",lastLine,lastColumn,nextLine,nextColumn);
  }
  lastMapping=mapping;
  mappings.add(mapping);
}
