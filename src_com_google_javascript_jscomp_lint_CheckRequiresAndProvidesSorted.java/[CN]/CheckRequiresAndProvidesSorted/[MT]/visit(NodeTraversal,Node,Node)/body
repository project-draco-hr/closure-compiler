{
switch (n.getType()) {
case SCRIPT:
    if (!containsShorthandRequire) {
      reportIfOutOfOrder(requires,REQUIRES_NOT_SORTED);
    }
  reportIfOutOfOrder(provides,PROVIDES_NOT_SORTED);
requires.clear();
provides.clear();
containsShorthandRequire=false;
break;
case CALL:
Node callee=n.getFirstChild();
if (!callee.matchesQualifiedName("goog.require") && !callee.matchesQualifiedName("goog.provide") && !callee.matchesQualifiedName("goog.module")) {
return;
}
if (parent.isExprResult() && NodeUtil.isTopLevel(parent.getParent())) {
String namespace=n.getLastChild().getString();
if (namespace == null) {
return;
}
if (callee.matchesQualifiedName("goog.require")) {
requires.add(n);
}
 else {
if (!requires.isEmpty()) {
t.report(n,PROVIDES_AFTER_REQUIRES);
}
if (callee.matchesQualifiedName("goog.provide")) {
provides.add(n);
}
}
}
 else if (NodeUtil.isNameDeclaration(parent.getParent()) && callee.matchesQualifiedName("goog.require")) {
containsShorthandRequire=true;
}
break;
}
}
