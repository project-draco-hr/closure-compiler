{
switch (n.getType()) {
case Token.SCRIPT:
    if (!containsShorthandRequire) {
      if (!alphabetical.isOrdered(requires)) {
        t.report(requires.get(0),REQUIRES_NOT_SORTED);
      }
      if (!alphabetical.isOrdered(provides)) {
        t.report(provides.get(0),PROVIDES_NOT_SORTED);
      }
    }
  if (!modules.isEmpty() && !provides.isEmpty()) {
    t.report(provides.get(0),MODULE_AND_PROVIDES);
  }
if (modules.size() > 1) {
  t.report(modules.get(1),MULTIPLE_MODULES_IN_FILE);
}
requires.clear();
provides.clear();
modules.clear();
containsShorthandRequire=false;
break;
case Token.CALL:
Node callee=n.getFirstChild();
if (!callee.matchesQualifiedName("goog.require") && !callee.matchesQualifiedName("goog.provide") && !callee.matchesQualifiedName("goog.module")) {
return;
}
if (parent.isExprResult() && parent.getParent().isScript()) {
String namespace=n.getLastChild().getString();
if (namespace == null) {
return;
}
if (callee.matchesQualifiedName("goog.require")) {
requires.add(n);
}
 else {
if (!requires.isEmpty()) {
t.report(n,PROVIDES_AFTER_REQUIRES);
}
if (callee.matchesQualifiedName("goog.module")) {
modules.add(n);
}
 else {
provides.add(n);
}
}
}
 else if (NodeUtil.isNameDeclaration(parent.getParent()) && callee.matchesQualifiedName("goog.require")) {
containsShorthandRequire=true;
}
break;
}
}
