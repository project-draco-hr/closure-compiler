{
  test("function *f() {var i = 0; for (var j = 0; j < 10; j++) { i += j; } yield i;}",LINE_JOINER.join("/** @suppress {uselessCode} */ function f() {","  var $jscomp$generator$state = 0;","  var i;","  function $jscomp$generator$impl($jscomp$generator$next$arg,","      $jscomp$generator$throw$arg) {","    while (1) switch ($jscomp$generator$state) {","      case 0:","        i = 0;","        for (var j = 0; j < 10; j++) { i += j; }","        $jscomp$generator$state = 1;","        return {value: i, done: false};","      case 1:","        if (!($jscomp$generator$throw$arg !== undefined)) {","          $jscomp$generator$state = 2; break;","        }","        $jscomp$generator$state = -1;","        throw $jscomp$generator$throw$arg;","      case 2:","        $jscomp$generator$state = -1;","      default:","        return {value: undefined, done: true}","    }","  }","  var iterator = {","    next: function(arg){ return $jscomp$generator$impl(arg, undefined); },","    throw: function(arg){ return $jscomp$generator$impl(undefined, arg); },","  }","  $jscomp.initSymbolIterator();","  iterator[Symbol.iterator] = function() { return this; };","  return iterator;","}"));
  test("function *f() { for (var j = 0; j < 10; j++) { yield j; } }",LINE_JOINER.join("/** @suppress {uselessCode} */","function f() {","  var $jscomp$generator$state = 0;","  var j;","  function $jscomp$generator$impl($jscomp$generator$next$arg,","      $jscomp$generator$throw$arg) {","    while (1) switch ($jscomp$generator$state) {","      case 0:","        j = 0;","      case 1:","        if (!(j < 10)) { $jscomp$generator$state = 3; break; }","        $jscomp$generator$state = 4;","        return {value: j, done: false};","      case 4:","        if (!($jscomp$generator$throw$arg !== undefined)) {","          $jscomp$generator$state = 5; break;","        }","        $jscomp$generator$state = -1;","        throw $jscomp$generator$throw$arg;","      case 5:","      case 2:","        j++","        $jscomp$generator$state = 1;","        break","      case 3:","        $jscomp$generator$state = -1;","      default:","        return {value: undefined, done: true}","    }","  }","  var iterator = {","    next: function(arg){ return $jscomp$generator$impl(arg, undefined); },","    throw: function(arg){ return $jscomp$generator$impl(undefined, arg); },","  }","  $jscomp.initSymbolIterator();","  iterator[Symbol.iterator] = function() { return this; };","  return iterator;","}"));
  rewriteGeneratorBodyWithVars("var i = 0; for (var j = 0; j < 10; j++) { i += j; throw 5; } yield i;","var j; var i;",LINE_JOINER.join("      case 0:","        i = 0;","        j = 0;","      case 1:","        if (!(j < 10)) {","          $jscomp$generator$state = 3;","          break;","        }","        i += j;","        $jscomp$generator$state = -1;","        throw 5;","      case 2:","        j++;","        $jscomp$generator$state = 1;","        break;","      case 3:","        $jscomp$generator$state = 4;","        return {value: i, done: false};","      case 4:","        if (!($jscomp$generator$throw$arg !== undefined)) {","          $jscomp$generator$state = 5; break;","        }","        $jscomp$generator$state = -1;","        throw $jscomp$generator$throw$arg;","      case 5:","        $jscomp$generator$state = -1;","      default:","        return {value: undefined, done: true}"));
}
