{
  rewriteGeneratorBodyWithVars("for (var i in j) { yield 1; }",LINE_JOINER.join("var i;","var $jscomp$generator$forin$iter0;","var $jscomp$generator$forin$var0;","var $jscomp$generator$forin$array0;"),LINE_JOINER.join("case 0:","  $jscomp$generator$forin$array0 = [];","  $jscomp$generator$forin$iter0 = j;","  for (i in $jscomp$generator$forin$iter0) {","    $jscomp$generator$forin$array0.push(i);","  }","  $jscomp$generator$forin$var0 = 0;","case 1:","  if (!($jscomp$generator$forin$var0","      < $jscomp$generator$forin$array0.length)) {","    $jscomp$generator$state = 3;","    break;","  }","  i = $jscomp$generator$forin$array0[$jscomp$generator$forin$var0];","  if (!(!(i in $jscomp$generator$forin$iter0))) {","    $jscomp$generator$state = 4;","    break;","  }","  $jscomp$generator$state = 2;","  break;","case 4:","  $jscomp$generator$state = 5;","  return{value:1, done:false};","case 5:","  if (!($jscomp$generator$throw$arg !== undefined)) {","    $jscomp$generator$state = 6; break;","  }","  $jscomp$generator$state = -1;","  throw $jscomp$generator$throw$arg;","case 6:","case 2:","  $jscomp$generator$forin$var0++;","  $jscomp$generator$state = 1;","  break;","case 3:","  $jscomp$generator$state = -1;"));
}
