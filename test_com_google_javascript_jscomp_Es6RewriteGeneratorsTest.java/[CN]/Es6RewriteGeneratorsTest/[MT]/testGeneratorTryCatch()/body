{
  rewriteGeneratorBodyWithVars("try {yield 1;} catch (e) {}","var e; var $jscomp$generator$global$error;",LINE_JOINER.join("case 0:","  try {","    $jscomp$generator$state = 3;","    return {value: 1, done: false};","  } catch ($jscomp$generator$e) {","    $jscomp$generator$global$error = $jscomp$generator$e;","    $jscomp$generator$state = 1;","    break;","  }","case 3:","  try {","    if (!($jscomp$generator$throw$arg !== undefined)) {","      $jscomp$generator$state = 4; break;","    }","    $jscomp$generator$state = -1;","    throw $jscomp$generator$throw$arg;","  } catch ($jscomp$generator$e) {","    $jscomp$generator$global$error = $jscomp$generator$e;","    $jscomp$generator$state = 1;","    break;","  }","case 4:","  try {","    $jscomp$generator$state = 2;","    break;","  } catch ($jscomp$generator$e) {","    $jscomp$generator$global$error = $jscomp$generator$e;","    $jscomp$generator$state = 1;","    break;","  }","case 1:","  e = $jscomp$generator$global$error;","case 2:","  $jscomp$generator$state = -1;"));
}
