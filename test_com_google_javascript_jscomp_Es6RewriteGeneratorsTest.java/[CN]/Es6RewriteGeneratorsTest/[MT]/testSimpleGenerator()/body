{
  test("function *f() {}",Joiner.on('\n').join("/** @suppress {uselessCode} */","function f() {","  var $jscomp$generator$state = 0;","  function $jscomp$generator$impl($jscomp$generator$next$arg,","      $jscomp$generator$throw$arg) {","    while (1) switch ($jscomp$generator$state) {","      case 0:","        $jscomp$generator$state = -1;","      default:","        return {value: undefined, done: true}","    }","  }","  return {","    $$iterator: function() { return this; },","    next: function(arg){ return $jscomp$generator$impl(arg, undefined); },","    throw: function(arg){ return $jscomp$generator$impl(undefined, arg); },","  };","}"));
  test("function *f() {yield 1;}",Joiner.on('\n').join("/** @suppress {uselessCode} */","function f() {","  var $jscomp$generator$state = 0;","  function $jscomp$generator$impl($jscomp$generator$next$arg,","      $jscomp$generator$throw$arg) {","    while (1) switch ($jscomp$generator$state) {","      case 0:","        $jscomp$generator$state = 1;","        return {value: 1, done: false};","      case 1:","        if (!($jscomp$generator$throw$arg !== undefined)) {","          $jscomp$generator$state = 2; break;","        }","        $jscomp$generator$state = -1;","        throw $jscomp$generator$throw$arg;","      case 2:","        $jscomp$generator$state = -1;","      default:","        return {value: undefined, done: true}","    }","  }","  return {","    $$iterator: function() { return this; },","    next: function(arg){ return $jscomp$generator$impl(arg, undefined); },","    throw: function(arg){ return $jscomp$generator$impl(undefined, arg); },","  };","}"));
  test("/** @param {*} a */ function *f(a, b) {}",Joiner.on('\n').join("/** @param {*} a @suppress {uselessCode} */","function f(a, b) {","  var $jscomp$generator$state = 0;","  function $jscomp$generator$impl($jscomp$generator$next$arg,","      $jscomp$generator$throw$arg) {","    while (1) switch ($jscomp$generator$state) {","      case 0:","        $jscomp$generator$state = -1;","      default:","        return {value: undefined, done: true}","    }","  }","  return {","    $$iterator: function() { return this; },","    next: function(arg){ return $jscomp$generator$impl(arg, undefined); },","    throw: function(arg){ return $jscomp$generator$impl(undefined, arg); },","  };","}"));
  test("function *f(a, b) {var i = 0, j = 2;}",Joiner.on('\n').join("/** @suppress {uselessCode} */","function f(a, b) {","  var $jscomp$generator$state = 0;","  var j;","  var i;","  function $jscomp$generator$impl($jscomp$generator$next$arg,","      $jscomp$generator$throw$arg) {","    while (1) switch ($jscomp$generator$state) {","      case 0:","        i = 0;","        j = 2;","        $jscomp$generator$state = -1;","      default:","        return {value: undefined, done: true}","    }","  }","  return {","    $$iterator: function() { return this; },","    next: function(arg){ return $jscomp$generator$impl(arg, undefined); },","    throw: function(arg){ return $jscomp$generator$impl(undefined, arg); },","  }","}"));
  test("function *f() { var i = 0; yield i; i = 1; yield i; i = i + 1; yield i;}",Joiner.on('\n').join("/** @suppress {uselessCode} */","function f() {","  var $jscomp$generator$state = 0;","  var i;","  function $jscomp$generator$impl($jscomp$generator$next$arg,","      $jscomp$generator$throw$arg) {","    while (1) switch ($jscomp$generator$state) {","      case 0:","        i = 0;","        $jscomp$generator$state = 1;","        return {value: i, done: false};","      case 1:","        if (!($jscomp$generator$throw$arg !== undefined)) {","          $jscomp$generator$state = 2; break;","        }","        $jscomp$generator$state = -1;","        throw $jscomp$generator$throw$arg;","      case 2:","        i = 1;","        $jscomp$generator$state = 3;","        return {value: i, done: false};","      case 3:","        if (!($jscomp$generator$throw$arg !== undefined)) {","          $jscomp$generator$state = 4; break;","        }","        $jscomp$generator$state = -1;","        throw $jscomp$generator$throw$arg;","      case 4:","        i = i + 1;","        $jscomp$generator$state = 5;","        return {value: i, done: false};","      case 5:","        if (!($jscomp$generator$throw$arg !== undefined)) {","          $jscomp$generator$state = 6; break;","        }","        $jscomp$generator$state = -1;","        throw $jscomp$generator$throw$arg;","      case 6:","        $jscomp$generator$state = -1;","      default:","        return {value: undefined, done: true}","    }","  }","  return {","    $$iterator: function() { return this; },","    next: function(arg){ return $jscomp$generator$impl(arg, undefined); },","    throw: function(arg){ return $jscomp$generator$impl(undefined, arg); },","  }","}"));
}
