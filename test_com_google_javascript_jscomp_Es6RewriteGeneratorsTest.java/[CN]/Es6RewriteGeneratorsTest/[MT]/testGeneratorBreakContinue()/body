{
  rewriteGeneratorBodyWithVars("var j = 0; while (j < 10) { yield j; break; }","var j;",LINE_JOINER.join("case 0:","  j = 0;","case 1:","  if (!(j < 10)) { $jscomp$generator$state = 2; break; }","  $jscomp$generator$state = 3;","  return {value: j, done: false};","case 3:","  if (!($jscomp$generator$throw$arg !== undefined)) {","    $jscomp$generator$state = 4; break;","  }","  $jscomp$generator$state = -1;","  throw $jscomp$generator$throw$arg;","case 4:","  $jscomp$generator$state = 2;","  break;","  $jscomp$generator$state = 1;","  break","case 2:","  $jscomp$generator$state = -1;"));
  rewriteGeneratorBodyWithVars("var j = 0; while (j < 10) { yield j; continue; }","var j;",LINE_JOINER.join("case 0:","  j = 0;","case 1:","  if (!(j < 10)) { $jscomp$generator$state = 2; break; }","  $jscomp$generator$state = 3;","  return {value: j, done: false};","case 3:","  if (!($jscomp$generator$throw$arg !== undefined)) {","    $jscomp$generator$state = 4; break;","  }","  $jscomp$generator$state = -1;","  throw $jscomp$generator$throw$arg;","case 4:","  $jscomp$generator$state = 1;","  break;","  $jscomp$generator$state = 1;","  break","case 2:","  $jscomp$generator$state = -1;"));
  rewriteGeneratorBodyWithVars("for (var j = 0; j < 10; j++) { yield j; break; }","var j;",LINE_JOINER.join("case 0:","  j = 0;","case 1:","  if (!(j < 10)) { $jscomp$generator$state = 3; break; }","  $jscomp$generator$state = 4;","  return {value: j, done: false};","case 4:","  if (!($jscomp$generator$throw$arg !== undefined)) {","    $jscomp$generator$state = 5; break;","  }","  $jscomp$generator$state = -1;","  throw $jscomp$generator$throw$arg;","case 5:","  $jscomp$generator$state = 3;","  break;","case 2:","  j++;","  $jscomp$generator$state = 1;","  break","case 3:","  $jscomp$generator$state = -1;"));
  rewriteGeneratorBodyWithVars("for (var j = 0; j < 10; j++) { yield j; continue; }","var j;",LINE_JOINER.join("case 0:","  j = 0;","case 1:","  if (!(j < 10)) { $jscomp$generator$state = 3; break; }","  $jscomp$generator$state = 4;","  return {value: j, done: false};","case 4:","  if (!($jscomp$generator$throw$arg !== undefined)) {","    $jscomp$generator$state = 5; break;","  }","  $jscomp$generator$state = -1;","  throw $jscomp$generator$throw$arg;","case 5:","  $jscomp$generator$state = 2;","  break;","case 2:","  j++;","  $jscomp$generator$state = 1;","  break","case 3:","  $jscomp$generator$state = -1;"));
}
