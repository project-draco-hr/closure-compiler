{
  if (!letConsts.isEmpty()) {
    for (    Node n : letConsts) {
      if (n.isConst()) {
        Node insertPoint=n;
        for (        Node child : n.children()) {
          Node declaration=IR.var(child.detachFromParent());
          declaration.useSourceInfoFrom(n);
          JSDocInfo existingInfo=n.getJSDocInfo();
          if (existingInfo == null) {
            existingInfo=child.getJSDocInfo();
            child.setJSDocInfo(null);
          }
          if (NodeUtil.isForIn(n.getParent()) && n == n.getParent().getFirstChild()) {
            declaration.setJSDocInfo(existingInfo);
          }
 else {
            JSDocInfoBuilder builder=JSDocInfoBuilder.maybeCopyFrom(existingInfo);
            builder.recordConstancy();
            JSDocInfo info=builder.build();
            declaration.setJSDocInfo(info);
          }
          n.getParent().addChildAfter(declaration,insertPoint);
          insertPoint=declaration;
        }
        n.detachFromParent();
      }
 else {
        n.setType(Token.VAR);
      }
    }
    compiler.reportCodeChange();
  }
}
