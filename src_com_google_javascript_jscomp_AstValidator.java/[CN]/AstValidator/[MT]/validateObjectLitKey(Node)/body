{
switch (n.getType()) {
case GETTER_DEF:
    validateObjectLitGetKey(n);
  return;
case SETTER_DEF:
validateObjectLitSetKey(n);
return;
case STRING_KEY:
validateObjectLitStringKey(n);
return;
case MEMBER_FUNCTION_DEF:
validateClassMember(n,false);
if (n.isStaticMember()) {
violation("Keys in an object literal should not be static.",n);
}
return;
case COMPUTED_PROP:
validateObjectLitComputedPropKey(n);
return;
default :
violation("Expected object literal key expression but was " + n.getType(),n);
}
}
