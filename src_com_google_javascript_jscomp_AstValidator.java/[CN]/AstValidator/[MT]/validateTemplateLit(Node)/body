{
  validateEs6Feature("template literal",n);
  validateNodeType(Token.TEMPLATELIT,n);
  if (!n.hasChildren()) {
    return;
  }
  int i=0;
  for (Node child=n.getFirstChild(); child != null; child=child.getNext(), i++) {
    if (i == 0 && !child.isString()) {
      validateExpression(child);
    }
 else     if (child.isString()) {
      validateString(child);
    }
 else {
      validateTemplateLitSub(child);
    }
  }
}
