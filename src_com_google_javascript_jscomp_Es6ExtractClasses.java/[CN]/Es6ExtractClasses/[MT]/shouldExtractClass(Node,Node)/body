{
  boolean isAnonymous=classNode.getFirstChild().isEmpty();
  if (NodeUtil.isClassDeclaration(classNode) || isAnonymous && parent.isName() || (isAnonymous && parent.isAssign() && parent.getParent().isExprResult())) {
    return false;
  }
  if (NodeUtil.mayHaveSideEffects(classNode) || expressionDecomposer.canExposeExpression(classNode) != DecompositionType.MOVABLE) {
    compiler.report(JSError.make(classNode,CANNOT_CONVERT,"class expression that cannot be extracted"));
    return false;
  }
  return true;
}
