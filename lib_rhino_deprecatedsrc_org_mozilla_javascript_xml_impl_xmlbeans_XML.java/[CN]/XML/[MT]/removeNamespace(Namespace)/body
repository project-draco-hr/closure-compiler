{
  XmlCursor cursor=newCursor();
  try {
    if (cursor.isStartdoc())     cursor.toFirstContentToken();
    if (!cursor.isStart())     return this;
    String nsPrefix=ns.prefix();
    String nsURI=ns.uri();
    Map prefixToURI=new HashMap();
    int depth=1;
    while (!(cursor.isEnd() && depth == 0)) {
      if (cursor.isStart()) {
        prefixToURI.clear();
        NamespaceHelper.getNamespaces(cursor,prefixToURI);
        ObjArray inScopeNSBag=new ObjArray();
        Iterator i=prefixToURI.entrySet().iterator();
        while (i.hasNext()) {
          Map.Entry entry=(Map.Entry)i.next();
          ns=new Namespace(lib,(String)entry.getKey(),(String)entry.getValue());
          inScopeNSBag.add(ns);
        }
        ns=new Namespace(lib,nsURI);
        inScopeNSBag.add(ns);
        Object[] inScopeNS=inScopeNSBag.toArray();
        Namespace n=NamespaceHelper.getNamespace(lib,cursor,inScopeNS);
        if (nsURI.equals(n.uri()) && (nsPrefix == null || nsPrefix.equals(n.prefix()))) {
          return this;
        }
        cursor.push();
        boolean hasNext=cursor.toFirstAttribute();
        while (hasNext) {
          n=NamespaceHelper.getNamespace(lib,cursor,inScopeNS);
          if (nsURI.equals(n.uri()) && (nsPrefix == null || nsPrefix.equals(n.prefix()))) {
            return this;
          }
          hasNext=cursor.toNextAttribute();
        }
        cursor.pop();
        if (nsPrefix == null) {
          i=prefixToURI.entrySet().iterator();
          while (i.hasNext()) {
            Map.Entry entry=(Map.Entry)i.next();
            if (entry.getValue().equals(nsURI))             NamespaceHelper.removeNamespace(cursor,(String)entry.getKey());
          }
        }
 else         if (nsURI.equals(prefixToURI.get(nsPrefix))) {
          NamespaceHelper.removeNamespace(cursor,String.valueOf(nsPrefix));
        }
      }
switch (cursor.toNextToken().intValue()) {
case XmlCursor.TokenType.INT_START:
        depth++;
      break;
case XmlCursor.TokenType.INT_END:
    depth--;
  break;
}
}
}
  finally {
cursor.dispose();
}
return this;
}
