{
  if (NodeUtil.isReferenceName(n)) {
    String name=n.getString();
    if (name.equals("RegExp") && t.getScope().getVar(name) == null) {
      int parentType=parent.getType();
      boolean first=(n == parent.getFirstChild());
      if (!((parentType == Token.NEW && first) || (parentType == Token.CALL && first) || (parentType == Token.INSTANCEOF && !first))) {
        t.report(n,REGEXP_REFERENCE);
        globalRegExpPropertiesUsed=true;
      }
    }
  }
 else   if (n.isRegExp()) {
    String pattern=n.getFirstChild().getString();
    String flags=n.getChildCount() == 2 ? n.getLastChild().getString() : "";
    try {
      RegExpTree.parseRegExp(pattern,flags);
    }
 catch (    IllegalArgumentException ex) {
      t.report(n,MALFORMED_REGEXP,ex.getMessage());
    }
  }
}
