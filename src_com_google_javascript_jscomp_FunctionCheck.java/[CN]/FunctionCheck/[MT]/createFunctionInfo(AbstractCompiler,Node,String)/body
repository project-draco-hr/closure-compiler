{
  Preconditions.checkState(fn.getType() == Token.FUNCTION);
  int numArgs=0, optArgs=0;
  boolean hasVarArgs=false;
  Node args=fn.getFirstChild().getNext();
  Node varArg=null;
  for (Node a=args.getFirstChild(); a != null; a=a.getNext()) {
    Preconditions.checkState(a.getType() == Token.NAME);
    String argName=a.getString();
    if (hasVarArgs) {
      compiler.report(JSError.make(fnSourceName,a,VAR_ARGS_ERROR));
    }
    if (a.getBooleanProp(Node.IS_VAR_ARGS_PARAM)) {
      varArg=a;
      hasVarArgs=true;
      numArgs--;
    }
 else     if (a.getBooleanProp(Node.IS_OPTIONAL_PARAM)) {
      optArgs++;
    }
 else     if (optArgs > 0) {
      compiler.report(JSError.make(fnSourceName,a,OPTIONAL_ARGS_ERROR));
    }
    numArgs++;
  }
  return new FunctionInfo(numArgs,optArgs,hasVarArgs);
}
