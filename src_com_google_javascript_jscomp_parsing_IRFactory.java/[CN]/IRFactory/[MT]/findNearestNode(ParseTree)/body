{
  while (true) {
switch (tree.type) {
case EXPRESSION_STATEMENT:
      tree=tree.asExpressionStatement().expression;
    continue;
case CALL_EXPRESSION:
  tree=tree.asCallExpression().operand;
continue;
case BINARY_OPERATOR:
tree=tree.asBinaryOperator().left;
continue;
case CONDITIONAL_EXPRESSION:
tree=tree.asConditionalExpression().condition;
continue;
case MEMBER_EXPRESSION:
tree=tree.asMemberExpression().operand;
continue;
case MEMBER_LOOKUP_EXPRESSION:
tree=tree.asMemberLookupExpression().operand;
continue;
case POSTFIX_EXPRESSION:
tree=tree.asPostfixExpression().operand;
continue;
default :
return tree;
}
}
}
