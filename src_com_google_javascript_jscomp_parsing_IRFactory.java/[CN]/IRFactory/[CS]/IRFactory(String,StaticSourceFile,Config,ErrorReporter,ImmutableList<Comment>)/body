{
  this.sourceString=sourceString;
  this.nextCommentIter=comments.iterator();
  this.currentComment=skipNonJsDoc(nextCommentIter);
  this.newlines=new ArrayList<>();
  this.sourceFile=sourceFile;
  this.fileLevelJsDocBuilder=new JSDocInfoBuilder(config.parseJsDocDocumentation.shouldParseDescriptions());
  for (int charNo=0; true; charNo++) {
    charNo=sourceString.indexOf('\n',charNo);
    if (charNo == -1) {
      break;
    }
    newlines.add(charNo);
  }
  this.sourceName=sourceFile == null ? null : sourceFile.getName();
  this.config=config;
  this.errorReporter=errorReporter;
  this.transformDispatcher=new TransformDispatcher();
  this.templateNode=createTemplateNode();
switch (config.languageMode) {
case ECMASCRIPT3:
    reservedKeywords=null;
  break;
case ECMASCRIPT5:
case ECMASCRIPT6:
reservedKeywords=ES5_RESERVED_KEYWORDS;
break;
case ECMASCRIPT5_STRICT:
case ECMASCRIPT6_STRICT:
case ECMASCRIPT6_TYPED:
case ECMASCRIPT7:
case ECMASCRIPT8:
reservedKeywords=ES5_STRICT_RESERVED_KEYWORDS;
break;
default :
throw new IllegalStateException("unknown language mode: " + config.languageMode);
}
}
