{
  maybeWarnEs6Feature(tree,Feature.CLASSES);
  Node name=transformOrEmpty(tree.name,tree);
  maybeProcessGenerics(name,tree.generics);
  Node superClass=transformOrEmpty(tree.superClass,tree);
  Node interfaces=transformListOrEmpty(Token.IMPLEMENTS,tree.interfaces);
  Node body=newNode(Token.CLASS_MEMBERS);
  setSourceInfo(body,tree);
  for (  ParseTree child : tree.elements) {
    if (child.type == ParseTreeType.MEMBER_VARIABLE || child.type == ParseTreeType.COMPUTED_PROPERTY_MEMBER_VARIABLE) {
      maybeWarnTypeSyntax(child,Feature.MEMBER_VARIABLE_IN_CLASS);
    }
    body.addChildToBack(transform(child));
  }
  Node classNode=newNode(Token.CLASS,name,superClass,body);
  if (!interfaces.isEmpty()) {
    maybeWarnTypeSyntax(tree,Feature.IMPLEMENTS);
    classNode.putProp(Node.IMPLEMENTS,interfaces);
  }
  return classNode;
}
