{
  maybeWarnEs6Feature(tree,"class");
  Node name=transformOrEmpty(tree.name,tree);
  if (tree.generics != null) {
    maybeWarnTypeSyntax(tree,"generic class");
    name.putProp(Node.GENERIC_TYPE_LIST,transform(tree.generics));
  }
  Node superClass=transformOrEmpty(tree.superClass,tree);
  Node interfaces=transformListOrEmpty(Token.IMPLEMENTS,tree.interfaces);
  Node body=newNode(Token.CLASS_MEMBERS);
  setSourceInfo(body,tree);
  for (  ParseTree child : tree.elements) {
    if (child.type == ParseTreeType.MEMBER_VARIABLE || child.type == ParseTreeType.COMPUTED_PROPERTY_MEMBER_VARIABLE) {
      maybeWarnTypeSyntax(child,"member variable in class");
    }
    body.addChildToBack(transform(child));
  }
  Node classNode=newNode(Token.CLASS,name,superClass,body);
  if (!interfaces.isEmpty()) {
    maybeWarnTypeSyntax(tree,"implements");
    classNode.putProp(Node.IMPLEMENTS,interfaces);
  }
  return classNode;
}
