{
switch (n.getType()) {
case VAR:
    for (Node child=n.getFirstChild(); child != null; ) {
      Node next=child.getNext();
      declareVar(child);
      child=next;
    }
  return;
case FUNCTION:
if (NodeUtil.isFunctionExpression(n)) {
  return;
}
String fnName=n.getFirstChild().getString();
if (fnName.isEmpty()) {
return;
}
declareVar(n.getFirstChild());
return;
case CATCH:
Preconditions.checkState(n.getChildCount() == 2,n);
final Node var=n.getFirstChild();
Preconditions.checkState(var.isName(),var);
final Node block=var.getNext();
declareVar(var);
scanVars(block);
return;
case SCRIPT:
inputId=n.getInputId();
Preconditions.checkNotNull(inputId);
break;
}
if (NodeUtil.isControlStructure(n) || NodeUtil.isStatementBlock(n)) {
for (Node child=n.getFirstChild(); child != null; ) {
Node next=child.getNext();
scanVars(child);
child=next;
}
}
}
