{
  IdentifierToken name=functionTree.name;
  Node newName;
  if (name != null) {
    newName=processNameWithInlineJSDoc(name);
  }
 else {
    if (!functionTree.isExpression) {
      errorReporter.error("unnamed function statement",sourceName,lineno(functionTree),"",charno(functionTree));
      return newNode(Token.EXPR_RESULT,Node.newNumber(0));
    }
    newName=newStringNode(Token.NAME,"");
    newName.setLineno(lineno(functionTree));
    newName.setCharno(charno(functionTree));
    maybeSetLength(newName,0);
  }
  Node node=newNode(Token.FUNCTION);
  node.addChildToBack(newName);
  node.addChildToBack(transform(functionTree.formalParameterList));
  Node bodyNode=transform(functionTree.functionBody);
  if (!bodyNode.isBlock()) {
    Preconditions.checkState(config.isIdeMode);
    bodyNode=IR.block();
  }
  parseDirectives(bodyNode);
  node.addChildToBack(bodyNode);
  return node;
}
