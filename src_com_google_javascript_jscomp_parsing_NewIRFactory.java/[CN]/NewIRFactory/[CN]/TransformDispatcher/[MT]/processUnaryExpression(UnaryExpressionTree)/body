{
  int type=transformUniaryTokenType(exprNode.operator.type);
  Node operand=transform(exprNode.operand);
  if (type == Token.NEG && operand.isNumber()) {
    operand.setDouble(-operand.getDouble());
    return operand;
  }
 else {
    if (type == Token.DELPROP && !(operand.isGetProp() || operand.isGetElem() || operand.isName())) {
      String msg="Invalid delete operand. Only properties can be deleted.";
      errorReporter.error(msg,sourceName,operand.getLineno(),"",0);
    }
 else     if (type == Token.INC || type == Token.DEC) {
      if (!validAssignmentTarget(operand)) {
        String msg=(type == Token.INC) ? "invalid increment target" : "invalid decrement target";
        errorReporter.error(msg,sourceName,operand.getLineno(),"",0);
      }
    }
    Node node=newNode(type,operand);
    return node;
  }
}
