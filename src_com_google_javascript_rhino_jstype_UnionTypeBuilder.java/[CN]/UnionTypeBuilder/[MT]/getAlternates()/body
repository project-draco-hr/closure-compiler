{
  JSType specialCaseType=reduceAlternatesWithoutUnion();
  if (specialCaseType != null) {
    return ImmutableList.of(specialCaseType);
  }
  JSType wildcard=getNativeWildcardType();
  if (wildcard != null && containsVoidType) {
    return ImmutableList.of(wildcard,registry.getNativeType(VOID_TYPE));
  }
  return Collections.unmodifiableList(alternates);
}
