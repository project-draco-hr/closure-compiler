{
  Preconditions.checkArgument(functionName != null);
  final Node[] foundNode=new Node[1];
  AbstractPostOrderCallback findFunction=new AbstractPostOrderCallback(){
    @Override public void visit(    NodeTraversal t,    Node n,    Node parent){
      if (n.isFunction() && functionName.equals(NodeUtil.getFunctionName(n))) {
        foundNode[0]=n;
      }
    }
  }
;
  NodeTraversal.traverseEs6(lastCompiler,lastCompiler.jsRoot,findFunction);
  return foundNode[0];
}
