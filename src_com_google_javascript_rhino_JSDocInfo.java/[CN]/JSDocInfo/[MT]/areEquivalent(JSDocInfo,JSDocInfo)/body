{
  if (jsDoc1 == null && jsDoc2 == null) {
    return true;
  }
  if (jsDoc1 == null || jsDoc2 == null) {
    return false;
  }
  if (!Objects.equals(jsDoc1.getParameterNames(),jsDoc2.getParameterNames())) {
    return false;
  }
  for (  String param : jsDoc1.getParameterNames()) {
    if (!Objects.equals(jsDoc1.getParameterType(param),jsDoc2.getParameterType(param))) {
      return false;
    }
  }
  if (jsDoc1.getMarkers().size() != jsDoc2.getMarkers().size()) {
    return false;
  }
  Iterator<Marker> it1=jsDoc1.getMarkers().iterator();
  Iterator<Marker> it2=jsDoc2.getMarkers().iterator();
  while (it1.hasNext()) {
    if (!Marker.areEquivalent(it1.next(),it2.next())) {
      return false;
    }
  }
  return Objects.equals(jsDoc1.getAuthors(),jsDoc2.getAuthors()) && Objects.equals(jsDoc1.getBaseType(),jsDoc2.getBaseType()) && Objects.equals(jsDoc1.getBlockDescription(),jsDoc2.getBlockDescription())&& Objects.equals(jsDoc1.getFileOverview(),jsDoc2.getFileOverview())&& Objects.equals(jsDoc1.getImplementedInterfaces(),jsDoc2.getImplementedInterfaces())&& Objects.equals(jsDoc1.getEnumParameterType(),jsDoc2.getEnumParameterType())&& Objects.equals(jsDoc1.getExtendedInterfaces(),jsDoc2.getExtendedInterfaces())&& Objects.equals(jsDoc1.getLendsName(),jsDoc2.getLendsName())&& Objects.equals(jsDoc1.getLicense(),jsDoc2.getLicense())&& Objects.equals(jsDoc1.getMeaning(),jsDoc2.getMeaning())&& Objects.equals(jsDoc1.getModifies(),jsDoc2.getModifies())&& Objects.equals(jsDoc1.getOriginalCommentString(),jsDoc2.getOriginalCommentString())&& Objects.equals(jsDoc1.getPropertyBitField(),jsDoc2.getPropertyBitField())&& Objects.equals(jsDoc1.getReferences(),jsDoc2.getReferences())&& Objects.equals(jsDoc1.getReturnDescription(),jsDoc2.getReturnDescription())&& Objects.equals(jsDoc1.getReturnType(),jsDoc2.getReturnType())&& Objects.equals(jsDoc1.getSuppressions(),jsDoc2.getSuppressions())&& Objects.equals(jsDoc1.getTemplateTypeNames(),jsDoc2.getTemplateTypeNames())&& Objects.equals(jsDoc1.getThisType(),jsDoc2.getThisType())&& Objects.equals(jsDoc1.getThrownTypes(),jsDoc2.getThrownTypes())&& Objects.equals(jsDoc1.getTypedefType(),jsDoc2.getTypedefType())&& Objects.equals(jsDoc1.getType(),jsDoc2.getType())&& Objects.equals(jsDoc1.getVersion(),jsDoc2.getVersion())&& Objects.equals(jsDoc1.getVisibility(),jsDoc2.getVisibility())&& jsDoc1.bitset == jsDoc2.bitset;
}
