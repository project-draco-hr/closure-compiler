{
  Compiler compiler=new Compiler();
  CompilerOptions options=createNewFlagBasedOptions();
  options.setIdeMode(true);
  final boolean[] before=new boolean[1];
  final boolean[] after=new boolean[1];
  options.addCustomPass(CustomPassExecutionTime.BEFORE_OPTIMIZATIONS,new CompilerPass(){
    @Override public void process(    Node externs,    Node root){
      before[0]=true;
    }
  }
);
  options.addCustomPass(CustomPassExecutionTime.BEFORE_OPTIMIZATION_LOOP,new CompilerPass(){
    @Override public void process(    Node externs,    Node root){
      after[0]=true;
    }
  }
);
  String js="var x = 1;";
  List<SourceFile> inputs=ImmutableList.of(SourceFile.fromCode("testcode",js));
  compiler.compile(EMPTY_EXTERNS,inputs,options);
  assertTrue(before[0]);
  assertFalse(after[0]);
}
