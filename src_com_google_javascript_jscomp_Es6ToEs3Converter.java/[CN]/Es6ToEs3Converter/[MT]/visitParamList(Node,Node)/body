{
  Node insertSpot=null;
  Node block=function.getLastChild();
  for (int i=0; i < paramList.getChildCount(); i++) {
    Node param=paramList.getChildAtIndex(i);
    if (param.hasChildren()) {
      param.setOptionalArg(true);
      Node defaultValue=param.removeFirstChild();
      Node name=IR.name(param.getString());
      Node undefined=IR.name("undefined");
      Node stm=IR.exprResult(IR.and(IR.sheq(name,undefined),IR.assign(name.cloneNode(),defaultValue)));
      block.addChildAfter(stm.useSourceInfoIfMissingFromForTree(param),insertSpot);
      insertSpot=stm;
      compiler.reportCodeChange();
    }
 else     if (param.isRest()) {
      param.setType(Token.NAME);
      param.setVarArgs(true);
      Node newArr=IR.exprResult(IR.assign(IR.name(param.getString()),IR.call(IR.getprop(IR.getprop(IR.arraylit(),IR.string("slice")),IR.string("apply")),IR.name("arguments"),IR.number(i))));
      block.addChildAfter(newArr.useSourceInfoIfMissingFromForTree(param),insertSpot);
      compiler.reportCodeChange();
    }
  }
}
