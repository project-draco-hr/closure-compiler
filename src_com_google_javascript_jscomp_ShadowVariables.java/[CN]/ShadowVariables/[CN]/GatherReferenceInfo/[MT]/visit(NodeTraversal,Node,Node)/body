{
  if (!NodeUtil.isReferenceName(n)) {
    return;
  }
  if (t.inGlobalScope()) {
    return;
  }
  Scope scope=t.getScope();
  Var var=scope.getVar(n.getString());
  if (var == null) {
    return;
  }
  if (var.getScope().isGlobal()) {
    return;
  }
  if (var.getScope() != scope) {
    for (Scope s=scope; s != var.getScope() && s.isLocal(); s=s.getParent()) {
      scopeUpRefMap.put(s.getRootNode(),var.name);
    }
  }
 else {
    scopeUpRefMap.put(t.getScopeRoot(),var.name);
  }
  if (scope.isFunctionScope() && var.getScope() == scope) {
    scopeUpRefMap.put(scope.getRootNode().getLastChild(),var.name);
  }
  varToNameUsage.put(var,new Reference(n,scope));
}
