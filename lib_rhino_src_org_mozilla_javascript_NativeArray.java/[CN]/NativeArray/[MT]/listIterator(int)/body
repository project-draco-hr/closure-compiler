{
  long longLen=length;
  if (longLen > Integer.MAX_VALUE) {
    throw new IllegalStateException();
  }
  final int len=(int)longLen;
  if (start < 0 || start > len) {
    throw new IndexOutOfBoundsException("Index: " + start);
  }
  return new ListIterator(){
    int cursor=start;
    public boolean hasNext(){
      return cursor < len;
    }
    public Object next(){
      if (cursor == len) {
        throw new NoSuchElementException();
      }
      return get(cursor++);
    }
    public boolean hasPrevious(){
      return cursor > 0;
    }
    public Object previous(){
      if (cursor == 0) {
        throw new NoSuchElementException();
      }
      return get(--cursor);
    }
    public int nextIndex(){
      return cursor;
    }
    public int previousIndex(){
      return cursor - 1;
    }
    public void remove(){
      throw new UnsupportedOperationException();
    }
    public void add(    Object o){
      throw new UnsupportedOperationException();
    }
    public void set(    Object o){
      throw new UnsupportedOperationException();
    }
  }
;
}
