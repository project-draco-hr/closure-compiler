{
  int id;
  L0: {
    id=0;
    String X=null;
    int c;
    L: switch (s.length()) {
case 3:
      c=s.charAt(0);
    if (c == 'm') {
      if (s.charAt(2) == 'p' && s.charAt(1) == 'a') {
        id=Id_map;
        break L0;
      }
    }
 else     if (c == 'p') {
      if (s.charAt(2) == 'p' && s.charAt(1) == 'o') {
        id=Id_pop;
        break L0;
      }
    }
  break L;
case 4:
switch (s.charAt(2)) {
case 'i':
  X="join";
id=Id_join;
break L;
case 'm':
X="some";
id=Id_some;
break L;
case 'r':
X="sort";
id=Id_sort;
break L;
case 's':
X="push";
id=Id_push;
break L;
}
break L;
case 5:
c=s.charAt(1);
if (c == 'h') {
X="shift";
id=Id_shift;
}
 else if (c == 'l') {
X="slice";
id=Id_slice;
}
 else if (c == 'v') {
X="every";
id=Id_every;
}
break L;
case 6:
c=s.charAt(0);
if (c == 'c') {
X="concat";
id=Id_concat;
}
 else if (c == 'f') {
X="filter";
id=Id_filter;
}
 else if (c == 's') {
X="splice";
id=Id_splice;
}
 else if (c == 'r') {
X="reduce";
id=Id_reduce;
}
break L;
case 7:
switch (s.charAt(0)) {
case 'f':
X="forEach";
id=Id_forEach;
break L;
case 'i':
X="indexOf";
id=Id_indexOf;
break L;
case 'r':
X="reverse";
id=Id_reverse;
break L;
case 'u':
X="unshift";
id=Id_unshift;
break L;
}
break L;
case 8:
c=s.charAt(3);
if (c == 'o') {
X="toSource";
id=Id_toSource;
}
 else if (c == 't') {
X="toString";
id=Id_toString;
}
break L;
case 11:
c=s.charAt(0);
if (c == 'c') {
X="constructor";
id=Id_constructor;
}
 else if (c == 'l') {
X="lastIndexOf";
id=Id_lastIndexOf;
}
 else if (c == 'r') {
X="reduceRight";
id=Id_reduceRight;
}
break L;
case 14:
X="toLocaleString";
id=Id_toLocaleString;
break L;
}
if (X != null && X != s && !X.equals(s)) id=0;
}
return id;
}
