{
  scope=getTopLevelScope(scope);
  Function ctor=ScriptRuntime.getExistingCtor(cx,scope,"Array");
  Scriptable result=ctor.construct(cx,scope,ScriptRuntime.emptyArgs);
  if (thisObj instanceof NativeArray && result instanceof NativeArray) {
    NativeArray denseThis=(NativeArray)thisObj;
    NativeArray denseResult=(NativeArray)result;
    if (denseThis.denseOnly && denseResult.denseOnly) {
      boolean canUseDense=true;
      int length=(int)denseThis.length;
      for (int i=0; i < args.length && canUseDense; i++) {
        if (args[i] instanceof NativeArray) {
          final NativeArray arg=(NativeArray)args[i];
          canUseDense=arg.denseOnly;
          length+=arg.length;
        }
 else {
          length++;
        }
      }
      if (canUseDense && denseResult.ensureCapacity(length)) {
        System.arraycopy(denseThis.dense,0,denseResult.dense,0,(int)denseThis.length);
        int cursor=(int)denseThis.length;
        for (int i=0; i < args.length && canUseDense; i++) {
          if (args[i] instanceof NativeArray) {
            NativeArray arg=(NativeArray)args[i];
            System.arraycopy(arg.dense,0,denseResult.dense,cursor,(int)arg.length);
            cursor+=(int)arg.length;
          }
 else {
            denseResult.dense[cursor++]=args[i];
          }
        }
        denseResult.length=length;
        return result;
      }
    }
  }
  long length;
  long slot=0;
  if (ScriptRuntime.instanceOf(thisObj,ctor,cx)) {
    length=getLengthProperty(cx,thisObj);
    for (slot=0; slot < length; slot++) {
      Object temp=getRawElem(thisObj,slot);
      if (temp != NOT_FOUND) {
        setElem(cx,result,slot,temp);
      }
    }
  }
 else {
    setElem(cx,result,slot++,thisObj);
  }
  for (int i=0; i < args.length; i++) {
    if (ScriptRuntime.instanceOf(args[i],ctor,cx)) {
      Scriptable arg=(Scriptable)args[i];
      length=getLengthProperty(cx,arg);
      for (long j=0; j < length; j++, slot++) {
        Object temp=getRawElem(arg,j);
        if (temp != NOT_FOUND) {
          setElem(cx,result,slot,temp);
        }
      }
    }
 else {
      setElem(cx,result,slot++,args[i]);
    }
  }
  setLengthProperty(cx,result,slot);
  return result;
}
