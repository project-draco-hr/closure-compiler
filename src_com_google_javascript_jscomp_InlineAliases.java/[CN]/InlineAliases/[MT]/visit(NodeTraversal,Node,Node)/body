{
switch (n.getType()) {
case Token.VAR:
    if (n.getChildCount() == 1 && t.inGlobalScope()) {
      visitAliasDefinition(n.getFirstChild(),NodeUtil.getBestJSDocInfo(n.getFirstChild()));
    }
  break;
case Token.ASSIGN:
if (parent != null && parent.isExprResult() && t.inGlobalScope()) {
  visitAliasDefinition(n.getFirstChild(),n.getJSDocInfo());
}
break;
case Token.NAME:
case Token.GETPROP:
if (n.isQualifiedName() && aliases.containsKey(n.getQualifiedName())) {
String leftmostName=NodeUtil.getRootOfQualifiedName(n).getString();
Var v=t.getScope().getVar(leftmostName);
if (v != null && v.isLocal()) {
return;
}
Preconditions.checkState(!NodeUtil.isVarOrSimpleAssignLhs(n,parent));
parent.replaceChild(n,NodeUtil.newQName(compiler,aliases.get(n.getQualifiedName())).copyInformationFromForTree(n));
compiler.reportCodeChange();
}
break;
}
maybeRewriteJsdoc(n.getJSDocInfo());
}
