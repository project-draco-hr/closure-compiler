{
  this.random=random;
  items=new ArrayList<T>(pmf.size());
  weights=new ArrayList<Double>(pmf.size());
  double sum=0;
  for (  T item : pmf.keySet()) {
    double p=pmf.get(item);
    Preconditions.checkArgument(p >= 0);
    Preconditions.checkArgument(!Double.isInfinite(p));
    Preconditions.checkArgument(!Double.isNaN(p));
    weights.add(p);
    sum+=p;
    items.add(item);
  }
  for (int i=0; i < pmf.size(); i++) {
    weights.set(i,weights.get(i) / sum);
  }
}
