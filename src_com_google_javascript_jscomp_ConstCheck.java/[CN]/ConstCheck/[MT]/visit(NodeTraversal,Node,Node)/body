{
switch (n.getType()) {
case NAME:
    if (parent != null && parent.isVar()) {
      String name=n.getString();
      Var var=t.getScope().getVar(name);
      if (isConstant(var)) {
        if (n.isFromExterns()) {
          initializedConstants.add(var);
        }
 else         if (n.hasChildren()) {
          if (!initializedConstants.add(var)) {
            reportError(t,n,var,name);
          }
        }
      }
    }
  break;
case ASSIGN:
case ASSIGN_BITOR:
case ASSIGN_BITXOR:
case ASSIGN_BITAND:
case ASSIGN_LSH:
case ASSIGN_RSH:
case ASSIGN_URSH:
case ASSIGN_ADD:
case ASSIGN_SUB:
case ASSIGN_MUL:
case ASSIGN_DIV:
case ASSIGN_MOD:
{
  Node lhs=n.getFirstChild();
  if (lhs.isName()) {
    String name=lhs.getString();
    Var var=t.getScope().getVar(name);
    if (isConstant(var) && !initializedConstants.add(var)) {
      reportError(t,n,var,name);
    }
  }
  break;
}
case INC:
case DEC:
{
Node lhs=n.getFirstChild();
if (lhs.isName()) {
  String name=lhs.getString();
  Var var=t.getScope().getVar(name);
  if (isConstant(var)) {
    reportError(t,n,var,name);
  }
}
break;
}
default :
break;
}
}
