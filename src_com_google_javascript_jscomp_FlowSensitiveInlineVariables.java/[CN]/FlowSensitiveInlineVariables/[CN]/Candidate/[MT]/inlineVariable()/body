{
  Node defParent=def.getParent();
  Node useParent=use.getParent();
  if (def.isAssign()) {
    Node rhs=def.getLastChild();
    rhs.detachFromParent();
    Preconditions.checkState(defParent.isExprResult());
    while (defParent.getParent().isLabel()) {
      defParent=defParent.getParent();
    }
    defParent.detachFromParent();
    useParent.replaceChild(use,rhs);
  }
 else   if (defParent.isVar()) {
    Node rhs=def.getLastChild();
    def.removeChild(rhs);
    useParent.replaceChild(use,rhs);
  }
 else {
    throw new IllegalStateException("No other definitions can be inlined.");
  }
  compiler.reportCodeChange();
}
