{
  configuration="requirement: {\n" + "  type: BANNED_CODE_PATTERN\n" + "  value: '/** @param {string|String} a */"+ "function template(a) {a.blink}'\n"+ "  error_message: 'blink is annoying'\n"+ "}";
  String externs=EXTERNS + "String.prototype.blink;";
  testSame("/** @constructor */ function Foo() { this.blink = 1; }\n" + "var foo = new Foo();\n" + "foo.blink();");
  testSame(externs,"'foo'.blink;",CheckConformance.CONFORMANCE_VIOLATION,"Violation: blink is annoying");
  testSame(externs,"'foo'.blink();",CheckConformance.CONFORMANCE_VIOLATION,"Violation: blink is annoying");
  testSame(externs,"String('foo').blink();",CheckConformance.CONFORMANCE_VIOLATION,"Violation: blink is annoying");
  testSame(externs,"foo.blink();",CheckConformance.CONFORMANCE_POSSIBLE_VIOLATION,"Possible violation: blink is annoying\n" + "The type information available for this expression is too loose to ensure conformance.");
}
