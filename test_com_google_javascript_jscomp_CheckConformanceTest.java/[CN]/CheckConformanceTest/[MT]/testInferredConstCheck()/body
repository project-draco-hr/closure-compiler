{
  configuration=LINE_JOINER.join("requirement: {","  type: CUSTOM","  java_class: 'com.google.javascript.jscomp.ConformanceRules$InferredConstCheck'","  error_message: 'Failed to infer type of constant'","}");
  testSame("/** @const */ var x = 0;");
  testConformance(LINE_JOINER.join("/** @constructor */","function f() {","  /** @const */ this.foo = unknown;","}","var x = new f();"),CheckConformance.CONFORMANCE_VIOLATION);
  testConformance(LINE_JOINER.join("/** @constructor */","function f() {}","/** @this {f} */","var init_f = function() {","  /** @const */ this.foo = unknown;","};","var x = new f();"),CheckConformance.CONFORMANCE_VIOLATION);
  testConformance(LINE_JOINER.join("/** @constructor */","function f() {}","var init_f = function() {","  /** @const */ this.FOO = unknown;","};","var x = new f();"),CheckConformance.CONFORMANCE_VIOLATION);
  testConformance(LINE_JOINER.join("/** @constructor */","function f() {}","f.prototype.init_f = function() {","  /** @const */ this.FOO = unknown;","};","var x = new f();"),CheckConformance.CONFORMANCE_VIOLATION);
  testSame(LINE_JOINER.join("/** @constructor */","function f() {}","f.prototype.init_f = function() {","  /** @const {?} */ this.FOO = unknown;","};","var x = new f();"));
  testSame(LINE_JOINER.join("/** @const */","var ns = {};","/** @const */","ns.subns = ns.subns || {};"));
}
