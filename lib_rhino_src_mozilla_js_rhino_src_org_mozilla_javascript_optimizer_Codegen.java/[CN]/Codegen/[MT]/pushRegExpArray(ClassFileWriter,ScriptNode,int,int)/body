{
  int regexpCount=n.getRegexpCount();
  if (regexpCount == 0)   throw badTree();
  cfw.addPush(regexpCount);
  cfw.add(ByteCode.ANEWARRAY,"java/lang/Object");
  cfw.addALoad(contextArg);
  cfw.addInvoke(ByteCode.INVOKESTATIC,"org/mozilla/javascript/ScriptRuntime","checkRegExpProxy","(Lorg/mozilla/javascript/Context;" + ")Lorg/mozilla/javascript/RegExpProxy;");
  cfw.add(ByteCode.DUP);
  cfw.addALoad(contextArg);
  cfw.addInvoke(ByteCode.INVOKESTATIC,mainClassName,REGEXP_INIT_METHOD_NAME,REGEXP_INIT_METHOD_SIGNATURE);
  for (int i=0; i != regexpCount; ++i) {
    cfw.add(ByteCode.DUP2);
    cfw.addALoad(contextArg);
    cfw.addALoad(scopeArg);
    cfw.add(ByteCode.GETSTATIC,mainClassName,getCompiledRegexpName(n,i),"Ljava/lang/Object;");
    cfw.addInvoke(ByteCode.INVOKEINTERFACE,"org/mozilla/javascript/RegExpProxy","wrapRegExp","(Lorg/mozilla/javascript/Context;" + "Lorg/mozilla/javascript/Scriptable;" + "Ljava/lang/Object;"+ ")Lorg/mozilla/javascript/Scriptable;");
    cfw.addPush(i);
    cfw.add(ByteCode.SWAP);
    cfw.add(ByteCode.AASTORE);
  }
  cfw.add(ByteCode.POP);
}
