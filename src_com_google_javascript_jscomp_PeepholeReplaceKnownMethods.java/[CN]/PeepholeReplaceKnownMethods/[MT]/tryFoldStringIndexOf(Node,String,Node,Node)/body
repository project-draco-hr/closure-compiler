{
  Preconditions.checkArgument(n.isCall());
  Preconditions.checkArgument(lstringNode.isString());
  String lstring=NodeUtil.getStringValue(lstringNode);
  boolean isIndexOf=functionName.equals("indexOf");
  Node secondArg=firstArg.getNext();
  String searchValue=NodeUtil.getStringValue(firstArg);
  if (searchValue == null) {
    return n;
  }
  int fromIndex=isIndexOf ? 0 : lstring.length();
  if (secondArg != null) {
    if (secondArg.getNext() != null || !secondArg.isNumber()) {
      return n;
    }
 else {
      fromIndex=(int)secondArg.getDouble();
    }
  }
  int indexVal=isIndexOf ? lstring.indexOf(searchValue,fromIndex) : lstring.lastIndexOf(searchValue,fromIndex);
  Node newNode=Node.newNumber(indexVal);
  n.getParent().replaceChild(n,newNode);
  reportCodeChange();
  return newNode;
}
