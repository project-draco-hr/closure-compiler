{
  Callable function;
  if (target instanceof Callable) {
    function=(Callable)target;
  }
 else {
    Scriptable s=(Scriptable)target;
    String methodName=method.getName();
    Object value=ScriptableObject.getProperty(s,methodName);
    if (value == ScriptableObject.NOT_FOUND) {
      Context.reportWarning(ScriptRuntime.getMessage1("msg.undefined.function.interface",methodName));
      Class<?> resultType=method.getReturnType();
      if (resultType == Void.TYPE) {
        return null;
      }
 else {
        return Context.jsToJava(null,resultType);
      }
    }
    if (!(value instanceof Callable)) {
      throw Context.reportRuntimeError1("msg.not.function.interface",methodName);
    }
    function=(Callable)value;
  }
  WrapFactory wf=cx.getWrapFactory();
  if (args == null) {
    args=ScriptRuntime.emptyArgs;
  }
 else {
    for (int i=0, N=args.length; i != N; ++i) {
      Object arg=args[i];
      if (!(arg instanceof String || arg instanceof Number || arg instanceof Boolean)) {
        args[i]=wf.wrap(cx,topScope,arg,null);
      }
    }
  }
  Scriptable thisObj=wf.wrapAsJavaObject(cx,topScope,thisObject,null);
  Object result=function.call(cx,topScope,thisObj,args);
  Class<?> javaResultType=method.getReturnType();
  if (javaResultType == Void.TYPE) {
    result=null;
  }
 else {
    result=Context.jsToJava(result,javaResultType);
  }
  return result;
}
