{
  test("var {a: b, c: d} = foo();",LINE_JOINER.join("var $jscomp$destructuring$var0 = foo();","var b = $jscomp$destructuring$var0.a;","var d = $jscomp$destructuring$var0.c;"));
  assertThat(getInjectedLibraries()).isEmpty();
  test("var {a,b} = foo();",LINE_JOINER.join("var $jscomp$destructuring$var0 = foo();","var a = $jscomp$destructuring$var0.a;","var b = $jscomp$destructuring$var0.b;"));
  test("let {a,b} = foo();",LINE_JOINER.join("var $jscomp$destructuring$var0 = foo();","let a = $jscomp$destructuring$var0.a;","let b = $jscomp$destructuring$var0.b;"));
  test("const {a,b} = foo();",LINE_JOINER.join("/** @const */ var $jscomp$destructuring$var0 = foo();","const a = $jscomp$destructuring$var0.a;","const b = $jscomp$destructuring$var0.b;"));
  test("var x; ({a: x} = foo());",LINE_JOINER.join("var x;","var $jscomp$destructuring$var0 = foo();","x = $jscomp$destructuring$var0.a;"));
}
