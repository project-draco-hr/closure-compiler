{
  test("function f({a: b}) {}",LINE_JOINER.join("function f($jscomp$destructuring$var0) {","  var $jscomp$destructuring$var1 = $jscomp$destructuring$var0","  var b = $jscomp$destructuring$var1.a","}"));
  test("function f({a}) {}",LINE_JOINER.join("function f($jscomp$destructuring$var0) {","  var $jscomp$destructuring$var1 = $jscomp$destructuring$var0","  var a = $jscomp$destructuring$var1.a","}"));
  test("function f({k: {subkey : a}}) {}",LINE_JOINER.join("function f($jscomp$destructuring$var0) {","  var $jscomp$destructuring$var1 = $jscomp$destructuring$var0","  var $jscomp$destructuring$var2 = $jscomp$destructuring$var1.k;","  var a = $jscomp$destructuring$var2.subkey;","}"));
  test("function f({k: [x, y, z]}) {}",LINE_JOINER.join("function f($jscomp$destructuring$var0) {","  var $jscomp$destructuring$var1 = $jscomp$destructuring$var0","  var $jscomp$destructuring$var2 =","      $jscomp.makeIterator($jscomp$destructuring$var1.k);","  var x = $jscomp$destructuring$var2.next().value;","  var y = $jscomp$destructuring$var2.next().value;","  var z = $jscomp$destructuring$var2.next().value;","}"));
  assertThat(getInjectedLibraries()).containsExactly("es6_runtime");
  test("function f({key: x = 5}) {}",LINE_JOINER.join("function f($jscomp$destructuring$var0) {","  var $jscomp$destructuring$var1 = $jscomp$destructuring$var0","  var x = $jscomp$destructuring$var1.key === undefined ?","      5 : $jscomp$destructuring$var1.key","}"));
  test("function f({[key]: x = 5}) {}",LINE_JOINER.join("function f($jscomp$destructuring$var0) {","  var $jscomp$destructuring$var1 = $jscomp$destructuring$var0","  var $jscomp$destructuring$var2 = $jscomp$destructuring$var1[key]","  var x = $jscomp$destructuring$var2 === undefined ?","      5 : $jscomp$destructuring$var2","}"));
  test("function f({x = 5}) {}",LINE_JOINER.join("function f($jscomp$destructuring$var0) {","  var $jscomp$destructuring$var1 = $jscomp$destructuring$var0","  var x = $jscomp$destructuring$var1.x === undefined ?","      5 : $jscomp$destructuring$var1.x","}"));
}
