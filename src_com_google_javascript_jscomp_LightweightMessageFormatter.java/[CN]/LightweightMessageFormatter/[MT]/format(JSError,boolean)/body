{
  SourceExcerptProvider source=getSource();
  String sourceName=error.sourceName;
  int lineNumber=error.lineNumber;
  int charno=error.getCharno();
  StringBuilder b=new StringBuilder();
  StringBuilder boldLine=new StringBuilder();
  String nonMappedPosition=formatPosition(sourceName,lineNumber);
  OriginalMapping mapping=source == null ? null : source.getSourceMapping(error.sourceName,error.lineNumber,error.getCharno());
  if (mapping == null) {
    boldLine.append(nonMappedPosition);
  }
 else {
    sourceName=mapping.getOriginalFile();
    lineNumber=mapping.getLineNumber();
    charno=mapping.getColumnPosition();
    b.append(nonMappedPosition);
    b.append("\nOriginally at:\n");
    boldLine.append(formatPosition(sourceName,lineNumber));
  }
  String sourceExcerpt=source == null ? null : excerpt.get(source,sourceName,lineNumber,excerptFormatter);
  boldLine.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));
  boldLine.append(" - ");
  boldLine.append(error.description);
  b.append(maybeEmbolden(boldLine.toString()));
  b.append('\n');
  if (sourceExcerpt != null) {
    b.append(sourceExcerpt);
    b.append('\n');
    if (excerpt.equals(LINE) && 0 <= charno && charno <= sourceExcerpt.length()) {
      for (int i=0; i < charno; i++) {
        char c=sourceExcerpt.charAt(i);
        if (Character.isWhitespace(c)) {
          b.append(c);
        }
 else {
          b.append(' ');
        }
      }
      b.append("^\n");
    }
  }
  return b.toString();
}
