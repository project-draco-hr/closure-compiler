{
  List<Node> ret=Lists.newArrayList();
  Node first=n.getFirstChild();
  if (first == null || !first.isQualifiedName()) {
    return ret;
  }
  String property=first.getQualifiedName();
  if (property.endsWith(".registerDisposable")) {
    Node base=first.getFirstChild();
    JSType baseType=base.getJSType();
    if (baseType != null && isPossiblySubtype(baseType,googDisposableType)) {
      ret.add(n.getLastChild());
    }
  }
  if (property.equals("goog.dispose")) {
    ret.add(n.getLastChild());
  }
  if (property.equals("goog.disposeAll")) {
    for (Node t=first.getNext(); t != null; t=t.getNext()) {
      ret.add(t);
    }
  }
  Node calledOn=n.getFirstChild().getFirstChild();
  if (property.endsWith(".dispose")) {
    ret.add(calledOn);
  }
  if (property.endsWith(".removeAll")) {
    if (calledOn != null) {
      JSType calledOnType=calledOn.getJSType();
      if (calledOnType != null && !calledOnType.isEmptyType() && !calledOnType.isUnknownType() && isPossiblySubtype(calledOnType,googEventsEventHandlerType)) {
        ret.add(calledOn);
      }
    }
  }
  Node possiblyArray=first.getFirstChild();
  if (possiblyArray != null) {
    JSType possiblyArrayType=possiblyArray.getJSType();
    if (possiblyArrayType != null && possiblyArrayType.isArrayType()) {
      ret.add(n.getLastChild());
    }
  }
  if (property.endsWith(".push") || property.contains(".add")) {
    for (Node t=first.getNext(); t != null; t=t.getNext()) {
      ret.add(t);
    }
  }
  return ret;
}
