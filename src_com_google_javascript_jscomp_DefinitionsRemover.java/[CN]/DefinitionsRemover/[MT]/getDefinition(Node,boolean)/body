{
  Node parent=n.getParent();
  if (parent == null) {
    return null;
  }
  if (NodeUtil.isVarDeclaration(n) && n.hasChildren()) {
    return new VarDefinition(n,isExtern);
  }
 else   if (parent.isFunction() && parent.getFirstChild() == n) {
    if (!NodeUtil.isFunctionExpression(parent)) {
      return new NamedFunctionDefinition(parent,isExtern);
    }
 else     if (!n.getString().isEmpty()) {
      return new FunctionExpressionDefinition(parent,isExtern);
    }
  }
 else   if (parent.isAssign() && parent.getFirstChild() == n) {
    return new AssignmentDefinition(parent,isExtern);
  }
 else   if (NodeUtil.isObjectLitKey(n)) {
    return new ObjectLiteralPropertyDefinition(parent,n,n.getFirstChild(),isExtern);
  }
 else   if (parent.isParamList()) {
    Node function=parent.getParent();
    return new FunctionArgumentDefinition(function,n,isExtern);
  }
  return null;
}
