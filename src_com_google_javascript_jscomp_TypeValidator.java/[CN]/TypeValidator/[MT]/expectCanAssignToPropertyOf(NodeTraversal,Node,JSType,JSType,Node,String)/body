{
  if (!leftType.isNoType() && !rightType.isSubtype(leftType)) {
    JSType ownerType=getJSType(owner);
    if (ownerType.isFunctionPrototypeType()) {
      FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
      if (ownerFn.isInterface() && rightType.isFunctionType() && leftType.isFunctionType()) {
        return true;
      }
    }
    mismatch(t,n,"assignment to property " + propName + " of "+ typeRegistry.getReadableTypeName(owner),rightType,leftType);
    return false;
  }
 else   if (!leftType.isNoType() && !rightType.isSubtypeWithoutStructuralTyping(leftType)) {
    recordStructuralInterfaceUses(rightType,leftType);
  }
  return true;
}
