{
  testExternChanges("declare namespace foo { export var i, j, k; }","/** @const */ var foo = {}; foo.i; foo.j; foo.k;");
  testExternChanges("declare namespace foo { export let i, j, k; }","/** @const */ var foo = {}; foo.i; foo.j; foo.k;");
  testExternChanges("declare namespace foo { export function f(); }","/** @const */ var foo = {}; foo.f = function() {};");
  testExternChanges("declare namespace foo { export interface I {} }","/** @const */ var foo = {}; /** @interface */ foo.I = class {};");
  testExternChanges("declare namespace foo { export interface I {} export class C implements I {} }",LINE_JOINER.join("/** @const */ var foo = {};","/** @interface */ foo.I = class {};","/** @implements {foo.I} */ foo.C = class {}"));
  testExternChanges("declare namespace foo { export class A {} export class B extends A {} }",LINE_JOINER.join("/** @const */ var foo = {};","foo.A = class {};","foo.B = class extends foo.A {};"));
  testExternChanges("declare namespace foo { export class C {} export var x: C; }",LINE_JOINER.join("/** @const */ var foo = {};","foo.C = class {};","/** @type {!foo.C} */ foo.x;"));
  testExternChanges("declare namespace foo { export interface J {} export interface I extends J {} }",LINE_JOINER.join("/** @const */ var foo = {};","/** @interface */ foo.J = class {};","/** @interface @extends {foo.J} */ foo.I = class {};"));
  testExternChanges("declare namespace foo { export enum E {} }","/** @const */ var foo = {}; /** @enum */ foo.E = {};");
  testExternChanges("declare namespace foo.bar {}","/** @const */ var foo = {}; /** @const */ foo.bar = {};");
  testExternChanges(LINE_JOINER.join("declare namespace foo { export namespace bax {} export namespace bay {} }","declare namespace foo { export namespace baz {} }"),LINE_JOINER.join("/** @const */ var foo = {}; /** @const */ foo.bax = {};","/** @const */ foo.bay = {}; /** @const */ foo.baz = {};"));
  testExternChanges(LINE_JOINER.join("declare namespace foo { export var x: Bar; }","declare namespace foo { export class Bar {} }"),"/** @const */ var foo = {}; /** @type {!foo.Bar} */ foo.x; foo.Bar = class {};");
}
