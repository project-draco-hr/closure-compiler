{
  String source="var x = 0;" + "var keyFn = function(v) { return (x+=1) };" + "var valueFn = function(v) { return v };"+ "goog.reflect.cache(externObj, \"foo\", valueFn, keyFn)";
  checkMarkedCalls(source,ImmutableList.<String>of());
  Node lastRoot=getLastCompiler().getRoot().getLastChild();
  Node call=findQualifiedNameNode("goog.reflect.cache",lastRoot).getParent();
  assertThat(call.isNoSideEffectsCall()).isFalse();
  assertThat(call.mayMutateGlobalStateOrThrow()).isTrue();
}
