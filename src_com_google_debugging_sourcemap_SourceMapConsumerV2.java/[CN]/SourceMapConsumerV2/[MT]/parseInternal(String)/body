{
  JSONObject sourceMapRoot=new JSONObject(contents);
  int version=sourceMapRoot.getInt("version");
  if (version != 2) {
    throw new SourceMapParseException("Unknown version: " + version);
  }
  String file=sourceMapRoot.getString("file");
  if (file.isEmpty()) {
    throw new SourceMapParseException("File entry is missing or empty");
  }
  int lineCount=sourceMapRoot.getInt("lineCount");
  lineMaps=sourceMapRoot.getJSONArray("lineMaps");
  if (lineCount != lineMaps.length()) {
    throw new SourceMapParseException("lineMaps length does not match lineCount");
  }
  characterMap=Maps.newHashMap();
  JSONArray sources=sourceMapRoot.getJSONArray("sources");
  JSONArray names=sourceMapRoot.has("names") ? sourceMapRoot.getJSONArray("names") : null;
  JSONArray jsonMappings=sourceMapRoot.getJSONArray("mappings");
  mappings=Lists.newArrayListWithCapacity(lineCount);
  for (int i=0; i < jsonMappings.length(); i++) {
    JSONArray entry=jsonMappings.getJSONArray(i);
    String name=entry.optString(3,"");
    if (names != null) {
      try {
        int nameIndex=entry.getInt(3);
        name=names.getString(nameIndex);
      }
 catch (      JSONException e) {
      }
    }
    String sourceFile=sources.getString(entry.getInt(0));
    int lineNumber=entry.getInt(1);
    int column=entry.getInt(2);
    OriginalMapping.Builder builder=OriginalMapping.newBuilder().setOriginalFile(sourceFile).setLineNumber(lineNumber).setColumnPosition(column).setIdentifier(name);
    mappings.add(builder.build());
  }
}
