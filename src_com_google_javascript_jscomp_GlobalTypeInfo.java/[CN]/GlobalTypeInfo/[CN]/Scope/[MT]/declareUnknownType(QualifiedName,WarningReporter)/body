{
  if (qname.isIdentifier() || null == getNamespace(qname.getLeftmostName())) {
    String name=qname.getLeftmostName();
    if (!locals.containsKey(name)) {
      externs.put(name,JSType.UNKNOWN);
    }
    return;
  }
  Namespace leftmost=getNamespace(qname.getLeftmostName());
  QualifiedName props=qname.getAllButLeftmost();
  while (!props.isIdentifier() && !leftmost.hasSubnamespace(props.getAllButRightmost())) {
    props=props.getAllButRightmost();
  }
  Namespace ns=props.isIdentifier() ? leftmost : leftmost.getSubnamespace(props.getAllButRightmost());
  if (!ns.isNamespaceFinalized()) {
    String pname=props.getRightmostName();
    ns.addUndeclaredProperty(pname,null,JSType.UNKNOWN,false);
  }
 else {
    Preconditions.checkNotNull(ns.getConstDeclNode(),"Namespace %s was finalized incorrectly",ns.getName());
    warnings.add(JSError.make(ns.getConstDeclNode(),COULD_NOT_INFER_CONST_TYPE));
  }
}
