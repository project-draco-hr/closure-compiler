{
  Preconditions.checkArgument(declNode.isFunction() || declNode.isGetProp());
  Node parent=declNode.getParent();
  if (fnDoc == null && !NodeUtil.functionHasInlineJsdocs(declNode) && parent.isCall() && declNode != parent.getFirstChild()) {
    FunctionType calleeDeclType=getDeclaredFunctionTypeOfCalleeIfAny(parent.getFirstChild(),parentScope);
    if (calleeDeclType != null) {
      int index=parent.getIndexOfChild(declNode) - 1;
      JSType declTypeFromCallee=calleeDeclType.getFormalType(index);
      if (declTypeFromCallee != null) {
        DeclaredFunctionType t=computeFnDeclaredTypeFromCallee(declNode,declTypeFromCallee);
        if (t != null) {
          return t;
        }
      }
    }
  }
  RawNominalType ctorType=declNode.isFunction() ? nominaltypesByNode.get(declNode) : null;
  DeclaredFunctionType result=typeParser.getFunctionType(fnDoc,functionName,declNode,ctorType,ownerType,parentScope);
  if (ctorType != null) {
    ctorType.setCtorFunction(result.toFunctionType(),commonTypes.getFunctionType());
  }
  return result;
}
