{
  Node parent=declNode.getParent();
  Node maybeBind=parent.isCall() ? parent.getFirstChild() : parent;
  if (NodeUtil.isFunctionBind(maybeBind) && !NodeUtil.isGoogPartial(maybeBind)) {
    Node call=maybeBind.getParent();
    Bind bindComponents=convention.describeFunctionBind(call,true,false);
    JSType recvType=simpleInferExprType(bindComponents.thisValue);
    if (recvType == null) {
      return null;
    }
    DeclaredFunctionType allButRecvType=typeParser.getFunctionType(null,functionName,declNode,null,null,parentScope).functionType;
    return allButRecvType.withReceiverType(recvType.getNominalTypeIfSingletonObj());
  }
  if (parent.isCall() && declNode != parent.getFirstChild()) {
    DeclaredFunctionType calleeDeclType=getDeclaredFunctionTypeOfCalleeIfAny(parent.getFirstChild(),parentScope);
    if (calleeDeclType != null && !calleeDeclType.isGeneric()) {
      int index=parent.getIndexOfChild(declNode) - 1;
      JSType declTypeFromCallee=calleeDeclType.getFormalType(index);
      if (declTypeFromCallee != null) {
        DeclaredFunctionType t=computeFnDeclaredTypeFromCallee(declNode,declTypeFromCallee);
        if (t != null) {
          return t;
        }
      }
    }
  }
  return null;
}
