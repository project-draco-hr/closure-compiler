{
  Preconditions.checkState(n.isOr() || n.isAnd());
  JSType lhs=simpleInferExprType(n.getFirstChild());
  if (lhs == null) {
    return null;
  }
  JSType rhs=simpleInferExprType(n.getSecondChild());
  if (rhs == null) {
    return null;
  }
  if (lhs.equals(rhs)) {
    return lhs;
  }
  if (n.isAnd()) {
    return JSType.join(lhs.specialize(commonTypes.FALSY),rhs);
  }
  return JSType.join(lhs.specialize(commonTypes.TRUTHY),rhs);
}
