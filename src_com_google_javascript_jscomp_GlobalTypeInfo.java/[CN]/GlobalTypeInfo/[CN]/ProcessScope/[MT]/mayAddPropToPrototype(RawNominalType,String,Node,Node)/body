{
  NTIScope methodScope=null;
  DeclaredFunctionType methodType=null;
  JSType propDeclType=null;
  JSDocInfo jsdoc=NodeUtil.getBestJSDocInfo(defSite);
  if (initializer != null && initializer.isFunction()) {
    methodScope=visitFunctionLate(initializer,rawType);
    methodType=methodScope.getDeclaredFunctionType();
    if (defSite.isGetterDef()) {
      pname=JSType.createGetterPropName(pname);
    }
 else     if (defSite.isSetterDef()) {
      pname=JSType.createSetterPropName(pname);
    }
  }
 else   if (jsdoc != null && jsdoc.containsFunctionDeclaration() && !defSite.isStringKey()) {
    methodType=computeFnDeclaredType(jsdoc,pname,defSite,rawType,currentScope);
  }
  if (jsdoc != null && jsdoc.hasType()) {
    propDeclType=typeParser.getDeclaredTypeOfNode(jsdoc,rawType,currentScope);
  }
 else   if (methodType != null) {
    propDeclType=commonTypes.fromFunctionType(methodType.toFunctionType());
  }
  if (defSite.isGetterDef()) {
    FunctionType ft=propDeclType.getFunTypeIfSingletonObj();
    if (ft != null) {
      propDeclType=ft.getReturnType();
    }
  }
  propertyDefs.put(rawType,pname,new PropertyDef(defSite,methodType,methodScope));
  boolean isConst=isConst(defSite);
  if (propDeclType != null || isConst) {
    if (mayWarnAboutExistingProp(rawType,pname,defSite,propDeclType)) {
      return;
    }
    if (propDeclType == null) {
      propDeclType=mayInferFromRhsIfConst(defSite);
    }
    rawType.addProtoProperty(pname,defSite,propDeclType,isConst);
    if (defSite.isGetProp()) {
      defSite.putBooleanProp(Node.ANALYZED_DURING_GTI,true);
      if (isConst) {
        defSite.putBooleanProp(Node.CONSTANT_PROPERTY_DEF,true);
      }
    }
  }
 else {
    rawType.addUndeclaredProtoProperty(pname,defSite);
  }
}
