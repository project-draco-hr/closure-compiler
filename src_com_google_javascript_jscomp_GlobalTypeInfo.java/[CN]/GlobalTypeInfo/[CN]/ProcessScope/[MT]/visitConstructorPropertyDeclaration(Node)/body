{
  Preconditions.checkArgument(getProp.isGetProp());
  String ctorName=getProp.getFirstChild().getQualifiedName();
  Preconditions.checkState(currentScope.isLocalFunDef(ctorName));
  RawNominalType classType=currentScope.getNominalType(ctorName);
  String pname=getProp.getLastChild().getString();
  JSDocInfo jsdoc=NodeUtil.getBestJSDocInfo(getProp);
  JSType propDeclType=getTypeDeclarationFromJsdoc(jsdoc,currentScope);
  boolean isConstant=NodeUtil.hasConstAnnotation(getProp);
  if (propDeclType != null || isConstant) {
    JSType previousPropType=classType.getCtorPropDeclaredType(pname);
    if (classType.hasCtorProp(pname) && previousPropType != null && !suppressDupPropWarning(jsdoc,propDeclType,previousPropType)) {
      warnings.add(JSError.make(getProp,REDECLARED_PROPERTY,pname,classType.toString()));
      return;
    }
    if (isConstant && !mayWarnAboutNoInit(getProp) && propDeclType == null) {
      propDeclType=inferConstTypeFromRhs(getProp);
    }
    classType.addCtorProperty(pname,propDeclType,isConstant);
  }
 else {
    classType.addUndeclaredCtorProperty(pname);
  }
}
