{
  Preconditions.checkArgument(getProp.isGetProp());
  if (isNamedType(getProp)) {
    return;
  }
  String ctorName=getProp.getFirstChild().getQualifiedName();
  QualifiedName ctorQname=QualifiedName.fromNode(getProp.getFirstChild());
  Preconditions.checkState(currentScope.isLocalFunDef(ctorName));
  RawNominalType classType=currentScope.getNominalType(ctorQname);
  String pname=getProp.getLastChild().getString();
  JSDocInfo jsdoc=NodeUtil.getBestJSDocInfo(getProp);
  JSType propDeclType=getDeclaredTypeOfNode(jsdoc,currentScope);
  boolean isConst=isConst(getProp);
  if (propDeclType != null || isConst) {
    JSType previousPropType=classType.getCtorPropDeclaredType(pname);
    if (classType.hasCtorProp(pname) && previousPropType != null && !suppressDupPropWarning(jsdoc,propDeclType,previousPropType)) {
      warnings.add(JSError.make(getProp,REDECLARED_PROPERTY,pname,classType.toString()));
      return;
    }
    if (isConst && !mayWarnAboutNoInit(getProp) && propDeclType == null) {
      propDeclType=inferConstTypeFromRhs(getProp);
    }
    classType.addCtorProperty(pname,getProp,propDeclType,isConst);
    getProp.putBooleanProp(Node.ANALYZED_DURING_GTI,true);
    if (isConst) {
      getProp.putBooleanProp(Node.CONSTANT_PROPERTY_DEF,true);
    }
  }
 else {
    classType.addUndeclaredCtorProperty(pname,getProp);
  }
}
