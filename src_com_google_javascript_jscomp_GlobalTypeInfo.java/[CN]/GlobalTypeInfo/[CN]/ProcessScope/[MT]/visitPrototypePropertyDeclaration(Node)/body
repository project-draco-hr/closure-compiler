{
  Preconditions.checkArgument(getProp.isGetProp());
  Node parent=getProp.getParent();
  Node initializer=parent.isAssign() ? parent.getLastChild() : null;
  Node ctorNameNode=NodeUtil.getPrototypeClassName(getProp);
  QualifiedName ctorQname=QualifiedName.fromNode(ctorNameNode);
  RawNominalType rawType=currentScope.getNominalType(ctorQname);
  if (rawType == null) {
    if (initializer != null && initializer.isFunction()) {
      visitFunctionLate(initializer,null);
    }
    return;
  }
  if (!currentScope.isDefined(ctorNameNode)) {
    warnings.add(JSError.make(getProp,CTOR_IN_DIFFERENT_SCOPE));
    if (initializer != null && initializer.isFunction()) {
      visitFunctionLate(initializer,rawType);
    }
    return;
  }
  String pname=NodeUtil.getPrototypePropertyName(getProp);
  mayAddPropToPrototype(rawType,pname,getProp,initializer);
}
