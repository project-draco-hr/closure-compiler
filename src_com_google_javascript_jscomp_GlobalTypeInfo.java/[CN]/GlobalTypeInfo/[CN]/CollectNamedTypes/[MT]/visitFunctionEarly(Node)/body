{
  JSDocInfo fnDoc=NodeUtil.getBestJSDocInfo(fn);
  Node nameNode=NodeUtil.getNameNode(fn);
  String internalName=createFunctionInternalName(fn,nameNode);
  boolean isRedeclaration;
  if (nameNode == null || !nameNode.isQualifiedName()) {
    isRedeclaration=false;
  }
 else   if (nameNode.isName()) {
    isRedeclaration=currentScope.isDefinedLocally(nameNode.getString(),false);
  }
 else {
    Preconditions.checkState(nameNode.isGetProp(),"Expected getprop, found %s",nameNode.getToken());
    isRedeclaration=currentScope.isDefined(nameNode);
    if (isRedeclaration && fnDoc != null) {
      nameNode.getParent().putBooleanProp(Node.ANALYZED_DURING_GTI,true);
      warnings.add(JSError.make(nameNode,REDECLARED_PROPERTY,nameNode.getLastChild().getString(),nameNode.getFirstChild().getQualifiedName()));
    }
  }
  NTIScope fnScope=new NTIScope(fn,this.currentScope,collectFormals(fn,fnDoc),commonTypes);
  if (!fn.isFromExterns()) {
    scopes.add(fnScope);
  }
  this.currentScope.addLocalFunDef(internalName,fnScope);
  maybeRecordNominalType(fn,nameNode,fnDoc,isRedeclaration);
}
