{
switch (n.getType()) {
case Token.FUNCTION:
{
      visitFunctionEarly(n);
      break;
    }
case Token.VAR:
{
    Node nameNode=n.getFirstChild();
    if (NodeUtil.isNamespaceDecl(nameNode)) {
      visitNamespace(nameNode);
    }
 else     if (NodeUtil.isTypedefDecl(nameNode)) {
      visitTypedef(nameNode);
    }
 else     if (NodeUtil.isEnumDecl(nameNode)) {
      visitEnum(nameNode);
    }
    break;
  }
case Token.EXPR_RESULT:
{
  Node expr=n.getFirstChild();
  if (expr.isGetProp() || expr.isAssign() && expr.getFirstChild().isGetProp()) {
    Node getProp=expr.isGetProp() ? expr : expr.getFirstChild();
    if (NodeUtil.isPrototypeProperty(getProp) || NodeUtil.referencesThis(getProp)) {
      return;
    }
    if (NodeUtil.isNamespaceDecl(getProp) || NodeUtil.isTypedefDecl(getProp) || NodeUtil.isEnumDecl(getProp)) {
      processQualifiedDefinition(getProp);
    }
  }
  break;
}
}
}
