{
  String qname=NodeUtil.getFunctionName(fn);
  if (qname == null || !TypeUtils.isIdentifier(qname)) {
    anonFunNames.put(fn,"%anon_fun" + freshId);
    freshId++;
  }
  JSDocInfo fnDoc=NodeUtil.getFunctionJSDocInfo(fn);
  if (fnDoc != null && (fnDoc.isConstructor() || fnDoc.isInterface())) {
    ImmutableList<String> templateVars=fnDoc.getTemplateTypeNames();
    RawNominalType rawNominalType=fnDoc.isInterface() ? RawNominalType.makeInterface(qname,templateVars) : RawNominalType.makeClass(qname,templateVars);
    freshId++;
    nominaltypesByNode.put(fn,rawNominalType);
    parentScope.addNominalType(qname,rawNominalType);
  }
}
