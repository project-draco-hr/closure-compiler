{
  super.enableAstValidation(false);
  final CompilerTestCase testcase=this;
  testSetupPass=new CompilerPass(){
    void visit(    Node n){
      if (n.isName() && !n.getString().isEmpty() && n.getParent().isFunction()) {
        n.setString("");
        testcase.getLastCompiler().reportCodeChange();
      }
      for (      Node c : n.children()) {
        visit(c);
      }
    }
    @Override public void process(    Node externs,    Node root){
      visit(root);
    }
  }
;
  test("function f() {};",null,VarCheck.INVALID_FUNCTION_DECL);
  test("if (true) { function f(){}; }",null,VarCheck.INVALID_FUNCTION_DECL);
}
