{
  test(LINE_JOINER.join("/** @polymerBehavior */","var FunBehavior = {","  properties: {","    /** @type {boolean} */","    isFun: {","      type: Boolean,","      value: true,","    },","    funObject: {","      type: Object,","      value: function() { return {fun: this.isFun }; },","    },","    funArray: {","      type: Array,","      value: function() { return [this.isFun]; },","    },","  },","};","var A = Polymer({","  is: 'x-element',","  properties: {","    name: String,","  },","  behaviors: [ FunBehavior ],","});"),LINE_JOINER.join("/** @polymerBehavior @nocollapse */","var FunBehavior = {","  properties: {","    isFun: {","      type: Boolean,","      value: true,","    },","    funObject: {","      type: Object,","      /** @suppress {checkTypes|globalThis} */","      value: function() { return {fun: this.isFun }; },","    },","    funArray: {","      type: Array,","      /** @suppress {checkTypes|globalThis} */","      value: function() { return [this.isFun]; },","    },","  },","};","/** @constructor @extends {PolymerElement} @implements {PolymerAInterface}*/","var A = function() {};","/** @type {boolean} */","A.prototype.isFun;","/** @type {!Object} */","A.prototype.funObject;","/** @type {!Array} */","A.prototype.funArray;","/** @type {string} */","A.prototype.name;","A = Polymer(/** @lends {A.prototype} */ {","  is: 'x-element',","  properties: {","    name: String,","  },","  behaviors: [ FunBehavior ],","});"));
}
