{
  String behaviors=Joiner.on("\n").join("var FunBehavior = {","  properties: {","    isFun: Boolean","  },","  /** @param {string} funAmount */","  doSomethingFun: function(funAmount) { alert('Something ' + funAmount + ' fun!'); },","  /** @override */","  created: function() {}","};","var SuperCoolBehaviors = [FunBehavior, {","  properties: {","    howRad: Number","  },","  /** @param {number} radAmount */","  doSomethingRad: function(radAmount) { alert('Something ' + radAmount + ' rad!'); },","  /** @override */","  ready: function() {}","}];");
  test(behaviors + Joiner.on("\n").join("var A = Polymer({","  is: 'x-element',","  properties: {","    pets: {","      type: Array,","      notify: true,","    },","    name: String,","  },","  behaviors: [ SuperCoolBehaviors ],","});"),behaviors + Joiner.on("\n").join("/** @constructor @extends {PolymerElement} @export @implements {PolymerAInterface}*/","var A = function() {};","/** @type {!Array} @export */","A.prototype.pets;","/** @type {string} @export */","A.prototype.name;","/** @type {boolean} @export */","A.prototype.isFun;","/** @type {number} @export */","A.prototype.howRad;","/** @param {string} funAmount */","A.prototype.doSomethingFun = function(funAmount) {","  alert('Something ' + funAmount + ' fun!');","};","/** @param {number} radAmount */","A.prototype.doSomethingRad = function(radAmount) {","  alert('Something ' + radAmount + ' rad!');","};","A = Polymer(/** @lends {A.prototype} */ {","  is: 'x-element',","  properties: {","    pets: {","      type: Array,","      notify: true,","    },","    name: String,","  },","  behaviors: [ SuperCoolBehaviors ],","});"));
}
