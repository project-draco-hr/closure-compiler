{
  setAcceptedLanguage(LanguageMode.ECMASCRIPT6);
  test(LINE_JOINER.join("/** @polymerBehavior */","var FunBehavior = {","  /** @param {string} funAmount */","  doSomethingFun(funAmount) { alert('Something ' + funAmount + ' fun!'); },","};","","var A = Polymer({","  is: 'x-element',","  properties: {","    name: String,","  },","  /** @param {string} funAmount */","  doSomethingFun(funAmount) {","    alert('Element doing something' + funAmount + ' fun!');","  },","  behaviors: [ FunBehavior ],","});"),LINE_JOINER.join("/** @polymerBehavior @nocollapse */","var FunBehavior = {","  /** @suppress {checkTypes|globalThis} */","  doSomethingFun(funAmount) { alert('Something ' + funAmount + ' fun!'); },","};","","/** @constructor @extends {PolymerElement} @implements {PolymerAInterface}*/","var A = function() {};","","/** @type {string} */","A.prototype.name;","","A = Polymer(/** @lends {A.prototype} */ {","  is: 'x-element',","  properties: {","    name: String,","  },","  /**","   * @param {string} funAmount","   * @this {A}","   */","  doSomethingFun(funAmount) {","    alert('Element doing something' + funAmount + ' fun!');","  },","  behaviors: [ FunBehavior ],","});"));
}
