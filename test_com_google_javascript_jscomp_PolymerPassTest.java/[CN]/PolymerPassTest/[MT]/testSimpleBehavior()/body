{
  test(Joiner.on("\n").join("/** @polymerBehavior */","var FunBehavior = {","  properties: {","    /** @type {boolean} */","    isFun: {","      type: Boolean,","      value: true,","    }","  },","  /** @type {string} */","  foo: 'hooray',","","  /** @return {number} */","  get someNumber() {","    return 5*7+2;","  },","  /** @param {string} funAmount */","  doSomethingFun: function(funAmount) { alert('Something ' + funAmount + ' fun!'); },","  /** @override */","  created: function() {}","};","var A = Polymer({","  is: 'x-element',","  properties: {","    pets: {","      type: Array,","      notify: true,","    },","    name: String,","  },","  behaviors: [ FunBehavior ],","});"),Joiner.on("\n").join("/** @polymerBehavior @nocollapse */","var FunBehavior = {","  properties: {","    isFun: {","      type: Boolean,","      value: true,","    }","  },","  /** @type {string} */","  foo: 'hooray',","","  /** @suppress {checkTypes|globalThis} */","  get someNumber() {","    return 5*7+2;","  },","  /** @suppress {checkTypes|globalThis} */","  doSomethingFun: function(funAmount) { alert('Something ' + funAmount + ' fun!'); },","  /** @suppress {checkTypes|globalThis} */","  created: function() {}","};","/** @constructor @extends {PolymerElement} @implements {PolymerAInterface}*/","var A = function() {};","/** @type {!Array} */","A.prototype.pets;","/** @type {string} */","A.prototype.name;","/** @type {boolean} */","A.prototype.isFun;","/** @param {string} funAmount */","A.prototype.doSomethingFun = function(funAmount) {","  alert('Something ' + funAmount + ' fun!');","};","/** @type {string} */","A.prototype.foo;","/** @type {number} */","A.prototype.someNumber;","A = Polymer(/** @lends {A.prototype} */ {","  is: 'x-element',","  properties: {","    pets: {","      type: Array,","      notify: true,","    },","    name: String,","  },","  behaviors: [ FunBehavior ],","});"));
}
