{
  Double leftValue=NodeUtil.getNumberValue(left);
  if (leftValue == null) {
    return null;
  }
  Double rightValue=NodeUtil.getNumberValue(right);
  if (rightValue == null) {
    return null;
  }
  double lv=leftValue;
  double rv=rightValue;
  Boolean result;
switch (op) {
case Token.SHEQ:
case Token.EQ:
    Preconditions.checkState(left.getType() == Token.NUMBER && right.getType() == Token.NUMBER);
  result=lv == rv;
break;
case Token.SHNE:
case Token.NE:
Preconditions.checkState(left.getType() == Token.NUMBER && right.getType() == Token.NUMBER);
result=lv != rv;
break;
case Token.LE:
result=lv <= rv;
break;
case Token.LT:
result=lv < rv;
break;
case Token.GE:
result=lv >= rv;
break;
case Token.GT:
result=lv > rv;
break;
default :
return null;
}
return result;
}
