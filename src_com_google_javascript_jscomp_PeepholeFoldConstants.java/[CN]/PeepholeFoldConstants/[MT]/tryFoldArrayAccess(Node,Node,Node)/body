{
  if (NodeUtil.isAssignmentTarget(n)) {
    return n;
  }
  if (!right.isNumber()) {
    return n;
  }
  double index=right.getDouble();
  int intIndex=(int)index;
  if (intIndex != index) {
    report(INVALID_GETELEM_INDEX_ERROR,right);
    return n;
  }
  if (intIndex < 0) {
    report(INDEX_OUT_OF_BOUNDS_ERROR,right);
    return n;
  }
  Node current=left.getFirstChild();
  Node elem=null;
  for (int i=0; current != null; i++) {
    if (i != intIndex) {
      if (mayHaveSideEffects(current)) {
        return n;
      }
    }
 else {
      elem=current;
    }
    current=current.getNext();
  }
  if (elem == null) {
    report(INDEX_OUT_OF_BOUNDS_ERROR,right);
    return n;
  }
  if (elem.isEmpty()) {
    elem=NodeUtil.newUndefinedNode(elem);
  }
 else {
    left.removeChild(elem);
  }
  n.getParent().replaceChild(n,elem);
  reportCodeChange();
  return elem;
}
