{
  if (NodeUtil.isLiteralValue(right,false) && left.getType() == Token.ADD && left.getChildCount() == 2) {
    Node ll=left.getFirstChild();
    Node lr=ll.getNext();
    if (lr.getType() != Token.STRING) {
      return n;
    }
    String leftString=NodeUtil.getStringValue(lr);
    String rightString=NodeUtil.getStringValue(right);
    if (leftString != null && rightString != null) {
      left.removeChild(ll);
      String result=leftString + rightString;
      n.replaceChild(left,ll);
      n.replaceChild(right,Node.newString(result));
      reportCodeChange();
    }
  }
  return n;
}
