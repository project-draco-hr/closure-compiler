{
switch (n.getToken()) {
case ADD:
    Node left=n.getFirstChild();
  Node right=n.getLastChild();
if (!NodeUtil.mayBeString(left,shouldUseTypes) && !NodeUtil.mayBeString(right,shouldUseTypes)) {
  tryConvertOperandsToNumber(n);
}
break;
case ASSIGN_BITOR:
case ASSIGN_BITXOR:
case ASSIGN_BITAND:
case ASSIGN_LSH:
case ASSIGN_RSH:
case ASSIGN_URSH:
case ASSIGN_SUB:
case ASSIGN_MUL:
case ASSIGN_MOD:
case ASSIGN_DIV:
tryConvertToNumber(n.getLastChild());
break;
case BITNOT:
case BITOR:
case BITXOR:
case BITAND:
case LSH:
case RSH:
case URSH:
case SUB:
case MUL:
case MOD:
case DIV:
case POS:
case NEG:
tryConvertOperandsToNumber(n);
break;
default :
break;
}
}
