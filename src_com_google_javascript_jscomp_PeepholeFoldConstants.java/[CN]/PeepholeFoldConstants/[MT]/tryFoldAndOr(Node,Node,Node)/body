{
  Node parent=n.getParent();
  Node result=null;
  int type=n.getType();
  TernaryValue leftVal=NodeUtil.getBooleanValue(left);
  if (leftVal != TernaryValue.UNKNOWN) {
    boolean lval=leftVal.toBoolean(true);
    if (lval && type == Token.OR || !lval && type == Token.AND) {
      result=left;
    }
 else {
      result=right;
    }
  }
  if (result != null) {
    n.removeChild(result);
    parent.replaceChild(n,result);
    reportCodeChange();
    return result;
  }
 else {
    return n;
  }
}
