{
  Preconditions.checkArgument(n.isInstanceOf());
  if (NodeUtil.isLiteralValue(left,true) && !mayHaveSideEffects(right)) {
    Node replacementNode=null;
    if (NodeUtil.isImmutableValue(left)) {
      replacementNode=IR.falseNode();
    }
 else     if (right.isName() && "Object".equals(right.getString())) {
      replacementNode=IR.trueNode();
    }
    if (replacementNode != null) {
      n.getParent().replaceChild(n,replacementNode);
      reportCodeChange();
      return replacementNode;
    }
  }
  return n;
}
