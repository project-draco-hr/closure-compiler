{
  Preconditions.checkArgument(n.isNew());
  Node objectType=n.getFirstChild();
  if (!objectType.isName()) {
    return n;
  }
  if (objectType.getString().equals("String")) {
    Node value=objectType.getNext();
    String stringValue=null;
    if (value == null) {
      stringValue="";
    }
 else {
      if (!NodeUtil.isImmutableValue(value)) {
        return n;
      }
      stringValue=NodeUtil.getStringValue(value);
    }
    if (stringValue == null) {
      return n;
    }
    Node parent=n.getParent();
    Node newString=IR.string(stringValue);
    parent.replaceChild(n,newString);
    newString.copyInformationFrom(parent);
    reportCodeChange();
    return newString;
  }
  return n;
}
