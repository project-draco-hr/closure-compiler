{
  if (prototypeFlag) {
  }
 else {
    if (value == null) {
      value="null";
    }
 else     if (value instanceof Undefined) {
      value="undefined";
    }
    if (xmlName.isAttributeName()) {
      setAttribute(xmlName,value);
    }
 else     if (xmlName.uri() == null && xmlName.localName().equals("*")) {
      setChildren(value);
    }
 else {
      XMLObjectImpl xmlValue=null;
      if (value instanceof XMLObjectImpl) {
        xmlValue=(XMLObjectImpl)value;
        if (xmlValue instanceof XML) {
          if (((XML)xmlValue).tokenType() == XmlCursor.TokenType.ATTR) {
            xmlValue=makeXmlFromString(lib,xmlName,xmlValue.toString());
          }
        }
        if (xmlValue instanceof XMLList) {
          for (int i=0; i < xmlValue.length(); i++) {
            XML xml=((XMLList)xmlValue).item(i);
            if (xml.tokenType() == XmlCursor.TokenType.ATTR) {
              ((XMLList)xmlValue).replace(i,makeXmlFromString(lib,xmlName,xml.toString()));
            }
          }
        }
      }
 else {
        xmlValue=makeXmlFromString(lib,xmlName,ScriptRuntime.toString(value));
      }
      XMLList matches=getPropertyList(xmlName);
      if (matches.length() == 0) {
        appendChild(xmlValue);
      }
 else {
        for (int i=1; i < matches.length(); i++) {
          removeChild(matches.item(i).childIndex());
        }
        doPut(xmlName,matches.item(0),xmlValue);
      }
    }
  }
}
