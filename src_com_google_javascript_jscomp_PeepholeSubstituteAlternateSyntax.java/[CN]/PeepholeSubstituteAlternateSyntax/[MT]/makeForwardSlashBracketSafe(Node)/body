{
  String s=n.getString();
  StringBuilder sb=null;
  int pos=0;
  boolean isEscaped=false, inCharset=false;
  for (int i=0; i < s.length(); ++i) {
    char ch=s.charAt(i);
switch (ch) {
case '\\':
      isEscaped=!isEscaped;
    continue;
case '/':
  if (!isEscaped && !inCharset) {
    if (null == sb) {
      sb=new StringBuilder(s.length() + 16);
    }
    sb.append(s,pos,i).append('\\');
    pos=i;
  }
break;
case '[':
if (!isEscaped) {
inCharset=true;
}
break;
case ']':
if (!isEscaped) {
inCharset=false;
}
break;
case '\r':
case '\n':
case '\u2028':
case '\u2029':
if (null == sb) {
sb=new StringBuilder(s.length() + 16);
}
if (isEscaped) {
sb.append(s,pos,i - 1);
}
 else {
sb.append(s,pos,i);
}
switch (ch) {
case '\r':
sb.append("\\r");
break;
case '\n':
sb.append("\\n");
break;
case '\u2028':
sb.append("\\u2028");
break;
case '\u2029':
sb.append("\\u2029");
break;
}
pos=i + 1;
break;
}
isEscaped=false;
}
if (null == sb) {
return n.cloneTree();
}
sb.append(s,pos,s.length());
return IR.string(sb.toString()).srcref(n);
}
