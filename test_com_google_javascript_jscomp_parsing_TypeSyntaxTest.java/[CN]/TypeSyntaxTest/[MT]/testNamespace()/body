{
  parse("namespace foo {\n}");
  parse("namespace foo.bar.baz {\n}");
  parse("namespace foo {\n  interface I {\n  }\n}");
  parse("namespace foo {\n  class C {\n  }\n}");
  parse("namespace foo {\n  enum E {\n  }\n}");
  parse("namespace foo {\n  function f() {\n  }\n}");
  parse("namespace foo {\n  declare var foo\n}");
  parse("namespace foo {\n  namespace bar {\n  }\n}");
  parse("namespace foo {\n  interface I {\n  }\n  class C {\n  }\n}");
  parse("namespace foo {\n  type Foo = number;\n}");
  parse("namespace foo {\n  export interface I {\n  }\n}");
  parse("namespace foo {\n  export class C {\n  }\n}");
  parse("namespace foo {\n  export enum E {\n  }\n}");
  parse("namespace foo {\n  export function f() {\n  }\n}");
  parse("namespace foo {\n  export declare var foo\n}");
  parse("namespace foo {\n  export namespace bar {\n  }\n}");
  parse("namespace foo {\n  export type Foo = number;\n}");
  expectErrors("Parse error. Semi-colon expected");
  parse("namespace {}");
  expectErrors("Parse error. Semi-colon expected");
  parse("namespace 'foo' {}");
  testNotEs6Typed("namespace foo {}","namespace declaration");
}
