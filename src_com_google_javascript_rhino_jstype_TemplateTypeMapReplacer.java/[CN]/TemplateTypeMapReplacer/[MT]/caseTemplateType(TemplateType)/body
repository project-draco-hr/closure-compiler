{
  if (replacements.hasTemplateKey(type)) {
    if (hasVisitedType(type) || !replacements.hasTemplateType(type)) {
      return type;
    }
 else {
      JSType replacement=replacements.getUnresolvedOriginalTemplateType(type);
      JSType restrictedReplacement=replacement.restrictByNotNullOrUndefined();
      if (restrictedReplacement.isTemplatizedType()) {
        Iterable<JSType> replacementTemplateTypes=restrictedReplacement.toMaybeTemplatizedType().getTemplateTypes();
        for (        JSType replacementTemplateType : replacementTemplateTypes) {
          if (!replacementTemplateType.differsFrom(type)) {
            return type;
          }
        }
      }
      visitedTypes.push(type);
      JSType visitedReplacement=replacement.visit(this);
      visitedTypes.pop();
      return visitedReplacement;
    }
  }
 else {
    return type;
  }
}
