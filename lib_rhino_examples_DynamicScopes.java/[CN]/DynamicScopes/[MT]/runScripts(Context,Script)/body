{
  ScriptableObject sharedScope=cx.initStandardObjects(null,true);
  script.exec(cx,sharedScope);
  final int threadCount=3;
  Thread[] t=new Thread[threadCount];
  for (int i=0; i < threadCount; i++) {
    String source2="" + "function g() { var x = 'local'; return f(); }\n" + "java.lang.System.out.println(g());\n"+ "function g2() { var x = 'local'; return closure(); }\n"+ "java.lang.System.out.println(g2());\n"+ "";
    t[i]=new Thread(new PerThread(sharedScope,source2,"thread" + i));
  }
  for (int i=0; i < threadCount; i++)   t[i].start();
  for (int i=0; i < threadCount; i++) {
    try {
      t[i].join();
    }
 catch (    InterruptedException e) {
    }
  }
}
