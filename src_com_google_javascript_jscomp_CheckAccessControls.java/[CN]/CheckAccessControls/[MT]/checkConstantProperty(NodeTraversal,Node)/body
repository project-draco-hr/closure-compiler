{
  Node parent=getprop.getParent();
  if (!(NodeUtil.isAssignmentOp(parent) && parent.getFirstChild() == getprop) && (parent.getType() != Token.INC) && (parent.getType() != Token.DEC)) {
    return;
  }
  ObjectType objectType=ObjectType.cast(dereference(getprop.getFirstChild().getJSType()));
  String propertyName=getprop.getLastChild().getString();
  boolean isConstant=isPropertyDeclaredConstant(objectType,propertyName);
  if (isConstant) {
    ObjectType oType=objectType;
    while (oType != null) {
      if (oType.hasReferenceName()) {
        if (initializedConstantProperties.containsEntry(oType.getReferenceName(),propertyName)) {
          compiler.report(t.makeError(getprop,CONST_PROPERTY_REASSIGNED_VALUE,propertyName));
          break;
        }
      }
      oType=oType.getImplicitPrototype();
    }
    Preconditions.checkState(objectType.hasReferenceName());
    initializedConstantProperties.put(objectType.getReferenceName(),propertyName);
    if (objectType.isInstanceType()) {
      ObjectType prototype=objectType.getImplicitPrototype();
      if (prototype != null) {
        if (prototype.hasProperty(propertyName) && prototype.hasReferenceName()) {
          initializedConstantProperties.put(prototype.getReferenceName(),propertyName);
        }
      }
    }
  }
}
