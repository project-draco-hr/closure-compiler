{
  JSDocInfo overridingInfo=parent.getJSDocInfo();
  Visibility overridingVisibility=overridingInfo == null ? Visibility.INHERITED : overridingInfo.getVisibility();
  Visibility fileOverviewVisibility=(fileOverviewJsDoc != null) ? fileOverviewJsDoc.getVisibility() : null;
  String propertyName=getprop.getLastChild().getString();
  Visibility visibility=objectType != null ? objectType.getOwnPropertyJSDocInfo(propertyName).getVisibility() : Visibility.INHERITED;
  if (overridingVisibility == Visibility.INHERITED && overridingVisibility != visibility && fileOverviewVisibility != null && fileOverviewVisibility != Visibility.INHERITED) {
    compiler.report(t.makeError(getprop,BAD_PROPERTY_OVERRIDE_IN_FILE_WITH_FILEOVERVIEW_VISIBILITY,propertyName,fileOverviewVisibility.name()));
  }
  if (isPrivateByConvention(propertyName)) {
    return Visibility.PRIVATE;
  }
  return (fileOverviewVisibility != null && visibility == Visibility.INHERITED) ? fileOverviewVisibility : visibility;
}
