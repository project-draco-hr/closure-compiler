{
  if (parent.isAssign()) {
    Node lValue=parent.getFirstChild();
    if (NodeUtil.isGet(lValue)) {
      JSType lValueType=lValue.getJSType();
      if (lValueType != null && lValueType.isNominalConstructor()) {
        return (lValueType.toMaybeFunctionType()).getInstanceType();
      }
 else {
        return normalizeClassType(lValue.getFirstChild().getJSType());
      }
    }
 else {
      return normalizeClassType(lValue.getJSType());
    }
  }
 else   if (NodeUtil.isFunctionDeclaration(n) || parent.isName()) {
    return normalizeClassType(n.getJSType());
  }
 else   if (parent.isStringKey() || parent.isGetterDef() || parent.isSetterDef()) {
    Node objectLitParent=parent.getParent().getParent();
    if (!objectLitParent.isAssign()) {
      return null;
    }
    Node className=NodeUtil.getPrototypeClassName(objectLitParent.getFirstChild());
    if (className != null) {
      return normalizeClassType(className.getJSType());
    }
  }
  return null;
}
