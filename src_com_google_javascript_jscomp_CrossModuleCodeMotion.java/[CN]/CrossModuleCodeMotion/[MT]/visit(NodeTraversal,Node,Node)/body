{
  if (!n.isName()) {
    return;
  }
  String name=n.getString();
  if (name.isEmpty() || compiler.getCodingConvention().isExported(name)) {
    return;
  }
  Var v=t.getScope().getVar(name);
  if (v == null || !v.isGlobal()) {
    return;
  }
  NamedInfo info=getNamedInfo(v);
  if (info.allowMove) {
    if (maybeProcessDeclaration(t,n,parent,info)) {
      if (hasConditionalAncestor(parent.getParent())) {
        info.allowMove=false;
      }
    }
 else {
      if (parent.isInstanceOf() && parent.getLastChild() == n) {
        instanceofNodes.put(parent,new InstanceofInfo(t.getModule(),info));
      }
 else {
        processReference(t,info,name);
      }
    }
  }
}
