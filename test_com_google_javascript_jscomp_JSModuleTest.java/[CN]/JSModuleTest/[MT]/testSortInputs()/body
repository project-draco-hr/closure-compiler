{
  CompilerInput a=new CompilerInput(SourceFile.fromCode("a.js","goog.require('b');goog.require('c')"));
  CompilerInput b=new CompilerInput(SourceFile.fromCode("b.js","goog.provide('b');goog.require('d')"));
  CompilerInput c=new CompilerInput(SourceFile.fromCode("c.js","goog.provide('c');goog.require('d')"));
  CompilerInput d=new CompilerInput(SourceFile.fromCode("d.js","goog.provide('d')"));
  CompilerInput e=new CompilerInput(SourceFile.fromCode("e.js","goog.provide('e')"));
  CompilerInput f=new CompilerInput(SourceFile.fromCode("f.js","goog.provide('f')"));
  assertSortedInputs(ImmutableList.of(d,b,c,a),ImmutableList.of(a,b,c,d));
  assertSortedInputs(ImmutableList.of(d,b,c,a),ImmutableList.of(d,b,c,a));
  assertSortedInputs(ImmutableList.of(d,c,b,a),ImmutableList.of(d,c,b,a));
  assertSortedInputs(ImmutableList.of(d,b,c,a),ImmutableList.of(d,a,b,c));
  assertSortedInputs(ImmutableList.of(d,b,c,a,e,f),ImmutableList.of(a,b,c,d,e,f));
  assertSortedInputs(ImmutableList.of(e,f,d,b,c,a),ImmutableList.of(e,f,a,b,c,d));
  assertSortedInputs(ImmutableList.of(e,d,b,c,a,f),ImmutableList.of(a,b,c,e,d,f));
  assertSortedInputs(ImmutableList.of(e,f,d,b,c,a),ImmutableList.of(e,a,f,b,c,d));
}
