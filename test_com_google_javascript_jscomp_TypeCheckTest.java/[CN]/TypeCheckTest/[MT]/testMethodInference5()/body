{
  testTypes("/** @constructor */ function F() {}" + "/** @param {number} x \n * @return {string} */ " + "F.prototype.foo = function(x) { return 'x'; };"+ "/** @constructor \n * @extends {F} */ "+ "function G() {}"+ "/** @type {number} */ G.prototype.num = 3;"+ "/** @override */ "+ "G.prototype.foo = function(y) { return this.num + y; };","inconsistent return type\n" + "found   : number\n" + "required: string");
}
