{
  testTypes("/** @interface \n" + " *  @template KEY1, VALUE1 */\n" + "var IObject = function() {};\n"+ "\n"+ "/** @interface \n"+ " *  @extends {IObject<number, VALUE2>}\n"+ " *  @template VALUE2 */\n"+ "var IArrayLike = function() {};\n"+ "\n"+ "/** @constructor \n"+ " *  @implements {IArrayLike<number>} */\n"+ "function Int8Array2() {}\n"+ "\n"+ "function f() {\n"+ "  /** @type {Int8Array2} */\n"+ "  var x = new Int8Array2();\n"+ "\n"+ "  /** @type {IArrayLike<string>} */\n"+ "  var y;\n"+ "  y = x;\n"+ "\n"+ "  /** @type {IObject<number, string>} */\n"+ "  var z;\n"+ "  z = x;\n"+ "}");
}
