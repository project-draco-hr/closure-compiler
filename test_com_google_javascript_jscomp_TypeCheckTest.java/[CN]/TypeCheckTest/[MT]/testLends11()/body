{
  testTypes("function defineClass(x, y) { return function() {}; } " + "/** @constructor */" + "var Foo = function() {};"+ "/** @return {*} */ Foo.prototype.bar = function() { return 3; };"+ "/**\n"+ " * @constructor\n"+ " * @extends {Foo}\n"+ " */\n"+ "var SubFoo = defineClass(Foo, "+ "    /** @lends {SubFoo.prototype} */ ({\n"+ "      /** @return {number} */ bar: function() { return 3; }}));"+ "/** @return {string} */ function f() { return (new SubFoo()).bar(); }","inconsistent return type\n" + "found   : number\n" + "required: string");
}
