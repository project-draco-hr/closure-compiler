{
  Scope s=new TypedScopeCreator(compiler,CodingConventions.getDefault()).createInitialScope(new Node(Token.BLOCK));
  assertTypeEquals(ARRAY_FUNCTION_TYPE,s.getVar("Array").getType());
  assertTypeEquals(BOOLEAN_OBJECT_FUNCTION_TYPE,s.getVar("Boolean").getType());
  assertTypeEquals(DATE_FUNCTION_TYPE,s.getVar("Date").getType());
  assertTypeEquals(ERROR_FUNCTION_TYPE,s.getVar("Error").getType());
  assertTypeEquals(EVAL_ERROR_FUNCTION_TYPE,s.getVar("EvalError").getType());
  assertTypeEquals(NUMBER_OBJECT_FUNCTION_TYPE,s.getVar("Number").getType());
  assertTypeEquals(OBJECT_FUNCTION_TYPE,s.getVar("Object").getType());
  assertTypeEquals(RANGE_ERROR_FUNCTION_TYPE,s.getVar("RangeError").getType());
  assertTypeEquals(REFERENCE_ERROR_FUNCTION_TYPE,s.getVar("ReferenceError").getType());
  assertTypeEquals(REGEXP_FUNCTION_TYPE,s.getVar("RegExp").getType());
  assertTypeEquals(STRING_OBJECT_FUNCTION_TYPE,s.getVar("String").getType());
  assertTypeEquals(SYNTAX_ERROR_FUNCTION_TYPE,s.getVar("SyntaxError").getType());
  assertTypeEquals(TYPE_ERROR_FUNCTION_TYPE,s.getVar("TypeError").getType());
  assertTypeEquals(URI_ERROR_FUNCTION_TYPE,s.getVar("URIError").getType());
}
