{
  testTypes("/** @interface */ function I() {}" + "/** @return {number} */ I.prototype.bar = function() {};" + "/** @constructor */ function F() {}"+ "/** @return {number} */ F.prototype.foo = function() {return 3; };"+ "/** @constructor \n * @extends {F} \n * @implements {I} */ "+ "function G() {}"+ "/** @return {number} \n * @override */ G.prototype.bar = G.prototype.foo;"+ "/** @return {string} */ function f() { return new G().bar(); }","inconsistent return type\n" + "found   : number\n" + "required: string");
}
