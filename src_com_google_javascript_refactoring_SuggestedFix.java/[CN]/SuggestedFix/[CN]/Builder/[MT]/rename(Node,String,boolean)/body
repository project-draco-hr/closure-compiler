{
  Node nodeToRename=null;
  if (n.isCall() || n.isTaggedTemplateLit()) {
    Node child=n.getFirstChild();
    nodeToRename=child;
    if (!replaceEntireName && child.isGetProp()) {
      nodeToRename=child.getLastChild();
    }
  }
 else   if (n.isGetProp()) {
    nodeToRename=n.getLastChild();
    if (replaceEntireName) {
      while (nodeToRename.getParent().isGetProp()) {
        nodeToRename=nodeToRename.getParent();
      }
    }
  }
 else   if (n.isStringKey()) {
    nodeToRename=n;
  }
 else   if (n.isString()) {
    Preconditions.checkState(n.getParent().isGetProp());
    nodeToRename=n;
  }
 else {
    throw new UnsupportedOperationException("Rename is not implemented for this node type: " + n);
  }
  replacements.put(nodeToRename.getSourceFileName(),new CodeReplacement(nodeToRename.getSourceOffset(),nodeToRename.getLength(),name));
  return this;
}
