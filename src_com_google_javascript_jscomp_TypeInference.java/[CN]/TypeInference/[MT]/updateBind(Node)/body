{
  CodingConvention.Bind bind=compiler.getCodingConvention().describeFunctionBind(n,false,true);
  if (bind == null) {
    return;
  }
  Node target=bind.target;
  FunctionType callTargetFn=getJSType(target).restrictByNotNullOrUndefined().toMaybeFunctionType();
  if (callTargetFn == null) {
    return;
  }
  if (bind.thisValue != null && target.isFunction()) {
    JSType thisType=getJSType(bind.thisValue);
    if (thisType.toObjectType() != null && !thisType.isUnknownType() && callTargetFn.getTypeOfThis().isUnknownType()) {
      callTargetFn=new FunctionBuilder(registry).copyFromOtherFunction(callTargetFn).withTypeOfThis(thisType.toObjectType()).build();
      target.setJSType(callTargetFn);
    }
  }
  n.setJSType(callTargetFn.getBindReturnType(bind.getBoundParameterCount() + 1));
}
