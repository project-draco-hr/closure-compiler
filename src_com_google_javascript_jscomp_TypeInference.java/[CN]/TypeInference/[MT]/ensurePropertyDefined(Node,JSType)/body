{
  String propName=getprop.getLastChild().getString();
  JSType nodeType=getJSType(getprop.getFirstChild());
  ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
  if (objectType == null) {
    registry.registerPropertyOnType(propName,nodeType);
  }
 else {
    if (ensurePropertyDeclaredHelper(getprop,objectType)) {
      return;
    }
    if (!objectType.isPropertyTypeDeclared(propName)) {
      if (objectType.hasProperty(propName) || !objectType.isInstanceType()) {
        if ("prototype".equals(propName)) {
          objectType.defineDeclaredProperty(propName,rightType,false,getprop);
        }
 else {
          objectType.defineInferredProperty(propName,rightType,false,getprop);
        }
      }
 else {
        if (getprop.getFirstChild().getType() == Token.THIS && getJSType(syntacticScope.getRootNode()).isConstructor()) {
          objectType.defineInferredProperty(propName,rightType,false,getprop);
        }
 else {
          registry.registerPropertyOnType(propName,objectType);
        }
      }
    }
  }
}
