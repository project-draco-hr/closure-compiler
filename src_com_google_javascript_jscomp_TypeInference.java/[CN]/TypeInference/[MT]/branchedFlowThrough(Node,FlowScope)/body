{
  FlowScope output=flowThrough(source,input);
  Node condition=null;
  FlowScope conditionFlowScope=null;
  BooleanOutcomePair conditionOutcomes=null;
  List<DiGraphEdge<Node,Branch>> branchEdges=getCfg().getOutEdges(source);
  List<FlowScope> result=Lists.newArrayListWithCapacity(branchEdges.size());
  for (  DiGraphEdge<Node,Branch> branchEdge : branchEdges) {
    Branch branch=branchEdge.getValue();
    FlowScope newScope=output;
switch (branch) {
case ON_TRUE:
      if (NodeUtil.isForIn(source)) {
        Node item=source.getFirstChild();
        Node obj=item.getNext();
        FlowScope informed=traverse(obj,output.createChildFlowScope());
        if (item.isVar()) {
          item=item.getFirstChild();
        }
        if (item.isName()) {
          JSType iterKeyType=getNativeType(STRING_TYPE);
          ObjectType objType=getJSType(obj).dereference();
          JSType objIndexType=objType == null ? null : objType.getTemplateTypeMap().getTemplateType(OBJECT_INDEX_TEMPLATE);
          if (objIndexType != null && !objIndexType.isUnknownType()) {
            JSType narrowedKeyType=iterKeyType.getGreatestSubtype(objIndexType);
            if (!narrowedKeyType.isEmptyType()) {
              iterKeyType=narrowedKeyType;
            }
          }
          redeclareSimpleVar(informed,item,iterKeyType);
        }
        newScope=informed;
        break;
      }
case ON_FALSE:
    if (condition == null) {
      condition=NodeUtil.getConditionExpression(source);
      if (condition == null && source.isCase()) {
        condition=source;
        if (conditionFlowScope == null) {
          conditionFlowScope=traverse(condition.getFirstChild(),output.createChildFlowScope());
        }
      }
    }
  if (condition != null) {
    if (condition.isAnd() || condition.isOr()) {
      if (conditionOutcomes == null) {
        conditionOutcomes=condition.isAnd() ? traverseAnd(condition,output.createChildFlowScope()) : traverseOr(condition,output.createChildFlowScope());
      }
      newScope=reverseInterpreter.getPreciserScopeKnowingConditionOutcome(condition,conditionOutcomes.getOutcomeFlowScope(condition.getType(),branch == Branch.ON_TRUE),branch == Branch.ON_TRUE);
    }
 else {
      if (conditionFlowScope == null) {
        conditionFlowScope=traverse(condition,output.createChildFlowScope());
      }
      newScope=reverseInterpreter.getPreciserScopeKnowingConditionOutcome(condition,conditionFlowScope,branch == Branch.ON_TRUE);
    }
  }
break;
}
result.add(newScope.optimize());
}
return result;
}
