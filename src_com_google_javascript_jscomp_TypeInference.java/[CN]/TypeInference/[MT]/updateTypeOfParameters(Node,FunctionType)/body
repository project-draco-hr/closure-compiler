{
  int i=0;
  int childCount=n.getChildCount();
  for (  Node iParameter : fnType.getParameters()) {
    if (i + 1 >= childCount) {
      return;
    }
    JSType iParameterType=getJSType(iParameter);
    Node iArgument=n.getChildAtIndex(i + 1);
    JSType iArgumentType=getJSType(iArgument);
    inferPropertyTypesToMatchConstraint(iArgumentType,iParameterType);
    JSType restrictedParameter=iParameterType.restrictByNotNullOrUndefined().toMaybeFunctionType();
    if (restrictedParameter != null) {
      if (iArgument.isFunction() && iArgumentType.isFunctionType() && iArgument.getJSDocInfo() == null) {
        iArgument.setJSType(restrictedParameter);
        iArgument.putBooleanProp(Node.INFERRED_FUNCTION,true);
      }
    }
    i++;
  }
}
