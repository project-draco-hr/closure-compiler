{
  Map<String,JSType> typeVars=null;
  Map<TemplateType,JSType> result=null;
  TypeTransformation ttlObj=null;
  for (  TemplateType type : templateTypes) {
    if (type.isTypeTransformation()) {
      if (ttlObj == null) {
        ttlObj=new TypeTransformation(compiler,syntacticScope);
        typeVars=buildTypeVariables(inferredTypes);
        result=new HashMap<>();
      }
      JSType transformedType=ttlObj.eval(type.getTypeTransformation(),ImmutableMap.<String,JSType>copyOf(typeVars));
      result.put(type,transformedType);
      typeVars.put(type.getReferenceName(),transformedType);
    }
  }
  return result;
}
