{
  Node left=callNode.getFirstChild();
  Node firstParam=left.getNext();
  AssertionFunctionSpec assertionFunctionSpec=assertionFunctionsMap.get(left.getQualifiedName());
  if (assertionFunctionSpec == null || firstParam == null) {
    return scope;
  }
  Node assertedNode=assertionFunctionSpec.getAssertedParam(firstParam);
  if (assertedNode == null) {
    return scope;
  }
  JSType assertedType=assertionFunctionSpec.getAssertedType(callNode,registry);
  String assertedNodeName=assertedNode.getQualifiedName();
  JSType narrowed;
  if (assertedType == null) {
    scope=reverseInterpreter.getPreciserScopeKnowingConditionOutcome(assertedNode,scope,true);
    narrowed=getJSType(assertedNode).restrictByNotNullOrUndefined();
  }
 else {
    JSType type=getJSType(assertedNode);
    if (assertedType.isUnknownType() || type.isUnknownType()) {
      narrowed=assertedType;
    }
 else {
      narrowed=type.getGreatestSubtype(assertedType);
    }
    if (assertedNodeName != null && type.differsFrom(narrowed)) {
      scope=narrowScope(scope,assertedNode,narrowed);
    }
  }
  callNode.setJSType(narrowed);
  return scope;
}
