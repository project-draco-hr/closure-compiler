{
  Node left=callNode.getFirstChild();
  Node firstParam=left.getNext();
  AssertionFunctionSpec assertionFunctionSpec=assertionFunctionsMap.get(left.getQualifiedName());
  if (assertionFunctionSpec == null || firstParam == null) {
    return scope;
  }
  Node assertedNode=assertionFunctionSpec.getAssertedParam(firstParam);
  if (assertedNode == null) {
    return scope;
  }
  JSTypeNative assertedType=assertionFunctionSpec.getAssertedType();
  String assertedNodeName=assertedNode.getQualifiedName();
  if (assertedType == null) {
    scope=reverseInterpreter.getPreciserScopeKnowingConditionOutcome(assertedNode,scope,true);
    JSType type=getJSType(assertedNode);
    JSType narrowed=type.restrictByNotNullOrUndefined();
    if (type != narrowed) {
      callNode.setJSType(narrowed);
    }
  }
 else {
    JSType type=getJSType(assertedNode);
    JSType narrowed=type.getGreatestSubtype(getNativeType(assertedType));
    if (type != narrowed) {
      if (assertedNodeName != null) {
        scope=narrowScope(scope,assertedNode,narrowed);
      }
      callNode.setJSType(narrowed);
    }
  }
  return scope;
}
