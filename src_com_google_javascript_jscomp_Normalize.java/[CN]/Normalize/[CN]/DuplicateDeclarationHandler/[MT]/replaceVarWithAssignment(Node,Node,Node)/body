{
  if (n.hasChildren()) {
    parent.removeChild(n);
    Node value=n.getFirstChild();
    n.removeChild(value);
    Node replacement=new Node(Token.ASSIGN,n,value);
    replacement.copyInformationFrom(parent);
    gramps.replaceChild(parent,NodeUtil.newExpr(replacement));
  }
 else {
    if (NodeUtil.isStatementBlock(gramps)) {
      gramps.removeChild(parent);
    }
 else     if (gramps.getType() == Token.FOR) {
      parent.removeChild(n);
      gramps.replaceChild(parent,n);
    }
 else {
      Preconditions.checkState(gramps.getType() == Token.LABEL);
      throw new IllegalStateException("Unexpected LABEL");
    }
  }
  reportCodeChange("Duplicate VAR declaration");
}
