{
  Preconditions.checkState(n.isName());
  Node parent=n.getParent();
  Var v=s.getVar(name);
  if (s.isGlobal()) {
    if (v.isExtern() && !input.isExtern()) {
      if (hasOkDuplicateDeclaration.add(v)) {
        return;
      }
    }
  }
  if (v.isCatch()) {
    name=MakeDeclaredNamesUnique.ContextualRenameInverter.getOriginalName(name);
    compiler.report(JSError.make(n,CATCH_BLOCK_VAR_ERROR,name));
  }
 else   if (parent.isFunction()) {
    if (v.getParentNode().isVar()) {
      s.undeclare(v);
      s.declare(name,n,v.input);
      replaceVarWithAssignment(v.getNameNode(),v.getParentNode(),v.getParentNode().getParent());
    }
  }
 else   if (parent.isVar()) {
    Preconditions.checkState(parent.hasOneChild());
    replaceVarWithAssignment(n,parent,parent.getParent());
  }
}
