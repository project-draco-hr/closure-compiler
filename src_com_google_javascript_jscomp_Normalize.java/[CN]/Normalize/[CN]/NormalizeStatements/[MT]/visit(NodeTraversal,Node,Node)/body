{
switch (n.getType()) {
case Token.WHILE:
    if (CONVERT_WHILE_TO_FOR) {
      Node expr=n.getFirstChild();
      n.setType(Token.FOR);
      Node empty=IR.empty();
      empty.useSourceInfoIfMissingFrom(n);
      n.addChildBefore(empty,expr);
      n.addChildAfter(empty.cloneNode(),expr);
      reportCodeChange("WHILE node");
    }
  break;
case Token.FUNCTION:
if (maybeNormalizeFunctionDeclaration(n)) {
  reportCodeChange("Function declaration");
}
break;
case Token.NAME:
case Token.STRING:
case Token.STRING_KEY:
case Token.GETTER_DEF:
case Token.SETTER_DEF:
if (!compiler.getLifeCycleStage().isNormalizedObfuscated()) {
annotateConstantsByConvention(n,parent);
}
break;
case Token.CAST:
parent.replaceChild(n,n.removeFirstChild());
break;
}
}
