{
  Preconditions.checkState(n.isName() || n.isString() || n.isGet()|| n.isSet());
  boolean isObjLitKey=NodeUtil.isObjectLitKey(n,parent);
  boolean isProperty=isObjLitKey || (parent.isGetProp() && parent.getLastChild() == n);
  if (n.isName() || isProperty) {
    boolean isMarkedConstant=n.getBooleanProp(Node.IS_CONSTANT_NAME);
    if (!isMarkedConstant && NodeUtil.isConstantByConvention(compiler.getCodingConvention(),n,parent)) {
      if (assertOnChange) {
        String name=n.getString();
        throw new IllegalStateException("Unexpected const change.\n" + "  name: " + name + "\n"+ "  parent:"+ n.getParent().toStringTree());
      }
      n.putBooleanProp(Node.IS_CONSTANT_NAME,true);
    }
  }
}
