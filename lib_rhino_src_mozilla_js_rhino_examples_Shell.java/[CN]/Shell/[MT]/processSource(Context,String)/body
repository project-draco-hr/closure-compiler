{
  if (filename == null) {
    BufferedReader in=new BufferedReader(new InputStreamReader(System.in));
    String sourceName="<stdin>";
    int lineno=1;
    boolean hitEOF=false;
    do {
      int startline=lineno;
      System.err.print("js> ");
      System.err.flush();
      try {
        String source="";
        while (true) {
          String newline;
          newline=in.readLine();
          if (newline == null) {
            hitEOF=true;
            break;
          }
          source=source + newline + "\n";
          lineno++;
          if (cx.stringIsCompilableUnit(source))           break;
        }
        Object result=cx.evaluateString(this,source,sourceName,startline,null);
        if (result != Context.getUndefinedValue()) {
          System.err.println(Context.toString(result));
        }
      }
 catch (      WrappedException we) {
        System.err.println(we.getWrappedException().toString());
        we.printStackTrace();
      }
catch (      EvaluatorException ee) {
        System.err.println("js: " + ee.getMessage());
      }
catch (      JavaScriptException jse) {
        System.err.println("js: " + jse.getMessage());
      }
catch (      IOException ioe) {
        System.err.println(ioe.toString());
      }
      if (quitting) {
        break;
      }
    }
 while (!hitEOF);
    System.err.println();
  }
 else {
    FileReader in=null;
    try {
      in=new FileReader(filename);
    }
 catch (    FileNotFoundException ex) {
      Context.reportError("Couldn't open file \"" + filename + "\".");
      return;
    }
    try {
      cx.evaluateReader(this,in,filename,1,null);
    }
 catch (    WrappedException we) {
      System.err.println(we.getWrappedException().toString());
      we.printStackTrace();
    }
catch (    EvaluatorException ee) {
      System.err.println("js: " + ee.getMessage());
    }
catch (    JavaScriptException jse) {
      System.err.println("js: " + jse.getMessage());
    }
catch (    IOException ioe) {
      System.err.println(ioe.toString());
    }
 finally {
      try {
        in.close();
      }
 catch (      IOException ioe) {
        System.err.println(ioe.toString());
      }
    }
  }
}
