{
  LinkedDirectedGraph<N,E> workGraph=cloneGraph(graph);
  for (  DiGraphNode<N,E> node : workGraph.getDirectedGraphNodes()) {
    for (    DiGraphEdge<N,E> inEdge : node.getInEdges()) {
      for (      DiGraphEdge<N,E> outEdge : node.getOutEdges()) {
        N source=inEdge.getSource().getValue();
        N dest=outEdge.getDestination().getValue();
        if (!workGraph.isConnectedInDirection(source,dest)) {
          workGraph.connect(source,outEdge.getValue(),dest);
        }
      }
    }
  }
  LinkedDirectedGraph<N,E> resultGraph=LinkedDirectedGraph.create();
  for (  DiGraphNode<N,E> node : workGraph.getDirectedGraphNodes()) {
    if (keep.apply(node.getValue())) {
      resultGraph.createNode(node.getValue());
      for (      DiGraphEdge<N,E> outEdge : node.getOutEdges()) {
        N source=node.getValue();
        N dest=outEdge.getDestination().getValue();
        if (keep.apply(dest)) {
          resultGraph.createNode(dest);
          if (source != dest && !resultGraph.isConnectedInDirection(source,dest)) {
            resultGraph.connect(source,outEdge.getValue(),dest);
          }
        }
      }
    }
  }
  return resultGraph;
}
