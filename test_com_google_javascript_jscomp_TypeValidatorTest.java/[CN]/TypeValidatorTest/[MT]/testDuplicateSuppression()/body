{
  testSame(LINE_JOINER.join("/** @const */","var ns0 = {};","/** @type {number} */","ns0.x;","/** @type {number} */","ns0.x;"));
  testSame(LINE_JOINER.join("/** @const */","var ns1 = {};","/** @type {number} */","ns1.x = 3;","/** @type {number} @suppress {duplicate} */","ns1.x = 3;"));
  testSame(LINE_JOINER.join("/** @const */","var ns2 = {};","/** @type {number} */","ns2.x = 3;","/** @type {number} */","ns2.x = 3;"),TypeValidator.DUP_VAR_DECLARATION);
  testSame(LINE_JOINER.join("/** @const */","var ns3 = {};","/** @type {number} */","ns3.x;","/** @type {string} @suppress {duplicate} */","ns3.x;"),TypeValidator.DUP_VAR_DECLARATION_TYPE_MISMATCH);
  testSame(LINE_JOINER.join("/** @type {number} */","var w;","/** @type {number} */","var w;"),TypeValidator.DUP_VAR_DECLARATION);
  testSame(LINE_JOINER.join("/** @type {number} */","var x;","/** @type {number} @suppress {duplicate} */","var x;"));
  testSame(LINE_JOINER.join("/** @type {number} */","var y = 3;","/** @type {number} */","var y = 3;"),TypeValidator.DUP_VAR_DECLARATION);
  testSame(LINE_JOINER.join("/** @type {number} */","var z;","/** @type {string} @suppress {duplicate} */","var z;"),TypeValidator.DUP_VAR_DECLARATION_TYPE_MISMATCH);
}
