{
  Node lhs=expr.getFirstChild();
  Node rhs=expr.getLastChild();
  JSType operandType=requiredType.isNumber() ? JSType.NUMBER : JSType.UNKNOWN;
  EnvTypePair lhsPair=analyzeExprFwd(lhs,inEnv,operandType);
  EnvTypePair rhsPair=analyzeExprFwd(rhs,lhsPair.env,operandType);
  JSType lhsType=lhsPair.type;
  JSType rhsType=rhsPair.type;
  if (lhsType.isString() || rhsType.isString()) {
    rhsPair.type=JSType.STRING;
    return rhsPair;
  }
  if (!commonTypes.isNumStrScalarOrObj(lhsType)) {
    warnInvalidOperand(lhs,expr.getToken(),JSType.NUM_OR_STR,lhsType);
  }
  if (!commonTypes.isNumStrScalarOrObj(rhsType)) {
    warnInvalidOperand(rhs,expr.getToken(),JSType.NUM_OR_STR,rhsType);
  }
  return new EnvTypePair(rhsPair.env,JSType.plus(lhsType,rhsType));
}
