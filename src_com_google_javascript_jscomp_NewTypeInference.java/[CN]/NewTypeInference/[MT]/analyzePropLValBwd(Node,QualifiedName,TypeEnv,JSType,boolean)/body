{
  Preconditions.checkArgument(pname.isIdentifier());
  JSType reqObjType=pickReqObjType(obj.getParent()).withLoose().withProperty(pname,type);
  LValueResultBwd lvalue=analyzeLValueBwd(obj,outEnv,reqObjType,false,true);
  if (lvalue.ptr != null) {
    lvalue.ptr=QualifiedName.join(lvalue.ptr,pname);
    if (doSlicing) {
      String objName=lvalue.ptr.getLeftmostName();
      QualifiedName props=lvalue.ptr.getAllButLeftmost();
      JSType objType=envGetType(lvalue.env,objName);
      JSType slicedObjType=objType.withoutProperty(props);
      lvalue.env=envPutType(lvalue.env,objName,slicedObjType);
    }
  }
  lvalue.type=lvalue.type.mayHaveProp(pname) ? lvalue.type.getProp(pname) : JSType.UNKNOWN;
  return lvalue;
}
