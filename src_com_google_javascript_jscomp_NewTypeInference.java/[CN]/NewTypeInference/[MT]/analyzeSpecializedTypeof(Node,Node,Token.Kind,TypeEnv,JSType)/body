{
  EnvTypePair pair;
  Node typeofRand=typeof.getFirstChild();
  JSType comparedType=getTypeFromString(typeString);
  checkInvalidTypename(typeString);
  if (comparedType.isUnknown()) {
    pair=analyzeExprFwd(typeofRand,inEnv);
    pair=analyzeExprFwd(typeString,pair.env);
  }
 else   if ((specializedType.isTrueOrTruthy() && (comparisonOp == Token.SHEQ || comparisonOp == Token.EQ)) || (specializedType.isFalseOrFalsy() && (comparisonOp == Token.SHNE || comparisonOp == Token.NE))) {
    pair=analyzeExprFwd(typeofRand,inEnv,JSType.UNKNOWN,comparedType);
  }
 else {
    pair=analyzeExprFwd(typeofRand,inEnv);
    JSType rmType=pair.type.removeType(comparedType);
    if (!rmType.isBottom()) {
      pair=analyzeExprFwd(typeofRand,inEnv,JSType.UNKNOWN,rmType);
    }
  }
  pair.type=specializedType.toBoolean();
  return pair;
}
