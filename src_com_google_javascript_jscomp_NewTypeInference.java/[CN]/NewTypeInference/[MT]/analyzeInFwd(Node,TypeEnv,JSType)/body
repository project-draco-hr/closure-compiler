{
  Node lhs=expr.getFirstChild();
  Node rhs=expr.getLastChild();
  JSType reqObjType=pickReqObjType(expr);
  EnvTypePair pair;
  pair=analyzeExprFwd(lhs,inEnv,NUMBER_OR_STRING);
  if (!pair.type.isSubtypeOf(NUMBER_OR_STRING)) {
    warnInvalidOperand(lhs,Token.IN,NUMBER_OR_STRING,pair.type);
  }
  pair=analyzeExprFwd(rhs,pair.env,reqObjType);
  if (!pair.type.isSubtypeOf(TOP_OBJECT)) {
    warnInvalidOperand(rhs,Token.IN,"Object",pair.type);
    pair.type=BOOLEAN;
    return pair;
  }
  if (pair.type.isStruct()) {
    warnings.add(JSError.make(rhs,IN_USED_WITH_STRUCT));
    pair.type=BOOLEAN;
    return pair;
  }
  JSType resultType=BOOLEAN;
  if (lhs.isString()) {
    QualifiedName pname=new QualifiedName(lhs.getString());
    if (specializedType.isTrueOrTruthy()) {
      pair=analyzeExprFwd(rhs,inEnv,reqObjType,reqObjType.withPropertyRequired(pname.getLeftmostName()));
      resultType=TRUE_TYPE;
    }
 else     if (specializedType.isFalseOrFalsy()) {
      pair=analyzeExprFwd(rhs,inEnv,reqObjType);
      pair=analyzeExprFwd(rhs,inEnv,reqObjType,pair.type.withoutProperty(pname));
      resultType=FALSE_TYPE;
    }
  }
  pair.type=resultType;
  return pair;
}
