{
  List<DiGraphEdge<Node,ControlFlowGraph.Branch>> outEdges=dn.getOutEdges();
  if (outEdges.isEmpty()) {
    Preconditions.checkArgument(dn.getValue().isThrow());
    return this.typeEnvFromDeclaredTypes;
  }
  if (outEdges.size() == 1) {
    return envs.get(outEdges.get(0));
  }
  Set<TypeEnv> envSet=new LinkedHashSet<>();
  for (  DiGraphEdge<Node,ControlFlowGraph.Branch> de : outEdges) {
    TypeEnv env=envs.get(de);
    if (env != null) {
      envSet.add(env);
    }
  }
  Preconditions.checkState(!envSet.isEmpty());
  return TypeEnv.join(envSet);
}
