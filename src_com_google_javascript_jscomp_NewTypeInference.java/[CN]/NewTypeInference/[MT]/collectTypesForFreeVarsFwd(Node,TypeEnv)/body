{
  Preconditions.checkArgument(n.isFunction() || n.isName() && NodeUtil.isCallOrNewTarget(n));
  String fnName=n.isFunction() ? symbolTable.getFunInternalName(n) : n.getString();
  NTIScope innerScope=currentScope.getScope(fnName);
  for (  String freeVar : innerScope.getOuterVars()) {
    if (innerScope.getDeclaredTypeOf(freeVar) == null) {
      FunctionType summary=summaries.get(innerScope).getFunType();
      JSType outerType=envGetType(env,freeVar);
      if (outerType == null) {
        outerType=UNKNOWN;
      }
      JSType innerType=summary.getOuterVarPrecondition(freeVar);
      if (!innerType.isLoose() && (n.isName() || n.isFunction() && !outerType.isUndefined()) && !JSType.haveCommonSubtype(outerType,innerType)) {
        warnings.add(JSError.make(n,CROSS_SCOPE_GOTCHA,freeVar,outerType.toString(),innerType.toString()));
      }
      env=envPutType(env,freeVar,n.isFunction() ? JSType.join(innerType,outerType) : innerType);
    }
  }
  return env;
}
