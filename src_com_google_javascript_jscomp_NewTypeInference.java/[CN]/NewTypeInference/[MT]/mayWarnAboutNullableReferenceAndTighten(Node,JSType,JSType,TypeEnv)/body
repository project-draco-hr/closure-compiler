{
  if (!recvType.isUnknown() && !recvType.isTop() && (NULL.isSubtypeOf(recvType) || UNDEFINED.isSubtypeOf(recvType))) {
    JSType minusNull=recvType.removeType(NULL_OR_UNDEFINED);
    if (!minusNull.isBottom()) {
      if (this.reportNullDeref) {
        warnings.add(JSError.make(obj,NULLABLE_DEREFERENCE,recvType.toString()));
      }
      TypeEnv outEnv=inEnv;
      if (obj.isQualifiedName()) {
        QualifiedName qname=QualifiedName.fromNode(obj);
        if (maybeSpecType != null && maybeSpecType.isSubtypeOf(minusNull)) {
          minusNull=maybeSpecType;
        }
        outEnv=updateLvalueTypeInEnv(inEnv,obj,qname,minusNull);
      }
      return new EnvTypePair(outEnv,minusNull);
    }
  }
  return new EnvTypePair(inEnv,recvType);
}
