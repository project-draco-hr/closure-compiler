{
  if (NodeUtil.isEnumDecl(objLit.getParent())) {
    return analyzeEnumObjLitBwd(objLit,outEnv,requiredType);
  }
  TypeEnv env=outEnv;
  JSType result=pickReqObjType(objLit);
  for (Node prop=objLit.getLastChild(); prop != null; prop=prop.getPrevious()) {
    QualifiedName pname=new QualifiedName(NodeUtil.getObjectLitKeyName(prop));
    if (prop.isGetterDef() || prop.isSetterDef()) {
      env=analyzeExprBwd(prop.getFirstChild(),env).env;
    }
 else {
      JSType jsdocType=symbolTable.getPropDeclaredType(prop);
      JSType reqPtype;
      if (jsdocType != null) {
        reqPtype=jsdocType;
      }
 else       if (requiredType.mayHaveProp(pname)) {
        reqPtype=requiredType.getProp(pname);
      }
 else {
        reqPtype=JSType.UNKNOWN;
      }
      EnvTypePair pair=analyzeExprBwd(prop.getFirstChild(),env,reqPtype);
      result=result.withProperty(pname,pair.type);
      env=pair.env;
    }
  }
  return new EnvTypePair(env,result);
}
