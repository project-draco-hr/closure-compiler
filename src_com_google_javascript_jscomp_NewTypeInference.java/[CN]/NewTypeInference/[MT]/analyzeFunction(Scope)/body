{
  println("=== Analyzing function: ",scope.getReadableName()," ===");
  currentScope=scope;
  ControlFlowAnalysis cfa=new ControlFlowAnalysis(compiler,false,false);
  cfa.process(null,scope.getRoot());
  cfg=cfa.getCfg();
  println(cfg);
  List<DiGraphNode<Node,ControlFlowGraph.Branch>> workset=Lists.newLinkedList();
  buildWorkset(cfg.getEntry(),workset);
  if (scope.hasUndeclaredFormalsOrOuters()) {
    Collections.reverse(workset);
    initEdgeEnvsBwd();
    analyzeFunctionBwd(workset);
    Collections.reverse(workset);
    TypeEnv entryEnv=getEntryTypeEnv();
    initEdgeEnvsFwd(entryEnv);
  }
 else {
    TypeEnv entryEnv=getTypeEnvFromDeclaredTypes();
    initEdgeEnvsFwd(entryEnv);
  }
  analyzeFunctionFwd(workset);
  if (scope.isFunction()) {
    createSummary(scope);
  }
}
