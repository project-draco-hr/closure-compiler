{
  Token exprKind=expr.getType();
switch (exprKind) {
case OBJECTLIT:
{
      JSDocInfo jsdoc=expr.getJSDocInfo();
      if (jsdoc != null && jsdoc.makesStructs()) {
        return JSType.TOP_STRUCT;
      }
      if (jsdoc != null && jsdoc.makesDicts()) {
        return JSType.TOP_DICT;
      }
      return expr.hasChildren() ? JSType.TOP_OBJECT : this.commonTypes.getIObjectAnyAny();
    }
case FOR:
  Preconditions.checkState(NodeUtil.isForIn(expr));
return JSType.TOP_OBJECT;
case GETPROP:
case GETELEM:
case IN:
return JSType.TOP_OBJECT;
default :
throw new RuntimeException("Unhandled node for pickReqObjType: " + exprKind);
}
}
