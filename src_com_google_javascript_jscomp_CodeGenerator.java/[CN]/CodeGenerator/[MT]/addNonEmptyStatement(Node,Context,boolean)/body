{
  Node nodeToProcess=n;
  if (!allowNonBlockChild && !n.isBlock()) {
    throw new Error("Missing BLOCK child.");
  }
  if (n.isBlock()) {
    int count=getNonEmptyChildCount(n,2);
    if (count == 0) {
      if (cc.shouldPreserveExtraBlocks()) {
        cc.beginBlock();
        cc.endBlock(cc.breakAfterBlockFor(n,context == Context.STATEMENT));
      }
 else {
        cc.endStatement(true);
      }
      return;
    }
    if (count == 1) {
      Node firstAndOnlyChild=getFirstNonEmptyChild(n);
      boolean alwaysWrapInBlock=cc.shouldPreserveExtraBlocks();
      if (alwaysWrapInBlock || isBlockDeclOrDo(firstAndOnlyChild)) {
        cc.beginBlock();
        add(firstAndOnlyChild,Context.STATEMENT);
        cc.maybeLineBreak();
        cc.endBlock(cc.breakAfterBlockFor(n,context == Context.STATEMENT));
        return;
      }
 else {
        nodeToProcess=firstAndOnlyChild;
      }
    }
    if (count > 1) {
      context=Context.PRESERVE_BLOCK;
    }
  }
  if (nodeToProcess.isEmpty()) {
    cc.endStatement(true);
  }
 else {
    add(nodeToProcess,context);
  }
}
