{
switch (n.getType()) {
case CLASS:
case INTERFACE:
case ENUM:
case NAMESPACE:
    cc.endClass(context == Context.STATEMENT);
  break;
case FUNCTION:
if (n.getLastChild().isEmpty()) {
  cc.endStatement(true);
}
 else {
  cc.endFunction(context == Context.STATEMENT);
}
break;
case DECLARE:
if (n.getParent().getType() != Token.NAMESPACE_ELEMENTS) {
processEnd(n.getFirstChild(),context);
}
break;
case EXPORT:
if (n.getParent().getType() != Token.NAMESPACE_ELEMENTS && n.getFirstChild().getType() != Token.DECLARE) {
processEnd(n.getFirstChild(),context);
}
break;
case COMPUTED_PROP:
if (n.hasOneChild()) {
cc.endStatement(true);
}
break;
case MEMBER_FUNCTION_DEF:
case GETTER_DEF:
case SETTER_DEF:
if (n.getFirstChild().getLastChild().isEmpty()) {
cc.endStatement(true);
}
break;
case MEMBER_VARIABLE_DEF:
cc.endStatement(true);
break;
default :
if (context == Context.STATEMENT) {
cc.endStatement();
}
}
}
