{
  Node current=n;
  Node ancestor;
  while ((ancestor=current.getParent()) != null) {
switch (ancestor.getType()) {
case Token.EXPR_RESULT:
case Token.GETPROP:
      break;
case Token.ASSIGN:
    if (ancestor.getFirstChild() == current) {
      return ancestor.getLastChild();
    }
  break;
case Token.SCRIPT:
case Token.FUNCTION:
case Token.LP:
case Token.BLOCK:
return null;
case Token.VAR:
if (n.hasChildren()) {
return n.getFirstChild();
}
 else {
return null;
}
default :
return null;
}
current=ancestor;
}
return null;
}
