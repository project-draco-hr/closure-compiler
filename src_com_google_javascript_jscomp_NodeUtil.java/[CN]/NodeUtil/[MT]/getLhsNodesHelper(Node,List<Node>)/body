{
switch (n.getType()) {
case Token.VAR:
case Token.CONST:
case Token.LET:
case Token.OBJECT_PATTERN:
case Token.ARRAY_PATTERN:
case Token.PARAM_LIST:
    for (Node child=n.getFirstChild(); child != null; child=child.getNext()) {
      getLhsNodesHelper(child,lhsNodes);
    }
  return;
case Token.DESTRUCTURING_LHS:
case Token.DEFAULT_VALUE:
case Token.CATCH:
case Token.REST:
getLhsNodesHelper(n.getFirstChild(),lhsNodes);
return;
case Token.COMPUTED_PROP:
getLhsNodesHelper(n.getLastChild(),lhsNodes);
return;
case Token.STRING_KEY:
if (n.hasChildren()) {
getLhsNodesHelper(n.getLastChild(),lhsNodes);
}
 else {
Preconditions.checkState(isLValue(n));
lhsNodes.add(n);
}
break;
case Token.NAME:
lhsNodes.add(n);
break;
default :
Preconditions.checkState(n.isEmpty(),"Invalid node in lhs of declaration: %s",n);
}
}
