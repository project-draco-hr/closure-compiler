{
switch (n.getType()) {
case VAR:
case CONST:
case LET:
case OBJECT_PATTERN:
case ARRAY_PATTERN:
case PARAM_LIST:
    for (Node child=n.getFirstChild(); child != null; child=child.getNext()) {
      getLhsNodesHelper(child,lhsNodes);
    }
  return;
case DESTRUCTURING_LHS:
case DEFAULT_VALUE:
case CATCH:
case REST:
getLhsNodesHelper(n.getFirstChild(),lhsNodes);
return;
case COMPUTED_PROP:
getLhsNodesHelper(n.getLastChild(),lhsNodes);
return;
case STRING_KEY:
if (n.hasChildren()) {
getLhsNodesHelper(n.getLastChild(),lhsNodes);
}
 else {
Preconditions.checkState(isLValue(n));
lhsNodes.add(n);
}
break;
case NAME:
lhsNodes.add(n);
break;
default :
Preconditions.checkState(n.isEmpty(),"Invalid node in lhs of declaration: %s",n);
}
}
