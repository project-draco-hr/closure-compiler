{
  Preconditions.checkArgument(callNode.getType() == Token.CALL,"Expected CALL node, got " + Token.name(callNode.getType()));
  if (callNode.isNoSideEffectsCall()) {
    return false;
  }
  Node nameNode=callNode.getFirstChild();
  if (nameNode.getType() == Token.NAME) {
    String name=nameNode.getString();
    if (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)) {
      return false;
    }
  }
 else   if (nameNode.getType() == Token.GETPROP) {
    if (callNode.isOnlyModifiesThisCall() && evaluatesToLocalValue(nameNode.getFirstChild())) {
      return false;
    }
    if (nameNode.getFirstChild().getType() == Token.NAME) {
      String namespaceName=nameNode.getFirstChild().getString();
      if (namespaceName.equals("Math")) {
        return false;
      }
    }
    if (compiler != null && !compiler.hasRegExpGlobalReferences()) {
      if (nameNode.getFirstChild().getType() == Token.REGEXP && REGEXP_METHODS.contains(nameNode.getLastChild().getString())) {
        return false;
      }
 else       if (nameNode.getFirstChild().getType() == Token.STRING && STRING_REGEXP_METHODS.contains(nameNode.getLastChild().getString())) {
        Node param=nameNode.getNext();
        if (param != null && (param.getType() == Token.STRING || param.getType() == Token.REGEXP))         return false;
      }
    }
  }
  return true;
}
