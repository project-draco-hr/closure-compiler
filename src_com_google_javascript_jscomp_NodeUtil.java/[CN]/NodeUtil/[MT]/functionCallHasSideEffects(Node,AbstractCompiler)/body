{
  Preconditions.checkState(callNode.isCall() || callNode.isTaggedTemplateLit(),callNode);
  if (callNode.isNoSideEffectsCall()) {
    return false;
  }
  if (callNode.isOnlyModifiesArgumentsCall() && allArgsUnescapedLocal(callNode)) {
    return false;
  }
  Node callee=callNode.getFirstChild();
  if (callee.isName()) {
    String name=callee.getString();
    if (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)) {
      return false;
    }
  }
 else   if (callee.isGetProp()) {
    if (callNode.hasOneChild() && OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callee.getLastChild().getString())) {
      return false;
    }
    if (callNode.isOnlyModifiesThisCall() && evaluatesToLocalValue(callee.getFirstChild())) {
      return false;
    }
    if (callee.getFirstChild().isName() && callee.isQualifiedName() && callee.getFirstChild().getString().equals("Math")) {
switch (callee.getLastChild().getString()) {
case "abs":
case "acos":
case "acosh":
case "asin":
case "asinh":
case "atan":
case "atanh":
case "atan2":
case "cbrt":
case "ceil":
case "cos":
case "cosh":
case "exp":
case "expm1":
case "floor":
case "hypot":
case "log":
case "log10":
case "log1p":
case "log2":
case "max":
case "min":
case "pow":
case "round":
case "sign":
case "sin":
case "sinh":
case "sqrt":
case "tan":
case "tanh":
case "trunc":
        return false;
case "random":
      return !callNode.hasOneChild();
  }
}
if (compiler != null && !compiler.hasRegExpGlobalReferences()) {
  if (callee.getFirstChild().isRegExp() && REGEXP_METHODS.contains(callee.getLastChild().getString())) {
    return false;
  }
 else   if (isTypedAsString(callee.getFirstChild(),compiler)) {
    String method=callee.getLastChild().getString();
    Node param=callee.getNext();
    if (param != null) {
      if (param.isString()) {
        if (STRING_REGEXP_METHODS.contains(method)) {
          return false;
        }
      }
 else       if (param.isRegExp()) {
        if ("replace".equals(method)) {
          return !param.getNext().isString();
        }
 else         if (STRING_REGEXP_METHODS.contains(method)) {
          return false;
        }
      }
    }
  }
}
}
return true;
}
