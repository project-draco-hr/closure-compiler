{
switch (n.getType()) {
case TEMPLATELIT:
    if (n.hasOneChild()) {
      return TernaryValue.forBoolean(!n.getFirstChild().getString().isEmpty());
    }
  break;
case STRING:
return TernaryValue.forBoolean(n.getString().length() > 0);
case NUMBER:
return TernaryValue.forBoolean(n.getDouble() != 0);
case NOT:
return getPureBooleanValue(n.getLastChild()).not();
case NULL:
case FALSE:
return TernaryValue.FALSE;
case VOID:
if (!mayHaveSideEffects(n.getFirstChild())) {
return TernaryValue.FALSE;
}
break;
case NAME:
String name=n.getString();
if ("undefined".equals(name) || "NaN".equals(name)) {
return TernaryValue.FALSE;
}
 else if ("Infinity".equals(name)) {
return TernaryValue.TRUE;
}
break;
case TRUE:
case REGEXP:
return TernaryValue.TRUE;
case FUNCTION:
case CLASS:
case NEW:
case ARRAYLIT:
case OBJECTLIT:
if (!mayHaveSideEffects(n)) {
return TernaryValue.TRUE;
}
break;
}
return TernaryValue.UNKNOWN;
}
