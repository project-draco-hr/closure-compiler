{
  if (isTryFinallyNode(parent,node)) {
    if (NodeUtil.hasCatchHandler(getCatchBlock(parent))) {
      parent.removeChild(node);
    }
 else {
      node.detachChildren();
    }
  }
 else   if (node.getType() == Token.CATCH) {
    Node tryNode=node.getParent().getParent();
    Preconditions.checkState(NodeUtil.hasFinally(tryNode));
    node.detachFromParent();
  }
 else   if (isTryCatchNodeContainer(node)) {
    Node tryNode=node.getParent();
    Preconditions.checkState(NodeUtil.hasFinally(tryNode));
    node.detachChildren();
  }
 else   if (node.getType() == Token.BLOCK) {
    node.detachChildren();
  }
 else   if (isStatementBlock(parent) || isSwitchCase(node)) {
    parent.removeChild(node);
  }
 else   if (parent.getType() == Token.VAR) {
    if (parent.hasMoreThanOneChild()) {
      parent.removeChild(node);
    }
 else {
      parent.removeChild(node);
      removeChild(parent.getParent(),parent);
    }
  }
 else   if (parent.getType() == Token.LABEL && node == parent.getLastChild()) {
    parent.removeChild(node);
    removeChild(parent.getParent(),parent);
  }
 else   if (parent.getType() == Token.FOR && parent.getChildCount() == 4) {
    parent.replaceChild(node,new Node(Token.EMPTY));
  }
 else {
    throw new IllegalStateException("Invalid attempt to remove node: " + node.toString() + " of "+ parent.toString());
  }
}
