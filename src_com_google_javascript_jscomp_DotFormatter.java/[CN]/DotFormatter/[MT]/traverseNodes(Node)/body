{
  int keyParent=key(parent);
  for (Node child=parent.getFirstChild(); child != null; child=child.getNext()) {
    int keyChild=key(child);
    builder.append(INDENT);
    builder.append(formatNodeName(keyParent));
    builder.append(ARROW);
    builder.append(formatNodeName(keyChild));
    builder.append(" [weight=1];\n");
    traverseNodes(child);
  }
  if (cfg != null && cfg.hasNode(parent)) {
    List<DiGraphEdge<Node,Branch>> outEdges=cfg.getOutEdges(parent);
    String[] edgeList=new String[outEdges.size()];
    for (int i=0; i < edgeList.length; i++) {
      DiGraphEdge<Node,ControlFlowGraph.Branch> edge=outEdges.get(i);
      DiGraphNode<Node,Branch> succ=edge.getDestination();
      String toNode=null;
      if (succ == cfg.getImplicitReturn()) {
        toNode="RETURN";
      }
 else {
        int keySucc=key(succ.getValue());
        toNode=formatNodeName(keySucc);
      }
      edgeList[i]=formatNodeName(keyParent) + ARROW + toNode+ " [label=\""+ edge.getValue()+ "\", "+ "fontcolor=\"red\", "+ "weight=0.01, color=\"red\"];\n";
    }
    Arrays.sort(edgeList);
    for (    String element : edgeList) {
      builder.append(INDENT);
      builder.append(element);
    }
  }
}
