{
switch (propType) {
case VAR_ARGS_NAME:
    return "var_args_name";
case JSDOC_INFO_PROP:
  return "jsdoc_info";
case INCRDECR_PROP:
return "incrdecr";
case QUOTED_PROP:
return "quoted";
case OPT_ARG_NAME:
return "opt_arg";
case SYNTHETIC_BLOCK_PROP:
return "synthetic";
case ADDED_BLOCK:
return "added_block";
case ORIGINALNAME_PROP:
return "originalname";
case SIDE_EFFECT_FLAGS:
return "side_effect_flags";
case IS_CONSTANT_NAME:
return "is_constant_name";
case IS_NAMESPACE:
return "is_namespace";
case DIRECTIVES:
return "directives";
case DIRECT_EVAL:
return "direct_eval";
case FREE_CALL:
return "free_call";
case STATIC_SOURCE_FILE:
return "source_file";
case INPUT_ID:
return "input_id";
case SLASH_V:
return "slash_v";
case INFERRED_FUNCTION:
return "inferred";
case CHANGE_TIME:
return "change_time";
case REFLECTED_OBJECT:
return "reflected_object";
case STATIC_MEMBER:
return "static_member";
case GENERATOR_FN:
return "generator_fn";
case ARROW_FN:
return "arrow_fn";
case ASYNC_FN:
return "async_fn";
case YIELD_FOR:
return "yield_for";
case EXPORT_DEFAULT:
return "export_default";
case EXPORT_ALL_FROM:
return "export_all_from";
case IS_CONSTANT_VAR:
return "is_constant_var";
case GENERATOR_MARKER:
return "is_generator_marker";
case GENERATOR_SAFE:
return "is_generator_safe";
case RAW_STRING_VALUE:
return "raw_string_value";
case COMPUTED_PROP_METHOD:
return "computed_prop_method";
case COMPUTED_PROP_GETTER:
return "computed_prop_getter";
case COMPUTED_PROP_SETTER:
return "computed_prop_setter";
case COMPUTED_PROP_VARIABLE:
return "computed_prop_variable";
case ANALYZED_DURING_GTI:
return "analyzed_during_gti";
case CONSTANT_PROPERTY_DEF:
return "constant_property_def";
case DECLARED_TYPE_EXPR:
return "declared_type_expr";
case TYPE_BEFORE_CAST:
return "type_before_cast";
case OPT_ES6_TYPED:
return "opt_es6_typed";
case GENERIC_TYPE_LIST:
return "generic_type";
case IMPLEMENTS:
return "implements";
case CONSTRUCT_SIGNATURE:
return "construct_signature";
case ACCESS_MODIFIER:
return "access_modifier";
case NON_INDEXABLE:
return "non_indexable";
case PARSE_RESULTS:
return "parse_results";
case GOOG_MODULE:
return "goog_module";
case GOOG_MODULE_REQUIRE:
return "goog_module_require";
case FEATURE_SET:
return "feature_set";
case IS_MODULE_NAME:
return "is_module_name";
case WAS_PREVIOUSLY_PROVIDED:
return "was_previously_provided";
case IS_ES6_CLASS:
return "is_es6_class";
default :
throw new IllegalStateException("unexpected prop id " + propType);
}
}
