{
switch (propType) {
case VAR_ARGS_NAME:
    return "var_args_name";
case JSDOC_INFO_PROP:
  return "jsdoc_info";
case INCRDECR_PROP:
return "incrdecr";
case QUOTED_PROP:
return "quoted";
case OPT_ARG_NAME:
return "opt_arg";
case SYNTHETIC_BLOCK_PROP:
return "synthetic";
case EMPTY_BLOCK:
return "empty_block";
case ORIGINALNAME_PROP:
return "originalname";
case SIDE_EFFECT_FLAGS:
return "side_effect_flags";
case IS_CONSTANT_NAME:
return "is_constant_name";
case IS_NAMESPACE:
return "is_namespace";
case IS_DISPATCHER:
return "is_dispatcher";
case DIRECTIVES:
return "directives";
case DIRECT_EVAL:
return "direct_eval";
case FREE_CALL:
return "free_call";
case STATIC_SOURCE_FILE:
return "source_file";
case INPUT_ID:
return "input_id";
case LENGTH:
return "length";
case SLASH_V:
return "slash_v";
case INFERRED_FUNCTION:
return "inferred";
case CHANGE_TIME:
return "change_time";
case REFLECTED_OBJECT:
return "reflected_object";
case STATIC_MEMBER:
return "static_member";
case GENERATOR:
return "generator";
case YIELD_FOR:
return "yield_for";
default :
throw new IllegalStateException("unexpected prop id " + propType);
}
}
