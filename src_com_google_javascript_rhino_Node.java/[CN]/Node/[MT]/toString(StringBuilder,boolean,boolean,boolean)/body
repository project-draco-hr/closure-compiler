{
  sb.append(Token.name(type));
  if (this instanceof StringNode) {
    sb.append(' ');
    sb.append(getString());
  }
 else   if (type == Token.FUNCTION) {
    sb.append(' ');
    if (first == null || first.getType() != Token.NAME) {
      sb.append("<invalid>");
    }
 else {
      sb.append(first.getString());
    }
  }
 else   if (type == Token.NUMBER) {
    sb.append(' ');
    sb.append(getDouble());
  }
  if (printSource) {
    int lineno=getLineno();
    if (lineno != -1) {
      sb.append(' ');
      sb.append(lineno);
    }
  }
  if (printAnnotations) {
    int[] keys=getSortedPropTypes();
    for (int i=0; i < keys.length; i++) {
      int type=keys[i];
      PropListItem x=lookupProperty(type);
      sb.append(" [");
      sb.append(propToString(type));
      sb.append(": ");
      String value;
switch (type) {
default :
        value=x.toString();
      break;
  }
  sb.append(value);
  sb.append(']');
}
}
if (printType) {
if (typei != null) {
  String typeString=typei.toString();
  if (typeString != null) {
    sb.append(" : ");
    sb.append(typeString);
  }
}
}
}
