{
  if (args.length == 0) {
    usage();
  }
  Runtime r=Runtime.getRuntime();
  Process p=null;
  try {
    p=r.exec(args);
  }
 catch (  IOException e) {
    if (args[0].equals("generatejs")) {
      System.out.println("generatejs not found, required for generating " + "fuzz test cases");
      System.out.println("See: http://github.com/rictic/generatejs");
      System.exit(2);
    }
 else {
      throw e;
    }
  }
  BufferedReader br=new BufferedReader(new InputStreamReader(p.getInputStream()));
  int programsCompiled=0, compilerErrors=0;
  for (String program=br.readLine(); program != null; program=br.readLine()) {
    try {
      compile(program,programsCompiled);
    }
 catch (    Exception e) {
      System.out.println("Compiler error on program #" + programsCompiled + ":");
      System.out.println(program);
      System.out.println("Details:");
      e.printStackTrace(System.out);
      System.out.println("\n\n\n");
      compilerErrors++;
    }
    programsCompiled++;
  }
  if (compilerErrors == 0) {
    System.out.println(programsCompiled + " programs compiled without error");
    System.exit(0);
  }
 else {
    System.out.println("==========FAILURE===========");
    System.out.println(compilerErrors + " programs caused an error within the compiler out of " + programsCompiled+ " tested.");
    System.exit(1);
  }
}
