{
  Preconditions.checkNotNull(replacements,"\"replacements\" is null.");
  int size=replacements.size();
  if ((size == 1) && node.checkTreeEqualsSilent(replacements.get(0))) {
    return;
  }
  int parentType=parent.getType();
  Preconditions.checkState(size == 1 || parentType == Token.BLOCK || parentType == Token.SCRIPT || parentType == Token.LABEL);
  if (parentType == Token.LABEL && size != 1) {
    Node block=new Node(Token.BLOCK);
    for (    Node newChild : replacements) {
      newChild.copyInformationFrom(node);
      Node oldParent=newChild.getParent();
      block.addChildToBack(newChild);
    }
    parent.replaceChild(node,block);
  }
 else {
    for (    Node newChild : replacements) {
      newChild.copyInformationFrom(node);
      Node oldParent=newChild.getParent();
      parent.addChildBefore(newChild,node);
    }
    parent.removeChild(node);
  }
  notifyOfRemoval(node);
}
