{
  typeCheck(LINE_JOINER.join("/** @type {Array<string>} */","var arr = ['str'];","arr[0]++;"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("var arr = ['str'];","arr[0]++;"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("function foo (/** Array<string> */ a) {}","/** @type {Array<number>} */","var b = [1];","foo(b);"),NewTypeInference.INVALID_ARGUMENT_TYPE);
  typeCheck(LINE_JOINER.join("function foo (/** Array<string> */ a) {}","foo([1]);"),NewTypeInference.INVALID_ARGUMENT_TYPE);
  typeCheck(LINE_JOINER.join("/** @type {!Array<number>} */","var arr = [1, 2, 3];","arr[0] = 'str';"),NewTypeInference.MISTYPED_ASSIGN_RHS);
  typeCheck(LINE_JOINER.join("/** @type {!Array<number>} */","var arr = [1, 2, 3];","arr['0'] = 'str';"),NewTypeInference.INVALID_INDEX_TYPE);
  typeCheck(LINE_JOINER.join("/** @type {Array<number>} */","var arr = [1, 2, 3];","arr[0] = 'str';"),NewTypeInference.MISTYPED_ASSIGN_RHS);
  typeCheck(LINE_JOINER.join("function f(/** Array<number> */ arr) {","  arr[0] = 'str';","}"),NewTypeInference.NULLABLE_DEREFERENCE,NewTypeInference.MISTYPED_ASSIGN_RHS);
  typeCheck(LINE_JOINER.join("/** @const */","var arr = [1, 2, 3];","arr[0] = 'str';"),NewTypeInference.MISTYPED_ASSIGN_RHS);
  typeCheck(LINE_JOINER.join("var arr = [1, 2, 3];","arr[0] = 'str';"));
  typeCheck(LINE_JOINER.join("/** @constructor */ function Super(){}","/** @constructor @extends {Super} */ function Sub(){}","/** @type {!Array<Super>} */ var arr = [new Sub];","arr[0] = new Super;"));
  typeCheck(LINE_JOINER.join("/** @type {Array<number>} */ var arr = [];","arr[0] = 'str';"),NewTypeInference.MISTYPED_ASSIGN_RHS);
  typeCheck(LINE_JOINER.join("/** @type {Array<number>} */ var arr = [];","(function (/** Array<string> */ x){})(arr);"),NewTypeInference.INVALID_ARGUMENT_TYPE);
  typeCheck(LINE_JOINER.join("function /** string */ f(/** !Array<number> */ arr) {","  return arr[0];","}"),NewTypeInference.RETURN_NONDECLARED_TYPE);
  typeCheck(LINE_JOINER.join("var arr = [];","arr[0] = 5;","var /** Array<string> */ as = arr;"));
}
