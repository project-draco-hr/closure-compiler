{
  typeCheck(Joiner.on('\n').join("/** @enum {!Object} */ var E = {FOO: { prop: 1 }};","E.FOO.prop - 5;"),TypeCheck.INEXISTENT_PROPERTY);
  typeCheck(Joiner.on('\n').join("/** @enum {{prop: number}} */ var E = {FOO: { prop: 1 }};","E.FOO.prop - 5;"));
  typeCheck(Joiner.on('\n').join("/** @constructor */","function Foo() {","  /** @const */ this.prop = 1;","}","/** @enum {!Foo} */","var E = { ONE: new Foo() };","function f(/** E */ x) { x.prop < 'str'; }"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(Joiner.on('\n').join("/** @constructor */","function Foo() {","  /** @const */ this.prop = 1;","}","/** @enum {!Foo} */","var E = { ONE: new Foo() };","function f(/** E */ x) { x.prop = 2; }"),NewTypeInference.CONST_PROPERTY_REASSIGNED);
  typeCheck(Joiner.on('\n').join("/** @constructor */","function Foo() {}","/** @enum {!Foo} */","var E = { A: new Foo };","function f(/** E */ x) { x instanceof Foo; }"));
}
