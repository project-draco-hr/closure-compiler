{
  typeCheck("var n = new Number();\n" + "n.prop = 0;\n" + "n.prop - 5;");
  typeCheck("var n = Number();\n" + "n.prop = 0;\n" + "n.prop - 5;",TypeCheck.INEXISTENT_PROPERTY);
  typeCheck("/** @constructor @return {number} */ function Foo(){ return 5; }\n" + "var /** !Foo */ f = new Foo;\n" + "var /** number */ n = Foo();");
  typeCheck("/** @constructor */ function Foo(){ return 5; }\n" + "var /** !Foo */ f = new Foo;\n" + "var n = Foo();",TypeCheck.CONSTRUCTOR_NOT_CALLABLE);
  typeCheck("/** @constructor @return {?} */ function Foo(){}\n" + "var /** !Foo */ f = new Foo;\n" + "var n = Foo();",TypeCheck.CONSTRUCTOR_NOT_CALLABLE);
}
