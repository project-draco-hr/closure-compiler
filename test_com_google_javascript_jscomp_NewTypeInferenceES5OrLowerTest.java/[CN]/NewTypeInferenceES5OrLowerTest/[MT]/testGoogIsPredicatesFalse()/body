{
  typeCheck(CLOSURE_BASE + "/** @constructor */\n" + "function Foo() {}\n"+ "function f(/** Foo */ x) {\n"+ "  var /** !Foo */ y;\n"+ "  if (!goog.isNull(x)) {\n"+ "    y = x;\n"+ "  }\n"+ "  y = x;\n"+ "}",NewTypeInference.MISTYPED_ASSIGN_RHS);
  typeCheck(CLOSURE_BASE + "/** @param {number=} x */\n" + "function f(x) {\n"+ "  if (!goog.isDef(x)) {\n"+ "    var /** undefined */ u = x;\n"+ "  }\n"+ "}");
  typeCheck(CLOSURE_BASE + "/** @constructor */\n" + "function Foo() {}\n"+ "/** @param {Foo=} x */\n"+ "function f(x) {\n"+ "  if (!goog.isDefAndNotNull(x)) {\n"+ "    var /** (null|undefined) */ y = x;\n"+ "  }\n"+ "}");
  typeCheck(CLOSURE_BASE + "function f(/** (number|string) */ x) {\n" + "  if (!goog.isString(x)) {\n"+ "    x - 5;\n"+ "  }\n"+ "}");
  typeCheck(CLOSURE_BASE + "function f(/** (number|string) */ x) {\n" + "  if (!goog.isNumber(x)) {\n"+ "    x < 'str';\n"+ "  }\n"+ "}");
  typeCheck(CLOSURE_BASE + "function f(/** (number|boolean) */ x) {\n" + "  if (!goog.isBoolean(x)) {\n"+ "    x - 5;\n"+ "  }\n"+ "}");
  typeCheck(CLOSURE_BASE + "function f(/** (number|!Array<number>) */ x) {\n" + "  if (!goog.isArray(x)) {\n"+ "    x - 5;\n"+ "  }\n"+ "}");
  typeCheck(CLOSURE_BASE + "function f(x) {\n" + "  if (goog.isArray(x)) {\n"+ "    return x[0] - 5;\n"+ "  }\n"+ "}");
  typeCheck(CLOSURE_BASE + "function f(/** (number|function(number)) */ x) {\n" + "  if (!goog.isFunction(x)) {\n"+ "    x - 5;\n"+ "  }\n"+ "}");
  typeCheck(CLOSURE_BASE + "/** @constructor */\n" + "function Foo() {}\n"+ "/** @param {?Foo} x */\n"+ "function f(x) {\n"+ "  if (!goog.isObject(x)) {\n"+ "    var /** null */ y = x;\n"+ "  }\n"+ "}");
}
