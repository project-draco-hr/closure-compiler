{
  typeCheck(Joiner.on('\n').join("/** @const */ var ns = {};","/** @enum {number} */","ns.E = {","  ONE: 1,","  TWO: true","};"),NewTypeInference.INVALID_OBJLIT_PROPERTY_TYPE);
  typeCheck(Joiner.on('\n').join("/** @enum */","var E = { A: 1 };","/** @enum */","E.E2 = { B: true };","var /** E */ x = E.A;"),NewTypeInference.INVALID_OBJLIT_PROPERTY_TYPE);
  typeCheck(Joiner.on('\n').join("/** @enum */","var E = { A: 1 };","/** @constructor */","E.Foo = function(x) {};","var /** E */ x = E.A;"));
  typeCheck(Joiner.on('\n').join("/** @const */","var ns = {};","/** @enum {number} */","ns.E = { A: 1 };","/** @constructor */","ns.E.Foo = function(x) {};"));
  typeCheck(Joiner.on('\n').join("/** @const */","var ns = {};","/** @enum {number} */","ns.E = { A: 1 };","/** @constructor */","ns.E.Foo = function(x) {};","function f() { ns.E.Foo(); }"),TypeCheck.CONSTRUCTOR_NOT_CALLABLE);
}
