{
  typeCheck("/** @const */ var ns = {};\n" + "/** @enum {number} */\n" + "ns.E = {\n"+ "  ONE: 1,\n"+ "  TWO: true\n"+ "};",NewTypeInference.INVALID_OBJLIT_PROPERTY_TYPE);
  typeCheck("/** @enum */\n" + "var E = { A: 1 };\n" + "/** @enum */\n"+ "E.E2 = { B: true };\n"+ "var /** E */ x = E.A;",NewTypeInference.INVALID_OBJLIT_PROPERTY_TYPE);
  typeCheck("/** @enum */\n" + "var E = { A: 1 };\n" + "/** @constructor */\n"+ "E.Foo = function(x) {};\n"+ "var /** E */ x = E.A;");
  typeCheck("/** @const */\n" + "var ns = {};\n" + "/** @enum {number} */\n"+ "ns.E = { A: 1 };\n"+ "/** @constructor */\n"+ "ns.E.Foo = function(x) {};");
  typeCheck("/** @const */\n" + "var ns = {};\n" + "/** @enum {number} */\n"+ "ns.E = { A: 1 };\n"+ "/** @constructor */\n"+ "ns.E.Foo = function(x) {};\n"+ "function f() { ns.E.Foo(); }",TypeCheck.CONSTRUCTOR_NOT_CALLABLE);
}
