{
  typeCheck(Joiner.on('\n').join("/** @interface */ function Parent() {}","/** @type {number} */ Parent.prototype.y;","/** @constructor @implements {Parent} */ function Child() {}","/** @param {string} x */ Child.prototype.y = function(x) {};"),GlobalTypeInfo.INVALID_PROP_OVERRIDE);
  typeCheck(Joiner.on('\n').join("/** @interface */ function Parent() {}","/** @param {string} x */ Parent.prototype.y = function(x) {};","/** @constructor @implements {Parent} */ function Child() {}","/** @type {number} */ Child.prototype.y = 9;"),GlobalTypeInfo.INVALID_PROP_OVERRIDE);
  typeCheck(Joiner.on('\n').join("/** @constructor */ function Parent() {}","/** @type {number} */ Parent.prototype.y = 9;","/** @constructor @extends {Parent} */ function Child() {}","/** @param {string} x */ Child.prototype.y = function(x) {};"),GlobalTypeInfo.INVALID_PROP_OVERRIDE);
  typeCheck(Joiner.on('\n').join("/** @constructor */ function Parent() {}","/** @param {string} x */ Parent.prototype.y = function(x) {};","/** @constructor @extends {Parent} */ function Child() {}","/** @type {number} */ Child.prototype.y = 9;"),GlobalTypeInfo.INVALID_PROP_OVERRIDE);
  typeCheck(Joiner.on('\n').join("/** @constructor */","function Foo() {}","Foo.prototype.f = function(/** number */ x, /** number */ y) {};","/** @constructor @extends {Foo} */","function Bar() {}","/** @override */","Bar.prototype.f = function(x) {};"));
}
