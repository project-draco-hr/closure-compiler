{
  typeCheck(Joiner.on('\n').join("/** @enum {number} */","var E = { ONE: 1 };","function f(cond) {","  var x = cond ? E.ONE : 5;","  x - 2;","  var /** E */ y = x;","}"),NewTypeInference.MISTYPED_ASSIGN_RHS);
  typeCheck(Joiner.on('\n').join("/** @constructor */","function High() {}","/** @constructor @extends {High} */","function Low() {}","/** @enum {!Low} */","var E = { A: new Low };","function f(cond) {","  var x = cond ? E.A : new High;","  var /** High */ y = x;","  var /** E */ z = x;","}"),NewTypeInference.MISTYPED_ASSIGN_RHS);
  typeCheck(Joiner.on('\n').join("/** @constructor */","function High() {}","/** @constructor @extends {High} */","function Low() {}","/** @enum {!High} */","var E = { A: new High };","function f(cond) {","  var x = cond ? E.A : new Low;","  if (!(x instanceof Low)) { var /** E */ y = x; }","}"));
  typeCheck(Joiner.on('\n').join("/** @enum {?} */","var E = { A: 123 };","function f(x) {","  var /** string */ s = x;","  var /** E */ y = x;","  s = x;","}","f('str');"),NewTypeInference.INVALID_ARGUMENT_TYPE);
  typeCheck(Joiner.on('\n').join("/** @enum {number} */","var E1 = { ONE: 1 };","/** @enum {number} */","var E2 = { TWO: 1 };","/** @enum {number} */","var E3 = { THREE: 1 };","function f(x) {","  var /** (E1|E2) */ y = x;","  var /** (E1|E3) */ z = x;","  var /** E1 */ w = x;","}","f(E2.TWO);"),NewTypeInference.INVALID_ARGUMENT_TYPE);
  typeCheck(Joiner.on('\n').join("/** @enum {number} */","var E = { ONE: 1 };","function f(x) {","  var /** E */ y = x;","  var /** number */ z = x;","}","f(123);"),NewTypeInference.INVALID_ARGUMENT_TYPE);
  typeCheck(Joiner.on('\n').join("/** @constructor */","function High() {}","/** @constructor @extends {High} */","function Low() {}","/** @enum {!Low} */","var E = { A: new Low };","function f(x) {","  var /** !High */ y = x;","  var /** E */ z = x;","}","f(new High);"),NewTypeInference.INVALID_ARGUMENT_TYPE);
  typeCheck(Joiner.on('\n').join("/** @interface */","function High1() {}","/** @interface */","function High2() {}","/** @constructor @implements {High1} @implements {High2} */","function Low() {}","/** @enum {!Low} */","var E = { A: new Low };","function f(x) {","  var /** (!High1 | !High2) */ y = x;","  var /** E */ z = x;","}","f(/** @type {!High1} */ (new Low));"),NewTypeInference.INVALID_ARGUMENT_TYPE);
  typeCheck(Joiner.on('\n').join("/** @constructor */","function High() {}","/** @constructor @extends {High} */","function Low() {}","/** @enum {!High} */","var E = { A: new High };","/** @param {function(E)|function(!Low)} x */","function f(x) { x(123); }"),JSTypeCreatorFromJSDoc.UNION_IS_UNINHABITABLE);
}
