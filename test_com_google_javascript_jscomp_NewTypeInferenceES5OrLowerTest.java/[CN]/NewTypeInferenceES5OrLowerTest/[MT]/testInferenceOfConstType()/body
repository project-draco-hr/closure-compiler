{
  typeCheck(LINE_JOINER.join("/** @const */","var s = 'str';","function f() { s - 5; }"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("function f(/** string */ x) {","  /** @const */","  var s = x;","  function g() { s - 5; }","}"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("/** @const */","var r = /find/;"));
  typeCheck(LINE_JOINER.join("/** @const */","var r = /find/;","function g() { r - 5; }"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("/** @const */","var a = [5];"));
  typeCheck(LINE_JOINER.join("/** @const */","var a = [5];","function g() { a - 5; }"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("var x;","/** @const */ var o = x = {};","function g() { return o.prop; }"),NewTypeInference.INEXISTENT_PROPERTY);
  typeCheck(LINE_JOINER.join("/** @const */ var o = (0,{});","function g() { return o.prop; }"),NewTypeInference.INEXISTENT_PROPERTY);
  typeCheck(LINE_JOINER.join("/** @const */ var s = true ? null : null;","function g() { s - 5; }"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("/** @const */ var s = true ? void 0 : undefined;","function g() { s - 5; }"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("/** @const */ var b = true ? (1<2) : ('' in {});","function g() { b - 5; }"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("/** @const */ var n = 0 || 6;","function g() { n < 'str'; }"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("/** @const */ var s = 'str' + 5;","function g() { s - 5; }"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("var /** string */ x;","/** @const */","var s = x;","function g() { s - 5; }"),NewTypeInference.MISTYPED_ASSIGN_RHS,NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("/** @constructor */","function Foo() {","  /** @const */","  this.prop = 'str';","}","(new Foo).prop - 5;"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("/** @constructor */","function Foo(x) {","  /** @const */","  this.prop = x;","}"),GlobalTypeInfo.COULD_NOT_INFER_CONST_TYPE);
  typeCheck(LINE_JOINER.join("/** @constructor */","function Foo() {}","/** @const */","Foo.prop = 'str';","function g() { Foo.prop - 5; }"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("function f(/** string */ s) {","  /** @constructor */","  function Foo() {}","  /** @const */","  Foo.prototype.prop = s;","  function g() {","    (new Foo).prop - 5;","  }","}"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("function f(s) {","  /** @constructor */","  function Foo() {}","  /** @const */","  Foo.prototype.prop = s;","}"),GlobalTypeInfo.COULD_NOT_INFER_CONST_TYPE);
  typeCheck(LINE_JOINER.join("/** @const */","var ns = {};","/** @const */","ns.prop = 'str';","function f() {","  ns.prop - 5;","}"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("function f(x, y) {","  /** @const */","  var n = x - y;","  function g() { n < 'str'; }","}"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("function f(x) {","  /** @const */","  var notx = !x;","  function g() { notx - 5; }","}"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("/** @const */","var lit = { a: 'a', b: 'b' };","function g() { lit.a - 5; }"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("/** @const */","var n = ('str', 123);","function f() { n < 'str'; }"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("/** @const */","var s = x;","var /** string */ x;","function f() { s; }"),GlobalTypeInfo.COULD_NOT_INFER_CONST_TYPE);
  typeCheck(LINE_JOINER.join("function f(x) {","  /** @const */","  var c = x;","}"));
  typeCheck(LINE_JOINER.join("function f(x) {","  /** @const */","  var c = x;","  function g() { c; }","}"),GlobalTypeInfo.COULD_NOT_INFER_CONST_TYPE);
  typeCheck(LINE_JOINER.join("function f(x) {","  /** @const */","  var c = { a: 1, b: x };","}"));
  typeCheck(LINE_JOINER.join("/**"," * @constructor"," * @param {{ a: string }} x"," */","function Foo(x) {","  /** @const */","  this.prop = x.a;","}","(new Foo({ a: ''})).prop - 5;"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("/** @return {string} */","function f() { return ''; }","/** @const */","var s = f();","function g() { s - 5; }"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("/** @const */","var s = f();","/** @return {string} */","function f() { return ''; }","function g() { s; }"),GlobalTypeInfo.COULD_NOT_INFER_CONST_TYPE);
  typeCheck(LINE_JOINER.join("/** @constructor */","function Foo() {}","/** @constructor */","function Bar() {}","/** @const */","var foo = new Foo;","function g() {","  var /** Bar */ bar = foo;","}"),NewTypeInference.MISTYPED_ASSIGN_RHS);
  typeCheck(LINE_JOINER.join("/** @const */","var n1 = 1;","/** @const */","var n2 = n1;","function g() { n2 < 'str'; }"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("/** @constructor */ function Bar() {}","/**"," * @constructor"," * @final"," */","var Foo = Bar;"));
  typeCheck(LINE_JOINER.join("/** @constructor */ function Bar() {}","/** @const */","var ns = {};","/**"," * @constructor"," * @final"," */","ns.Foo = Bar;"));
  typeCheck(LINE_JOINER.join("/**"," * @constructor"," * @final"," */","var Foo = function() {};","Foo = /** @type {?} */ (function() {});"));
  typeCheck(LINE_JOINER.join("/** @const */","var x = whatever.prop;","function g() { x; }"),GlobalTypeInfo.COULD_NOT_INFER_CONST_TYPE);
  typeCheckCustomExterns(DEFAULT_EXTERNS + "var NOT_A_CONST_DONT_WARN;","");
  typeCheck(LINE_JOINER.join("/** @const */ var ns = {};","/** @constructor */","ns.Foo = function() {};","/** @const */","var c = new ns.Foo();"));
  typeCheck(LINE_JOINER.join("/** @const */","var ns = {};","/**"," * @constructor"," * @param {T} x"," * @template T"," */","ns.Foo = function(x) {};","/** @const */","var c = new ns.Foo(123);","var /** !ns.Foo<string> */ x = c;"),NewTypeInference.MISTYPED_ASSIGN_RHS);
}
