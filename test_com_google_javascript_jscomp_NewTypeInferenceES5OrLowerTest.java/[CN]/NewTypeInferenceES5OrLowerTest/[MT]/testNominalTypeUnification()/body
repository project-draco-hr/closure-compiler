{
  typeCheck(Joiner.on('\n').join("/**"," * @constructor"," * @template T, U"," * @param {T} x"," */","function Foo(x) {}","/**"," * @template T"," * @param {!Foo<T>} x"," */","function fn(x) {}","fn(new Foo('asdf'));"));
  typeCheck(Joiner.on('\n').join("/**"," * @constructor"," * @template S, T"," * @param {S} x"," */","function Foo(x) {","  /** @type {S} */ this.prop = x;","}","/**"," * @template T"," * @param {!Foo<T>} x"," * @return {T}"," */","function fn(x) { return x.prop; }","fn(new Foo('asdf')) - 5;"),NewTypeInference.INVALID_OPERAND_TYPE);
}
