{
  typeCheck(LINE_JOINER.join("/** @constructor */","function X() { this.p = 1; }","/** @constructor */","function Y() { this.p = 2; }","/** @param {(!X|!Y)} a */","function fn(a) {","  a.p;","  /** @type {!X} */ (a);","}"));
  typeCheck(LINE_JOINER.join("/** @interface */","function High1() {}","/** @interface */","function High2() {}","/**"," * @constructor"," * @implements {High1}"," * @implements {High2}"," */","function Low() {}","function f(x) {","  var /** !High1 */ v1 = x;","  var /** !High2 */ v2 = x;","}"),NewTypeInference.MISTYPED_ASSIGN_RHS);
  typeCheck(LINE_JOINER.join("/** @interface */","function High1() {}","/** @interface */","function High2() {}","/** @interface */","function High3() {}","/**"," * @interface"," * @extends {High1}"," * @extends {High2}"," */","function Mid() {}","/**"," * @interface"," * @extends {Mid}"," * @extends {High3}"," */","function Low() {}","function f(x) {","  var /** !High1 */ v1 = x;","  var /** (!High2|!High3) */ v2 = x;","}"),NewTypeInference.MISTYPED_ASSIGN_RHS);
  typeCheck(LINE_JOINER.join("/** @constructor */","function Foo() {}","/** @param {!Foo} x */","function f(x) {","  if (x.prop1) {","    x.prop1.prop2 += 1234;","  }","}"));
  typeCheck(LINE_JOINER.join("/** @constructor */","function Foo() {}","/** @param {!Foo} x */","function f(x) {","  if (x.prop1 && x.prop1.prop2) {","    x.prop1.prop3 += 1234;","  }","}"));
}
