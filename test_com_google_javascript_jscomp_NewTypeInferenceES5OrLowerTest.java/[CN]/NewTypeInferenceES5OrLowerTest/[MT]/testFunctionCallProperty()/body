{
  typeCheck(Joiner.on('\n').join("function f(/** number */ x) {}","f.call(null, 'asdf');"),NewTypeInference.INVALID_ARGUMENT_TYPE);
  typeCheck(Joiner.on('\n').join("function f(/** number */ x) {}","f.call(null);"),TypeCheck.WRONG_ARGUMENT_COUNT);
  typeCheck(Joiner.on('\n').join("function f(/** number */ x) {}","f.call(null, 1, 2);"),TypeCheck.WRONG_ARGUMENT_COUNT);
  typeCheck(Joiner.on('\n').join("/** @constructor */","function Foo() {}","/** @param {number} x */","Foo.prototype.f = function(x) {};","Foo.prototype.f.call({ a: 123}, 1);"),NewTypeInference.INVALID_ARGUMENT_TYPE);
  typeCheck(Joiner.on('\n').join("function f(x) {","  x(123) - 5;","  x.call(null, 'asdf');","}","f(function(/** string */ s) { return s; });"),NewTypeInference.INVALID_ARGUMENT_TYPE);
  typeCheck(Joiner.on('\n').join("/**"," * @template T"," * @param {T} x"," * @return {T}"," */","function f(x) { return x; }","var /** number */ n = f.call(null, 'asdf');"),NewTypeInference.MISTYPED_ASSIGN_RHS);
  typeCheck(Joiner.on('\n').join("/** @constructor */","function Foo() {}","new Foo.call(null);"),NewTypeInference.NOT_A_CONSTRUCTOR);
}
