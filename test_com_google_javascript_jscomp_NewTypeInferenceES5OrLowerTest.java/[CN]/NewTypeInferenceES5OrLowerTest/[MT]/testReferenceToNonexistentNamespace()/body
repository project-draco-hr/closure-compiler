{
  typeCheck(Joiner.on('\n').join("/** @const */ var ns = {};","/** @constructor */ ns.subns.Foo = function(){};"),TypeCheck.INEXISTENT_PROPERTY);
  typeCheck(Joiner.on('\n').join("/** @const */ var ns = {};","ns.subns.subsubns = {};"),TypeCheck.INEXISTENT_PROPERTY);
  typeCheck(Joiner.on('\n').join("/** @const */ var ns = {};","/** @enum {number} */ ns.subns.NUM = { N : 1 };"),TypeCheck.INEXISTENT_PROPERTY);
  typeCheck(Joiner.on('\n').join("/** @const */ var ns = {};","/** @typedef {number} */ ns.subns.NUM;"),TypeCheck.INEXISTENT_PROPERTY);
  typeCheck(Joiner.on('\n').join("/** @constructor */ function Foo(){}","Foo.subns.subsubns = {};"),TypeCheck.INEXISTENT_PROPERTY);
  typeCheck(Joiner.on('\n').join("/** @constructor */ function Foo(){}","/** @constructor */ Foo.subns.Bar = function(){};"),TypeCheck.INEXISTENT_PROPERTY);
}
