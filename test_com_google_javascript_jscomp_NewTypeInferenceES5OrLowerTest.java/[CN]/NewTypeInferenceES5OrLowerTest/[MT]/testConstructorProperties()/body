{
  typeCheck(LINE_JOINER.join("/** @constructor */ function Foo() {}","/** @type {number} */ Foo.n = 1","/** @type {number} */ Foo.n = 1"),GlobalTypeInfo.REDECLARED_PROPERTY);
  typeCheck(LINE_JOINER.join("function g() { Foo.bar - 5; }","/** @constructor */ function Foo() {}","Foo.bar = 42;"));
  typeCheck(LINE_JOINER.join("function g() { Foo.bar - 5; }","/** @constructor */ function Foo() {}","/** @type {string} */ Foo.bar = 'str';"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("function g() { return (new Foo).bar; }","/** @constructor */ function Foo() {}","/** @type {string} */ Foo.bar = 'str';"),NewTypeInference.INEXISTENT_PROPERTY);
  typeCheck(LINE_JOINER.join("/** @constructor */ function Foo() {}","/** @type {string} */ Foo.prop = 'asdf';","var x = Foo;","x.prop - 5;"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("function g() { Foo.prototype.baz = (new Foo).bar + Foo.bar; }","/** @constructor */ function Foo() {}","/** @type {number} */ Foo.prototype.bar = 5","/** @type {string} */ Foo.bar = 'str';"),GlobalTypeInfo.CTOR_IN_DIFFERENT_SCOPE);
  typeCheck(LINE_JOINER.join("/** @constructor */ function Foo() {}","/** @type {number} */ Foo.n = 1;","Foo.n = 1;"));
  typeCheck(LINE_JOINER.join("/** @constructor */ function Foo() {}","/** @type {number} */ Foo.n;","Foo.n = '';"),NewTypeInference.MISTYPED_ASSIGN_RHS);
}
