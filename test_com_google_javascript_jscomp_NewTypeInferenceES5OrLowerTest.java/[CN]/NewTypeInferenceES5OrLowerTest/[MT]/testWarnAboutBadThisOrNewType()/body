{
  typeCheck(Joiner.on('\n').join("/** @this {number} */","function f() {}"),JSTypeCreatorFromJSDoc.THIS_NEW_EXPECT_OBJECT_OR_TYPEVAR);
  typeCheck(Joiner.on('\n').join("/** @type {function(this:number)} */","function f() {}"),JSTypeCreatorFromJSDoc.THIS_NEW_EXPECT_OBJECT_OR_TYPEVAR);
  typeCheck(Joiner.on('\n').join("/** @type {function(new:number)} */","function f() {}"),JSTypeCreatorFromJSDoc.THIS_NEW_EXPECT_OBJECT_OR_TYPEVAR);
  typeCheck(Joiner.on('\n').join("/**"," * @template T"," * @this {T}"," */","function f() {}"));
  typeCheck(Joiner.on('\n').join("/**"," * @param {function(this:void)} x"," */","function f(x) {}","/** @constructor */","function Foo() {}","Foo.prototype.method = function() {};","f(Foo.prototype.method);","function g() {}","f(g);"),NewTypeInference.INVALID_ARGUMENT_TYPE);
}
