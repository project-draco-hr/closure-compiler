{
  typeCheck(Joiner.on('\n').join("/** @interface */","function Parent() {}","/** @return {number} */","Parent.prototype.method = function() {};","/** @constructor @implements {Parent} */","function Foo() {}","Foo.prototype.method = function() { return 1; };","/** @const */","var exports = Foo;","function f() {","  var /** null */ x = exports.prototype.method.call(new Foo);","}"));
  typeCheck(Joiner.on('\n').join("/** @interface */","function Parent() {}","/** @return {number} */","Parent.prototype.method = function() {};","/** @constructor @implements {Parent} */","function Foo() {}","Foo.prototype.method = function() { return 1; };","/** @const */","var exports = Foo;","function f() {","  var /** null */ x = (new exports).method();","}"),NewTypeInference.MISTYPED_ASSIGN_RHS);
  typeCheck(Joiner.on('\n').join("/** @interface */","function Parent() {}","/** @return {number} */","Parent.prototype.method = function() {};","/** @constructor @implements {Parent} */","function Foo() {}","Foo.prototype.method = function() { return 1; };","/** @const */","var exports = new Foo;","function f() {","  var /** null */ x = exports.method();","}"),NewTypeInference.MISTYPED_ASSIGN_RHS);
  typeCheck(Joiner.on('\n').join("/** @interface */","function I1() {}","/** @return {number|string} */","I1.prototype.method = function() {};","/** @interface */","function I2() {}","/** @return {number|boolean} */","I2.prototype.method = function() {};","/**"," * @constructor"," * @implements {I1}"," * @implements {I2}"," */","function Foo() {}","Foo.prototype.method = function() { return 1; };","/** @const */","var exports = Foo;","function f() {","  var /** null */ x = exports.prototype.method.call(new Foo);","}"));
}
