{
  typeCheck(Joiner.on('\n').join("/**"," * @constructor"," * @template T"," */","function Foo() {}","Foo.prototype.method = function() {","  /** @type {T} */","  this.prop = 123;","}"),NewTypeInference.MISTYPED_ASSIGN_RHS);
  typeCheck(Joiner.on('\n').join("/**"," * @constructor"," * @template T"," */","function Foo() {}","/** @param {T} x */","Foo.prototype.method = function(x) {","  x = 123;","}"),NewTypeInference.MISTYPED_ASSIGN_RHS);
  typeCheck(Joiner.on('\n').join("/**"," * @constructor"," * @template T"," */","function Foo() {}","/** @param {T} x */","Foo.prototype.method = function(x) {","  this.prop = x;","}"));
  typeCheck(Joiner.on('\n').join("/**"," * @constructor"," * @template T"," */","function Foo() {}","/** @param {T} x */","Foo.prototype.method = function(x) {","  /** @const */","  this.prop = x;","}"),GlobalTypeInfo.MISPLACED_CONST_ANNOTATION);
  typeCheck(Joiner.on('\n').join("/**"," * @constructor"," * @template T"," */","function Parent() {}","/**"," * @constructor"," * @extends {Parent<string>}"," */","function Child() {}","Child.prototype.method = function() {","  /** @type {T} */","  this.prop = 123;","}"),GlobalTypeInfo.UNRECOGNIZED_TYPE_NAME);
}
