{
  typeCheck(Joiner.on('\n').join("/** @constructor */","function Foo() {}","function f(/** !Foo */ x) {","  x.prop = 123;","}","(new Foo).prop - 1;"));
  typeCheck(Joiner.on('\n').join("/** @constructor */","function Foo() {}","function f() {","  (new Foo).prop = 123;","}","var s = (new Foo).prop;"),TypeCheck.INEXISTENT_PROPERTY);
  typeCheck(Joiner.on('\n').join("/** @constructor */","function Foo() {}","function f(/** !Foo */ x) {","  x.prop = 'asdf';","}","(new Foo).prop - 1;"));
  typeCheck(Joiner.on('\n').join("/** @constructor */","function Foo() {}","function f(/** !Foo */ x) {","  var y = x.prop;","}","var z = (new Foo).prop;"),TypeCheck.INEXISTENT_PROPERTY,TypeCheck.INEXISTENT_PROPERTY);
  typeCheck(Joiner.on('\n').join("/** @constructor */","function Foo() {}","function f() {","  var x = new Foo;","  x.prop = 123;","}","(new Foo).prop - 1;"),TypeCheck.INEXISTENT_PROPERTY);
  typeCheck(Joiner.on('\n').join("/** @constructor */","function Foo() {}","function f(/** !Foo */ x) {","  /** @const */","  x.prop = 123;","}","(new Foo).prop - 1;"),GlobalTypeInfo.MISPLACED_CONST_ANNOTATION);
  typeCheck(Joiner.on('\n').join("/** @constructor */","function Foo() {}","function f(/** !Foo */ x) {","  /** @type {string} */","  x.prop = 'asdf';","}","(new Foo).prop - 123;"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(Joiner.on('\n').join("/** @constructor */","function High() {}","function f(/** !High */ x) {","  /** @type {string} */","  x.prop = 'asdf';","}","/** @constructor @extends {High} */","function Low() {}","(new Low).prop - 123;"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(Joiner.on('\n').join("/** @constructor */","function Foo() {","  /** @type {number} */","  this.prop = 123;","}","function f(/** !Foo */ x) {","  /** @type {string} */","  x.prop = 'asdf';","}"),GlobalTypeInfo.REDECLARED_PROPERTY,NewTypeInference.MISTYPED_ASSIGN_RHS);
  typeCheck(Joiner.on('\n').join("/** @constructor */","function Foo() {","  /** @type {number} */","  this.prop = 123;","}","function f(/** !Foo */ x) {","  x.prop = 'asdf';","}"),NewTypeInference.MISTYPED_ASSIGN_RHS);
  typeCheck(Joiner.on('\n').join("/** @constructor */","function Foo() {}","/** @type {number} */","Foo.prototype.prop = 123;","function f(/** !Foo */ x) {","  x.prop = 'asdf';","}"),NewTypeInference.MISTYPED_ASSIGN_RHS);
  typeCheck(Joiner.on('\n').join("/**"," * @constructor"," * @template T"," */","function Foo() {}","function f(/** !Foo<string> */ x) {","  x.prop = 123;","}","(new Foo).prop - 1;"));
  typeCheck(Joiner.on('\n').join("/**"," * @constructor"," * @template T"," */","function Foo(/** T */ x) {}","/** @template U */","function addProp(/** !Foo<U> */ x, /** U */ y) {","  /** @type {U} */ x.prop = y;","  return x;","}","addProp(new Foo(1), 5).prop - 1;"));
  typeCheck(Joiner.on('\n').join("/** @constructor */","function Foo() {}","Foo.prototype.m = function() {","  this.prop = 123;","}","function f(/** !Foo */ x) {","  /** @type {number} */","  x.prop = 123;","}"));
  typeCheck(Joiner.on('\n').join("/** @constructor */","function Foo() {}","Foo.prototype.prop = 123;","/** @type {!Foo} */","var x = new Foo;","/** @type {number} */","x.prop = 123;"));
}
