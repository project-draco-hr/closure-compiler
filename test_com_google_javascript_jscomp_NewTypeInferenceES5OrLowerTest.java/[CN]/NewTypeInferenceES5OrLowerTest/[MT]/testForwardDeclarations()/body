{
  final String DEFINITIONS=Joiner.on('\n').join("/** @const */ var goog = {};","goog.addDependency = function(file, provides, requires){};","goog.forwardDeclare = function(name){};");
  typeCheck(DEFINITIONS + Joiner.on('\n').join("goog.addDependency('', ['Foo'], []);","goog.forwardDeclare('Bar');","function f(/** !Foo */ x) {}","function g(/** !Bar */ y) {}"));
  typeCheck(DEFINITIONS + Joiner.on('\n').join("/** @const */ var ns = {};","goog.addDependency('', ['ns.Foo'], []);","goog.forwardDeclare('ns.Bar');","function f(/** !ns.Foo */ x) {}","function g(/** !ns.Bar */ y) {}"));
  typeCheck(DEFINITIONS + Joiner.on('\n').join("goog.addDependency('', ['Foo'], []);","goog.forwardDeclare('Bar');","var f = new Foo;","var b = new Bar;"));
  typeCheck(DEFINITIONS + Joiner.on('\n').join("goog.forwardDeclare('Foo');","function f(/** !Foo */ x) {}","/** @constructor */ function Bar(){}","f(new Bar);"));
  typeCheck(DEFINITIONS + Joiner.on('\n').join("/** @const */ var ns = {};","goog.forwardDeclare('ns.Foo');","function f(/** !ns.Foo */ x) {}","/** @constructor */ function Bar(){}","f(new Bar);"));
}
