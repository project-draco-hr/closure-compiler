{
  typeCheck(Joiner.on('\n').join("/** @constructor */","function Foo() {}","/** @constructor */","function Bar() {}","function f(obj) { obj.prop - 5; }","var /** !Foo */ x = new Foo;","f(x);","var /** !Bar */ y = x;"),NewTypeInference.INVALID_ARGUMENT_TYPE,NewTypeInference.MISTYPED_ASSIGN_RHS);
  typeCheck(Joiner.on('\n').join("/** @constructor */ function Foo() {}","function f(obj) { obj.prop - 5; }","f(new Foo);"),NewTypeInference.INVALID_ARGUMENT_TYPE);
  typeCheck(Joiner.on('\n').join("/** @constructor */","function Foo() { /** @type {string} */ this.prop = 'str'; }","function f(obj) { obj.prop - 5; }","f(new Foo);"),NewTypeInference.INVALID_ARGUMENT_TYPE);
  typeCheck(Joiner.on('\n').join("/** @constructor */ function Foo() { /** @type {number} */ this.prop = 1; }","function g(obj) { var /** string */ s = obj.prop; return obj; }","var /** !Foo */ x = g({ prop: '' });"),NewTypeInference.MISTYPED_ASSIGN_RHS);
  typeCheck(Joiner.on('\n').join("function f(obj) { obj.a.num - 5; }","function g(obj) {","  obj.a.str < 'str';","  f(obj);","}"));
  typeCheck(Joiner.on('\n').join("function f(/** Array<?> */ x) {}","function g(obj) {","  obj.x = 123;","  f(obj);","}"));
  typeCheck(Joiner.on('\n').join("function f(g) {","  if (g.randomName) {","  } else {","    return g();","  }","}"));
  typeCheck(Joiner.on('\n').join("function f(x) {","  if (x.a) {} else {}","}","f({ b: 123 }); "));
  typeCheck(Joiner.on('\n').join("function f(x) {","  if (x.randomName) {","  } else {","    return x();","  }","}","f({ abc: 123 }); "));
}
