{
  typeCheck(LINE_JOINER.join("/** @constructor */ function Foo() {}","function takesFoos(/** Foo */ afoo) {}","function f(/** (number|Foo) */ x) {","  takesFoos(x);","  if (x instanceof Foo) { takesFoos(x); }","}"),NewTypeInference.INVALID_ARGUMENT_TYPE);
  typeCheck("({} instanceof function(){});",NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("/** @constructor */ function Foo() {}","(123 instanceof Foo);"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("/** @constructor */ function Foo() {}","({} instanceof (true || Foo))"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("/** @constructor */ function Foo() {}","function takesFoos(/** Foo */ afoo) {}","function f(/** (number|Foo) */ x) {","  if (x instanceof Foo) { takesFoos(x); }","}"));
  typeCheck(LINE_JOINER.join("/** @constructor */ function Foo() {}","function f(/** (number|!Foo) */ x) {","  if (x instanceof Foo) {} else { x - 5; }","}"));
  typeCheck(LINE_JOINER.join("/** @constructor */ function Foo() {}","function f(/** (number|!Foo) */ x) {","  if (!(x instanceof Foo)) { x - 5; }","}"));
  typeCheck(LINE_JOINER.join("/** @constructor */ function Foo() {}","/** @constructor */ function Bar() {}","function takesFoos(/** Foo */ afoo) {}","function f(/** Foo */ x) {","  if (x instanceof Bar) {} else { takesFoos(x); }","}"));
  typeCheck(LINE_JOINER.join("/** @constructor */ function Foo() {}","function takesFoos(/** Foo */ afoo) {}","/** @param {*} x */ function f(x) {","  takesFoos(x);","  if (x instanceof Foo) { takesFoos(x); }","}"),NewTypeInference.INVALID_ARGUMENT_TYPE);
  typeCheck(LINE_JOINER.join("/** @constructor */ function Foo() {}","var x = new Foo();","x.bar = 'asdf';","if (x instanceof Foo) { x.bar - 5; }"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("/** @constructor */ function Foo() { this.prop = 123; }","function f(x) { x = 123; if (x instanceof Foo) { x.prop; } }"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(LINE_JOINER.join("/** @constructor */ function Foo() {}","/** @constructor @extends {Foo} */ function Bar() {}","/** @param {(number|!Bar)} x */","function f(x) {","  if (!(x instanceof Foo)) {","    var /** number */ n = x;","  }","}"));
  typeCheck(LINE_JOINER.join("/** @constructor */ function Foo() {}","/** @enum {!Foo} */","var E = { ONE: new Foo };","/** @param {(number|E)} x */","function f(x) {","  if (!(x instanceof Foo)) {","    var /** number */ n = x;","  }","}"));
  typeCheck(LINE_JOINER.join("/** @constructor */","function Foo() {}","/**"," * @template T"," * @param {T} x"," */","function f(x) {","  if (x instanceof Foo) {","    var /** !Foo */ y = x;","  }","}"));
  typeCheck(LINE_JOINER.join("/** @constructor */","function Foo() {}","/** @constructor */","function Bar() {}","/**"," * @template T"," * @param {T} x"," */","function f(x) {","  if (x instanceof Foo) {","    var /** !Bar */ z = x;","  }","}"),NewTypeInference.MISTYPED_ASSIGN_RHS);
  typeCheck(LINE_JOINER.join("/**"," * @template T"," * @param {function(new:T)} x"," */","function f(x, y) {","  if (y instanceof x) {}","}"));
}
