{
  typeCheck(Joiner.on('\n').join("/** @constructor */ function Foo(){};","/** @constructor */ function Bar(){};","/**"," * @template T"," * @param {T} x"," * @return {T}"," */","function id(x) { return x; }","var /** Bar */ x = id(new Foo);"),NewTypeInference.MISTYPED_ASSIGN_RHS);
  typeCheck(Joiner.on('\n').join("/**"," * @template T"," * @param {T} x"," * @return {T}"," */","function id(x) { return x; }","id({}) - 5;"),NewTypeInference.INVALID_OPERAND_TYPE);
  typeCheck(Joiner.on('\n').join("/**"," * @template T"," * @param {T} x"," * @return {T}"," */","function id(x) { return x; }","var /** (number|string) */ x = id('str');"));
  typeCheck(Joiner.on('\n').join("function f(/** * */ a, /** string */ b) {","  /**","   * @template T","   * @param {T} x","   * @param {T} y","   */","  function f(x, y) {}","  f(a, b);","}"));
  typeCheck(Joiner.on('\n').join("function f(/** string */ b) {","  /**","   * @template T","   * @param {T} x","   * @param {T} y","   */","  function f(x, y) {}","  f({p:5, r:'str'}, {p:20, r:b});","}"));
  typeCheck(Joiner.on('\n').join("function f(/** string */ b) {","  /**","   * @template T","   * @param {T} x","   * @param {T} y","   */","  function f(x, y) {}","  f({r:'str'}, {p:20, r:b});","}"));
  typeCheck(Joiner.on('\n').join("function g(x) {","  /**","   * @template T","   * @param {T} x","   * @param {T} y","   */","  function f(x, y) {}","  var /** boolean */ y = true;","  f(x, y);","}","g('str');"),NewTypeInference.INVALID_ARGUMENT_TYPE);
  typeCheck(Joiner.on('\n').join("/**"," * @template T"," * @param {T} x"," * @param {number} y"," */","function f(x, y) {}","f(123, 'asdf');"),NewTypeInference.INVALID_ARGUMENT_TYPE);
  typeCheck(Joiner.on('\n').join("/**"," * @constructor"," * @template T"," */","function Foo() {}","/**"," * @template T"," * @param {Foo<T>} x"," */","function takesFoo(x) {}","takesFoo(undefined);"),NewTypeInference.INVALID_ARGUMENT_TYPE);
  typeCheck(Joiner.on('\n').join("/**"," * @template T"," * @param {T|undefined} x"," */","function f(x) {}","/**"," * @template T"," * @param {T|undefined} x"," */","function g(x) { f(x); }"));
  typeCheck(Joiner.on('\n').join("/**"," * @template T"," * @param {T|undefined} x"," * @return {T}"," */","function f(x) {","  if (x === undefined) {","    throw new Error('');","  }","  return x;","}","/**"," * @template T"," * @param {T|undefined} x"," * @return {T}"," */","function g(x) { return f(x); }","g(123) - 5;"));
  typeCheck(Joiner.on('\n').join("/**"," * @template T"," * @param {T|undefined} x"," * @return {T}"," */","function f(x) {","  if (x === undefined) {","    throw new Error('');","  }","  return x;","}","/**"," * @template T"," * @param {T|undefined} x"," * @return {T}"," */","function g(x) { return f(x); }","g(123) < 'asdf';"),NewTypeInference.INVALID_OPERAND_TYPE);
}
