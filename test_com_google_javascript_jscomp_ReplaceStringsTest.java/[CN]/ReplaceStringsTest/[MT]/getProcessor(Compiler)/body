{
  pass=new ReplaceStrings(compiler,"`",functionsToInspect,reserved,previous);
  return new CompilerPass(){
    @Override public void process(    Node externs,    Node js){
      Map<String,CheckLevel> propertiesToErrorFor=Maps.<String,CheckLevel>newHashMap();
      propertiesToErrorFor.put("foobar",CheckLevel.ERROR);
      new CollapseProperties(compiler,true,true).process(externs,js);
      if (runDisambiguateProperties) {
        SourceInformationAnnotator sia=new SourceInformationAnnotator("test",false);
        NodeTraversal.traverse(compiler,js,sia);
        DisambiguateProperties.forJSTypeSystem(compiler,propertiesToErrorFor).process(externs,js);
      }
      pass.process(externs,js);
    }
  }
;
}
