{
  List<String> interpreterStack=null;
  Evaluator interpreter=Context.createInterpreter();
  if (interpreter != null) {
    interpreterStack=interpreter.getScriptStack(this);
  }
  int interpreterStackIndex=0;
  StringBuffer buffer=new StringBuffer();
  String lineSeparator=SecurityUtilities.getSystemProperty("line.separator");
  StackTraceElement[] stack=getStackTrace();
  for (int i=0; i < stack.length; i++) {
    StackTraceElement e=stack[i];
    String name=e.getFileName();
    if (e.getLineNumber() > -1 && name != null && filter.accept(null,name)) {
      buffer.append("\tat ");
      buffer.append(e.getFileName());
      buffer.append(':');
      buffer.append(e.getLineNumber());
      buffer.append(lineSeparator);
    }
 else     if (interpreterStack != null && interpreterStack.size() > interpreterStackIndex && "org.mozilla.javascript.Interpreter".equals(e.getClassName()) && "interpretLoop".equals(e.getMethodName())) {
      buffer.append(interpreterStack.get(interpreterStackIndex++));
    }
  }
  return buffer.toString();
}
