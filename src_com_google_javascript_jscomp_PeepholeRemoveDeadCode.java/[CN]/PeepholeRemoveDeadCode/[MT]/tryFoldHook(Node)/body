{
  Preconditions.checkState(n.isHook());
  Node parent=n.getParent();
  Preconditions.checkNotNull(parent);
  Node cond=n.getFirstChild();
  Node thenBody=cond.getNext();
  Node elseBody=thenBody.getNext();
  TernaryValue condValue=NodeUtil.getImpureBooleanValue(cond);
  if (condValue == TernaryValue.UNKNOWN) {
    return n;
  }
  n.detachChildren();
  Node branchToKeep=condValue.toBoolean(true) ? thenBody : elseBody;
  Node replacement;
  if (mayHaveSideEffects(cond)) {
    replacement=IR.comma(cond,branchToKeep).srcref(n);
  }
 else {
    replacement=branchToKeep;
  }
  parent.replaceChild(n,replacement);
  reportCodeChange();
  return replacement;
}
