{
  Preconditions.checkState(previousCase == null || previousCase.getNext() == caseNode);
  Node switchNode=caseNode.getParent();
  if (switchNode.getLastChild() != caseNode && previousCase != null) {
    Node previousBlock=previousCase.getLastChild();
    if (!previousBlock.hasChildren() || !isExit(previousBlock.getLastChild())) {
      return false;
    }
  }
  Node executingCase=caseNode;
  while (executingCase != null) {
    Preconditions.checkState(executingCase.isDefaultCase() || executingCase.isCase());
    Preconditions.checkState(caseNode == executingCase || !executingCase.isDefaultCase());
    Node block=executingCase.getLastChild();
    Preconditions.checkState(block.isBlock());
    if (block.hasChildren()) {
      for (      Node blockChild : block.children()) {
switch (blockChild.getToken()) {
case BREAK:
          return !blockChild.hasChildren() && (defaultCase == null || defaultCase == executingCase);
case VAR:
        if (blockChild.hasOneChild() && blockChild.getFirstFirstChild() == null) {
          continue;
        }
      return false;
default :
    return false;
}
}
}
executingCase=executingCase.getNext();
}
return true;
}
