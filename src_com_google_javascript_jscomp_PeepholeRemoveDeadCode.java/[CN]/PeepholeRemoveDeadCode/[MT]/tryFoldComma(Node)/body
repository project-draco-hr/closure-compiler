{
  Node parent=n.getParent();
  Node left=n.getFirstChild();
  Node right=left.getNext();
  left=trySimpilifyUnusedResult(left);
  if (left == null || !mayHaveSideEffects(left)) {
    n.removeChild(right);
    parent.replaceChild(n,right);
    reportCodeChange();
    return right;
  }
 else {
    if (parent.getType() == Token.EXPR_RESULT && parent.getParent().getType() != Token.LABEL) {
      n.detachChildren();
      parent.replaceChild(n,left);
      Node newStatement=new Node(Token.EXPR_RESULT,right);
      newStatement.copyInformationFrom(n);
      parent.getParent().addChildAfter(newStatement,parent);
      reportCodeChange();
      return left;
    }
  }
  return n;
}
