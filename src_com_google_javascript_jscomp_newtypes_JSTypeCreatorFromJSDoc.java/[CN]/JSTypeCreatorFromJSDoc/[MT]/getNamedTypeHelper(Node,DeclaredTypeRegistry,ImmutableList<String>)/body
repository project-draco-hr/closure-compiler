{
  String typeName=n.getString();
switch (typeName) {
case "boolean":
    checkInvalidGenericsInstantiation(n);
  return this.commonTypes.BOOLEAN;
case "null":
checkInvalidGenericsInstantiation(n);
return this.commonTypes.NULL;
case "number":
checkInvalidGenericsInstantiation(n);
return this.commonTypes.NUMBER;
case "string":
checkInvalidGenericsInstantiation(n);
return this.commonTypes.STRING;
case "undefined":
case "void":
checkInvalidGenericsInstantiation(n);
return this.commonTypes.UNDEFINED;
case "Function":
checkInvalidGenericsInstantiation(n);
return maybeMakeNullable(this.commonTypes.qmarkFunction());
case "Object":
return maybeMakeNullable(n.hasChildren() ? this.commonTypes.TOP_DICT : this.commonTypes.TOP_OBJECT);
default :
return lookupTypeByName(typeName,n,registry,outerTypeParameters);
}
}
