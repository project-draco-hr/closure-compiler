{
  String typeName=n.getString();
switch (typeName) {
case "boolean":
    checkInvalidGenericsInstantiation(n);
  return JSType.BOOLEAN;
case "null":
checkInvalidGenericsInstantiation(n);
return JSType.NULL;
case "number":
checkInvalidGenericsInstantiation(n);
return JSType.NUMBER;
case "string":
checkInvalidGenericsInstantiation(n);
return JSType.STRING;
case "undefined":
case "void":
checkInvalidGenericsInstantiation(n);
return JSType.UNDEFINED;
case "Function":
checkInvalidGenericsInstantiation(n);
return maybeMakeNullable(registry.getCommonTypes().qmarkFunction());
case "Object":
return maybeMakeNullable(n.hasChildren() ? JSType.TOP_DICT : JSType.TOP_OBJECT);
default :
return lookupTypeByName(typeName,n,registry,outerTypeParameters);
}
}
