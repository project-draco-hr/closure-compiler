{
  final Node fnName=n.getFirstChild();
  boolean isFunctionExpression=(parent != null) && NodeUtil.isFunctionExpression(n);
  if (!isFunctionExpression) {
    traverseBranch(fnName,n);
  }
  curNode=n;
  pushScope(n);
  if (isFunctionExpression) {
    traverseBranch(fnName,n);
  }
  final Node args=fnName.getNext();
  final Node body=args.getNext();
  traverseBranch(args,n);
  traverseBranch(body,n);
  popScope();
}
