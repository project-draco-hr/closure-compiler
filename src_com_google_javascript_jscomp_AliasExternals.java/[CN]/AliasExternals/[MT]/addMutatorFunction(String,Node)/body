{
  String functionName=getMutatorFor(propName);
  String localPropName=getMutatorFor(propName) + "$a";
  String localValueName=getMutatorFor(propName) + "$b";
  Node hasPropNode=Node.newString(Token.NAME,localPropName);
  Node propValueNode=Node.newString(Token.NAME,localValueName);
  List<Node> args=Lists.newArrayList(hasPropNode,propValueNode);
  Node propNameNode=Node.newString(Token.NAME,localPropName);
  Node propValue=Node.newString(Token.STRING,propName);
  Node getProp=new Node(Token.GETPROP,propNameNode,propValue);
  Node assignFrom=Node.newString(Token.NAME,localValueName);
  Node assign=new Node(Token.ASSIGN,getProp,assignFrom);
  Node returnNode=new Node(Token.RETURN,assign);
  Node functionBody=new Node(Token.BLOCK,returnNode);
  Node fnNode=NodeUtil.newFunctionNode(functionName,args,functionBody,-1,-1);
  root.addChildToFront(fnNode);
  compiler.reportCodeChange();
}
