{
  Node prev=parent;
  for (  Node anc : parent.getAncestors()) {
switch (anc.getType()) {
case INSTANCEOF:
case EXPR_RESULT:
case VAR:
case LET:
case CONST:
case IF:
case WHILE:
case FOR:
case TYPEOF:
case VOID:
case NOT:
case BITNOT:
case POS:
case NEG:
      return Ref.Type.DIRECT_GET;
case HOOK:
    if (anc.getFirstChild() == prev) {
      return Ref.Type.DIRECT_GET;
    }
  break;
case ASSIGN:
if (!name.equals(anc.getFirstChild().getQualifiedName())) {
  return Ref.Type.ALIASING_GET;
}
break;
case NAME:
if (!name.equals(anc.getString())) {
return Ref.Type.ALIASING_GET;
}
break;
case CALL:
if (anc.getFirstChild() != prev) {
return Ref.Type.ALIASING_GET;
}
break;
case DELPROP:
return Ref.Type.DELETE_PROP;
}
prev=anc;
}
return Ref.Type.ALIASING_GET;
}
