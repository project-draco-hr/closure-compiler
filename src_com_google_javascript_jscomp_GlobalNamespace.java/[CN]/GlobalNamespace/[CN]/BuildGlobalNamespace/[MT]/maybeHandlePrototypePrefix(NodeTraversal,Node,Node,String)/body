{
  int numLevelsToRemove;
  String prefix;
  if (name.endsWith(".prototype")) {
    numLevelsToRemove=1;
    prefix=name.substring(0,name.length() - 10);
  }
 else {
    int i=name.indexOf(".prototype.");
    if (i == -1) {
      return false;
    }
    prefix=name.substring(0,i);
    numLevelsToRemove=2;
    i=name.indexOf('.',i + 11);
    while (i >= 0) {
      numLevelsToRemove++;
      i=name.indexOf('.',i + 1);
    }
  }
  if (parent != null && NodeUtil.isObjectLitKey(n)) {
    return true;
  }
  for (int i=0; i < numLevelsToRemove; i++) {
    parent=n;
    n=n.getFirstChild();
  }
  handleGet(t,n,parent,prefix,Ref.Type.PROTOTYPE_GET);
  return true;
}
