{
  Node parent=n.getParent();
  Preconditions.checkState(parent.isObjectLit());
  Node grandparent=parent.getParent();
  if (grandparent == null) {
    return null;
  }
  Node greatGrandparent=grandparent.getParent();
  String name;
switch (grandparent.getToken()) {
case NAME:
    if (greatGrandparent == null || !NodeUtil.isNameDeclaration(greatGrandparent)) {
      return null;
    }
  name=grandparent.getString();
break;
case ASSIGN:
Node lvalue=grandparent.getFirstChild();
name=lvalue.getQualifiedName();
break;
case STRING_KEY:
if (greatGrandparent != null && greatGrandparent.isObjectLit()) {
name=getNameForObjLitKey(grandparent);
}
 else {
return null;
}
break;
default :
return null;
}
if (name != null) {
String key=n.getString();
if (TokenStream.isJSIdentifier(key)) {
return name + '.' + key;
}
}
return null;
}
