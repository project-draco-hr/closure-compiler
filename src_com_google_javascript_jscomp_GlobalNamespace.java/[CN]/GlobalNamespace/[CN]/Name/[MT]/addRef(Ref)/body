{
  addRefInternal(ref);
switch (ref.type) {
case SET_FROM_GLOBAL:
    if (declaration == null) {
      declaration=ref;
      docInfo=getDocInfoForDeclaration(ref);
    }
  globalSets++;
break;
case SET_FROM_LOCAL:
localSets++;
JSDocInfo info=ref.getNode() == null ? null : NodeUtil.getBestJSDocInfo(ref.getNode());
if (info != null && info.isNoCollapse()) {
localSetsWithNoCollapse++;
}
break;
case PROTOTYPE_GET:
case DIRECT_GET:
Node node=ref.getNode();
if (node != null && node.isGetProp() && node.getParent().isExprResult()) {
docInfo=node.getJSDocInfo();
}
totalGets++;
break;
case ALIASING_GET:
aliasingGets++;
totalGets++;
break;
case CALL_GET:
callGets++;
totalGets++;
break;
case DELETE_PROP:
deleteProps++;
break;
default :
throw new IllegalStateException();
}
}
