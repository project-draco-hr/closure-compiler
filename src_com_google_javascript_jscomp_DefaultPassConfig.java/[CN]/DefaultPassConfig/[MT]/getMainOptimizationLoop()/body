{
  List<PassFactory> passes=Lists.newArrayList();
  if (options.inlineGetters) {
    passes.add(inlineSimpleMethods);
  }
  passes.addAll(getCodeRemovingPasses());
  if (options.inlineFunctions || options.inlineLocalFunctions) {
    passes.add(inlineFunctions);
  }
  if (options.inlineProperties) {
    passes.add(inlineProperties);
  }
  boolean runOptimizeCalls=options.optimizeCalls || options.optimizeParameters || options.optimizeReturns;
  if (options.removeUnusedVars || options.removeUnusedLocalVars) {
    if (options.deadAssignmentElimination) {
      passes.add(deadAssignmentsElimination);
    }
    if (!runOptimizeCalls) {
      passes.add(removeUnusedVars);
    }
  }
  if (runOptimizeCalls) {
    passes.add(optimizeCallsAndRemoveUnusedVars);
  }
  assertAllLoopablePasses(passes);
  return passes;
}
