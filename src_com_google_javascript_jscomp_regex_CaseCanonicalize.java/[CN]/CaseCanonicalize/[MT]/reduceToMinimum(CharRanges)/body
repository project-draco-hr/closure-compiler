{
  CharRanges caseSensitive=ranges.intersection(CASE_SENSITIVE);
  if (caseSensitive.isEmpty()) {
    return ranges;
  }
  CharRanges expanded=CharRanges.EMPTY;
  for (  DeltaSet ds : CANON_DELTA_SETS) {
    expanded=expanded.union(caseSensitive.intersection(ds.codeUnits).shift(-ds.delta));
  }
  expanded=expanded.difference(UCASE_ASCII_LETTERS).union(expanded.intersection(UCASE_ASCII_LETTERS).shift(32));
  return ranges.difference(caseSensitive).union(expanded);
}
