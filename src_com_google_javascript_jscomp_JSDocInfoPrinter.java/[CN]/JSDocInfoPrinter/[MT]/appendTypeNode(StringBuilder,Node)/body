{
  if (typeNode.getType() == Token.BANG) {
    sb.append("!");
    appendTypeNode(sb,typeNode.getFirstChild());
  }
 else   if (typeNode.getType() == Token.EQUALS) {
    appendTypeNode(sb,typeNode.getFirstChild());
    sb.append("=");
  }
 else   if (typeNode.getType() == Token.PIPE) {
    for (int i=0; i < typeNode.getChildCount() - 1; i++) {
      appendTypeNode(sb,typeNode.getChildAtIndex(i));
      sb.append("|");
    }
    appendTypeNode(sb,typeNode.getLastChild());
  }
 else   if (typeNode.getType() == Token.ELLIPSIS) {
    sb.append("...");
    if (typeNode.hasChildren()) {
      appendTypeNode(sb,typeNode.getFirstChild());
    }
  }
 else   if (typeNode.getType() == Token.STAR) {
    sb.append("*");
  }
 else   if (typeNode.getType() == Token.QMARK) {
    sb.append("?");
  }
 else   if (typeNode.isFunction()) {
    sb.append("function(");
    Node first=typeNode.getFirstChild();
    if (first.isNew()) {
      sb.append("new:");
      appendTypeNode(sb,typeNode.getFirstChild().getFirstChild());
      sb.append(",");
    }
 else     if (first.isThis()) {
      sb.append("this:");
      appendTypeNode(sb,typeNode.getFirstChild().getFirstChild());
      sb.append(",");
    }
 else     if (first.isEmpty()) {
      sb.append(")");
      return;
    }
 else     if (first.isVoid()) {
      sb.append("):void");
      return;
    }
    Node paramList=typeNode.getFirstChild().isParamList() ? typeNode.getFirstChild() : typeNode.getChildAtIndex(1);
    for (int i=0; i < paramList.getChildCount() - 1; i++) {
      appendTypeNode(sb,paramList.getChildAtIndex(i));
      sb.append(",");
    }
    appendTypeNode(sb,paramList.getLastChild());
    sb.append(")");
    Node returnType=typeNode.getLastChild();
    if (!returnType.isEmpty()) {
      sb.append(":");
      appendTypeNode(sb,returnType);
    }
  }
 else   if (typeNode.getType() == Token.LC) {
    sb.append("{");
    Node lb=typeNode.getFirstChild();
    for (int i=0; i < lb.getChildCount() - 1; i++) {
      Node colon=lb.getChildAtIndex(i);
      sb.append(colon.getFirstChild().getString() + ":");
      appendTypeNode(sb,colon.getLastChild());
      sb.append(",");
    }
    Node lastColon=lb.getLastChild();
    sb.append(lastColon.getFirstChild().getString() + ":");
    appendTypeNode(sb,lastColon.getLastChild());
    sb.append("}");
  }
 else   if (typeNode.getType() == Token.VOID) {
    sb.append("void");
  }
 else {
    if (typeNode.getString().equals("Array")) {
      if (typeNode.hasChildren()) {
        sb.append("Array.<");
        appendTypeNode(sb,typeNode.getFirstChild().getFirstChild());
        sb.append(">");
      }
 else {
        sb.append("Array");
      }
    }
 else {
      sb.append(typeNode.getString());
    }
  }
}
