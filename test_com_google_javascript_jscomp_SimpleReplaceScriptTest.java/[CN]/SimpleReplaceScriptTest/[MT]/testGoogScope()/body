{
  CompilerOptions options=getOptions(DiagnosticGroups.ACCESS_CONTROLS);
  options.setCheckTypes(true);
  String src0="/** @constructor */\n" + "test.Bar = function() { this.privNum = 10; };\n" + "/** @private */\n"+ "test.Bar.prototype.privNum;\n";
  String src1="var a = new test.Bar();\n";
  String modifiedSrc1="goog.scope(function() {\n" + "  var Bar = test.Bar;\n" + "  test.test = function() {\n"+ "    var a = new Bar();\n"+ "    var b = a.privNum;\n"+ "  };"+ "});";
  Result result=this.runReplaceScript(options,ImmutableList.of(src0,src1),0,0,modifiedSrc1,1,true).getResult();
  assertFalse(result.success);
  assertThat(result.errors).hasLength(1);
  JSError e=result.errors[0];
  assertErrorType(result.errors[0],CheckAccessControls.BAD_PRIVATE_PROPERTY_ACCESS,5);
  assertEquals(e.lineNumber,5);
}
