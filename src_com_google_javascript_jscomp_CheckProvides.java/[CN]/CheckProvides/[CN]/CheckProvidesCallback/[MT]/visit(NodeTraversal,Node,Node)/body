{
switch (n.getType()) {
case CALL:
    String providedClassName=codingConvention.extractClassNameIfProvide(n,parent);
  if (providedClassName != null) {
    provides.put(providedClassName,n);
  }
if (!containsRequires && codingConvention.extractClassNameIfRequire(n,parent) != null) {
  containsRequires=true;
}
break;
case FUNCTION:
if (!n.isArrowFunction()) {
visitFunctionNode(n,parent);
}
break;
case CLASS:
visitClassNode(n);
break;
case SCRIPT:
visitScriptNode();
break;
default :
break;
}
}
