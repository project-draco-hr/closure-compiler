{
  FunctionType templatizedCtor=registry.createConstructorType("TestingType",null,null,UNKNOWN_TYPE,ImmutableList.of(registry.createTemplateType("A"),registry.createTemplateType("B")));
  JSType templatizedInstance=registry.createTemplatizedType(templatizedCtor.getInstanceType(),ImmutableList.of(NUMBER_TYPE,STRING_TYPE));
  TemplateTypeMap ctrTypeMap=templatizedCtor.getTemplateTypeMap();
  TemplateType keyA=ctrTypeMap.getTemplateTypeKeyByName("A");
  assertNotNull(keyA);
  TemplateType keyB=ctrTypeMap.getTemplateTypeKeyByName("B");
  assertNotNull(keyB);
  TemplateType keyC=ctrTypeMap.getTemplateTypeKeyByName("C");
  assertNull(keyC);
  TemplateType unknownKey=registry.createTemplateType("C");
  TemplateTypeMap templateTypeMap=templatizedInstance.getTemplateTypeMap();
  assertTrue(templateTypeMap.hasTemplateKey(keyA));
  assertTrue(templateTypeMap.hasTemplateKey(keyB));
  assertFalse(templateTypeMap.hasTemplateKey(unknownKey));
  assertEquals(NUMBER_TYPE,templateTypeMap.getTemplateType(keyA));
  assertEquals(STRING_TYPE,templateTypeMap.getTemplateType(keyB));
  assertEquals(UNKNOWN_TYPE,templateTypeMap.getTemplateType(unknownKey));
  assertEquals("TestingType<number,string>",templatizedInstance.toString());
}
