{
  FunctionType f1=registry.createFunctionType(OBJECT_TYPE,false,EVAL_ERROR_TYPE,STRING_TYPE);
  FunctionType f2=registry.createFunctionType(NUMBER_TYPE,false,STRING_TYPE,VOID_TYPE);
  FunctionType f3=registry.createFunctionType(NO_OBJECT_TYPE,false,DATE_TYPE,STRING_TYPE,NUMBER_TYPE);
  FunctionType f4=registry.createFunctionType(NO_TYPE,false,NUMBER_OBJECT_TYPE);
  FunctionType f5=registry.createFunctionType(OBJECT_TYPE,true,EVAL_ERROR_TYPE);
  FunctionType f6=registry.createFunctionType(STRING_OBJECT_TYPE,false,ERROR_TYPE,OBJECT_TYPE);
  FunctionType f7=registry.createFunctionType(OBJECT_TYPE,true,URI_ERROR_TYPE,EVAL_ERROR_TYPE);
  FunctionType f8=registry.createFunctionType(STRING_OBJECT_TYPE,true,ERROR_TYPE,OBJECT_TYPE,EVAL_ERROR_TYPE);
  assertTrue(LEAST_FUNCTION_TYPE.isSubtype(GREATEST_FUNCTION_TYPE));
  assertTrue(LEAST_FUNCTION_TYPE.isSubtype(U2U_CONSTRUCTOR_TYPE));
  assertTrue(U2U_CONSTRUCTOR_TYPE.isSubtype(LEAST_FUNCTION_TYPE));
  assertFalse(GREATEST_FUNCTION_TYPE.isSubtype(LEAST_FUNCTION_TYPE));
  assertTrue(GREATEST_FUNCTION_TYPE.isSubtype(U2U_CONSTRUCTOR_TYPE));
  assertTrue(U2U_CONSTRUCTOR_TYPE.isSubtype(GREATEST_FUNCTION_TYPE));
  assertTrue(f1.isSubtype(GREATEST_FUNCTION_TYPE));
  assertTrue(f2.isSubtype(GREATEST_FUNCTION_TYPE));
  assertTrue(f3.isSubtype(GREATEST_FUNCTION_TYPE));
  assertTrue(f4.isSubtype(GREATEST_FUNCTION_TYPE));
  assertTrue(f5.isSubtype(GREATEST_FUNCTION_TYPE));
  assertTrue(f6.isSubtype(GREATEST_FUNCTION_TYPE));
  assertTrue(f7.isSubtype(GREATEST_FUNCTION_TYPE));
  assertTrue(f8.isSubtype(GREATEST_FUNCTION_TYPE));
  assertFalse(f1.isSubtype(LEAST_FUNCTION_TYPE));
  assertFalse(f2.isSubtype(LEAST_FUNCTION_TYPE));
  assertFalse(f3.isSubtype(LEAST_FUNCTION_TYPE));
  assertFalse(f4.isSubtype(LEAST_FUNCTION_TYPE));
  assertFalse(f5.isSubtype(LEAST_FUNCTION_TYPE));
  assertFalse(f6.isSubtype(LEAST_FUNCTION_TYPE));
  assertFalse(f7.isSubtype(LEAST_FUNCTION_TYPE));
  assertFalse(f8.isSubtype(LEAST_FUNCTION_TYPE));
  assertTrue(LEAST_FUNCTION_TYPE.isSubtype(f1));
  assertTrue(LEAST_FUNCTION_TYPE.isSubtype(f2));
  assertTrue(LEAST_FUNCTION_TYPE.isSubtype(f3));
  assertTrue(LEAST_FUNCTION_TYPE.isSubtype(f4));
  assertTrue(LEAST_FUNCTION_TYPE.isSubtype(f5));
  assertTrue(LEAST_FUNCTION_TYPE.isSubtype(f6));
  assertTrue(LEAST_FUNCTION_TYPE.isSubtype(f7));
  assertTrue(LEAST_FUNCTION_TYPE.isSubtype(f8));
  assertFalse(GREATEST_FUNCTION_TYPE.isSubtype(f1));
  assertFalse(GREATEST_FUNCTION_TYPE.isSubtype(f2));
  assertFalse(GREATEST_FUNCTION_TYPE.isSubtype(f3));
  assertFalse(GREATEST_FUNCTION_TYPE.isSubtype(f4));
  assertFalse(GREATEST_FUNCTION_TYPE.isSubtype(f5));
  assertFalse(GREATEST_FUNCTION_TYPE.isSubtype(f6));
  assertFalse(GREATEST_FUNCTION_TYPE.isSubtype(f7));
  assertFalse(GREATEST_FUNCTION_TYPE.isSubtype(f8));
}
