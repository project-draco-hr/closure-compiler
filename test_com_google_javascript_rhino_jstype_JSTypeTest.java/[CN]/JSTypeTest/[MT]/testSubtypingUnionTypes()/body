{
  assertTrue(BOOLEAN_TYPE.isSubtype(createUnionType(BOOLEAN_TYPE,STRING_TYPE)));
  assertTrue(createUnionType(BOOLEAN_TYPE,STRING_TYPE).isSubtype(createUnionType(BOOLEAN_TYPE,STRING_TYPE)));
  assertTrue(createUnionType(BOOLEAN_TYPE,STRING_TYPE).isSubtype(createUnionType(BOOLEAN_TYPE,STRING_TYPE,NULL_TYPE)));
  assertTrue(createUnionType(BOOLEAN_TYPE,STRING_TYPE).isSubtype(createUnionType(BOOLEAN_TYPE,STRING_TYPE,NULL_TYPE)));
  assertTrue(createUnionType(BOOLEAN_TYPE).isSubtype(createUnionType(BOOLEAN_TYPE,STRING_TYPE,NULL_TYPE)));
  assertTrue(createUnionType(STRING_TYPE).isSubtype(createUnionType(BOOLEAN_TYPE,STRING_TYPE,NULL_TYPE)));
  assertTrue(createUnionType(STRING_TYPE,NULL_TYPE).isSubtype(ALL_TYPE));
  assertTrue(createUnionType(DATE_TYPE,REGEXP_TYPE).isSubtype(OBJECT_TYPE));
  assertTrue(createUnionType(URI_ERROR_TYPE,EVAL_ERROR_TYPE).isSubtype(ERROR_TYPE));
  assertTrue(createUnionType(URI_ERROR_TYPE,EVAL_ERROR_TYPE).isSubtype(OBJECT_TYPE));
  assertFalse(createUnionType(STRING_TYPE,NULL_TYPE).isSubtype(NO_TYPE));
  assertFalse(createUnionType(STRING_TYPE,NULL_TYPE).isSubtype(NO_OBJECT_TYPE));
  assertFalse(createUnionType(NO_OBJECT_TYPE,NULL_TYPE).isSubtype(OBJECT_TYPE));
  assertTrue(NUMBER_TYPE.isSubtype(OBJECT_NUMBER_STRING));
  assertTrue(OBJECT_TYPE.isSubtype(OBJECT_NUMBER_STRING));
  assertTrue(STRING_TYPE.isSubtype(OBJECT_NUMBER_STRING));
  assertTrue(NO_OBJECT_TYPE.isSubtype(OBJECT_NUMBER_STRING));
  assertTrue(NUMBER_TYPE.isSubtype(NUMBER_STRING_BOOLEAN));
  assertTrue(BOOLEAN_TYPE.isSubtype(NUMBER_STRING_BOOLEAN));
  assertTrue(STRING_TYPE.isSubtype(NUMBER_STRING_BOOLEAN));
  assertTrue(NUMBER_TYPE.isSubtype(OBJECT_NUMBER_STRING_BOOLEAN));
  assertTrue(OBJECT_TYPE.isSubtype(OBJECT_NUMBER_STRING_BOOLEAN));
  assertTrue(STRING_TYPE.isSubtype(OBJECT_NUMBER_STRING_BOOLEAN));
  assertTrue(BOOLEAN_TYPE.isSubtype(OBJECT_NUMBER_STRING_BOOLEAN));
  assertTrue(NO_OBJECT_TYPE.isSubtype(OBJECT_NUMBER_STRING_BOOLEAN));
}
