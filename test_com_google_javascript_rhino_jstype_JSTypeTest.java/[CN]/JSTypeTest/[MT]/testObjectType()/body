{
  PrototypeObjectType objectType=new PrototypeObjectType(registry,null,null);
  assertFalse(objectType.isAllType());
  assertFalse(objectType.isArrayType());
  assertFalse(objectType.isDateType());
  assertFalse(objectType.isFunctionPrototypeType());
  assertTrue(objectType.getImplicitPrototype() == OBJECT_TYPE);
  assertTrue(objectType.isSubtype(ALL_TYPE));
  assertFalse(objectType.isSubtype(STRING_OBJECT_TYPE));
  assertFalse(objectType.isSubtype(NUMBER_TYPE));
  assertFalse(objectType.isSubtype(functionType));
  assertFalse(objectType.isSubtype(NULL_TYPE));
  assertFalse(objectType.isSubtype(DATE_TYPE));
  assertTrue(objectType.isSubtype(OBJECT_TYPE));
  assertTrue(objectType.isSubtype(unresolvedNamedType));
  assertFalse(objectType.isSubtype(namedGoogBar));
  assertFalse(objectType.isSubtype(REGEXP_TYPE));
  assertNull(objectType.autoboxesTo());
  assertCanTestForEqualityWith(objectType,NUMBER_TYPE);
  assertFalse(objectType.matchesInt32Context());
  assertFalse(objectType.matchesNumberContext());
  assertTrue(objectType.matchesObjectContext());
  assertFalse(objectType.matchesStringContext());
  assertFalse(objectType.matchesUint32Context());
  assertFalse(objectType.isNullable());
  assertTrue(createNullableType(objectType).isNullable());
  assertEquals("{...}",objectType.toString());
  assertEquals(null,objectType.getDisplayName());
  assertFalse(objectType.hasReferenceName());
  assertEquals("anObject",new PrototypeObjectType(registry,"anObject",null).getDisplayName());
  Asserts.assertResolvesToSame(objectType);
}
