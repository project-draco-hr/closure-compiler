{
  Preconditions.checkNotNull(block);
  Preconditions.checkNotNull(labelName);
  Node root=block;
  boolean hasReturnAtExit=false;
  int returnCount=NodeUtil.getNodeTypeReferenceCount(block,Token.RETURN,new NodeUtil.MatchShallowStatement());
  if (returnCount > 0) {
    hasReturnAtExit=hasReturnAtExit(block);
    if (hasReturnAtExit) {
      convertLastReturnToStatement(block,resultName);
      returnCount--;
    }
    if (returnCount > 0) {
      replaceReturnWithBreak(block,null,resultName,labelName);
      Node name=IR.labelName(labelName).srcref(block);
      Node label=IR.label(name,block).srcref(block);
      Node newRoot=IR.block().srcref(block);
      newRoot.addChildrenToBack(label);
      root=newRoot;
    }
  }
  if (resultMustBeSet && !hasReturnAtExit && resultName != null) {
    addDummyAssignment(block,resultName);
  }
  return root;
}
