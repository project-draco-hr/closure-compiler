{
  if (targetProperty == null)   throw ScriptRuntime.notFunctionError(this);
  String methodName=targetProperty.getLocalPart();
  boolean isApply=methodName.equals("apply");
  if (isApply || methodName.equals("call"))   return applyOrCall(isApply,cx,scope,thisObj,args);
  if (!(thisObj instanceof XMLObject)) {
    throw ScriptRuntime.typeError1("msg.incompat.call",methodName);
  }
  Object func=null;
  Scriptable sobj=thisObj;
  while (sobj instanceof XMLObject) {
    XMLObject xmlObject=(XMLObject)sobj;
    func=xmlObject.getFunctionProperty(cx,methodName);
    if (func != Scriptable.NOT_FOUND) {
      break;
    }
    sobj=xmlObject.getExtraMethodSource(cx);
    if (sobj != null) {
      thisObj=sobj;
      if (!(sobj instanceof XMLObject)) {
        func=ScriptableObject.getProperty(sobj,methodName);
      }
    }
  }
  if (!(func instanceof Callable)) {
    throw ScriptRuntime.notFunctionError(thisObj,func,methodName);
  }
  return ((Callable)func).call(cx,scope,thisObj,args);
}
