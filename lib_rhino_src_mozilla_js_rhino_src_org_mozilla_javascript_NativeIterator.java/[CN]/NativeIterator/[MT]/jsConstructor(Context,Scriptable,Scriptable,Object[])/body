{
  if (args.length == 0 || args[0] == null || args[0] == Undefined.instance) {
    throw ScriptRuntime.typeError1("msg.no.properties",ScriptRuntime.toString(args[0]));
  }
  Scriptable obj=ScriptRuntime.toObject(scope,args[0]);
  boolean keyOnly=args.length > 1 && ScriptRuntime.toBoolean(args[1]);
  if (thisObj != null) {
    Iterator<?> iterator=VMBridge.instance.getJavaIterator(cx,scope,obj);
    if (iterator != null) {
      scope=ScriptableObject.getTopLevelScope(scope);
      return cx.getWrapFactory().wrap(cx,scope,new WrappedJavaIterator(iterator,scope),WrappedJavaIterator.class);
    }
    Scriptable jsIterator=ScriptRuntime.toIterator(cx,scope,obj,keyOnly);
    if (jsIterator != null) {
      return jsIterator;
    }
  }
  Object objectIterator=ScriptRuntime.enumInit(obj,cx,keyOnly ? ScriptRuntime.ENUMERATE_KEYS_NO_ITERATOR : ScriptRuntime.ENUMERATE_ARRAY_NO_ITERATOR);
  ScriptRuntime.setEnumNumbers(objectIterator,true);
  NativeIterator result=new NativeIterator(objectIterator);
  result.setPrototype(ScriptableObject.getClassPrototype(scope,result.getClassName()));
  result.setParentScope(scope);
  return result;
}
