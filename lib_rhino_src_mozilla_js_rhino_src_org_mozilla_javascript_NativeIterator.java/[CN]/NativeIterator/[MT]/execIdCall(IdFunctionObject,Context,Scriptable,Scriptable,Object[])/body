{
  if (!f.hasTag(ITERATOR_TAG)) {
    return super.execIdCall(f,cx,scope,thisObj,args);
  }
  int id=f.methodId();
  if (id == Id_constructor) {
    return jsConstructor(cx,scope,thisObj,args);
  }
  if (!(thisObj instanceof NativeIterator))   throw incompatibleCallError(f);
  NativeIterator iterator=(NativeIterator)thisObj;
switch (id) {
case Id_next:
    return iterator.next(cx,scope);
case Id___iterator__:
  return thisObj;
default :
throw new IllegalArgumentException(String.valueOf(id));
}
}
