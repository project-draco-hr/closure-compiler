{
  assertEquals(1.0,NodeUtil.getNumberValue(getNode("'\\uFEFF1'")));
  assertEquals(0.0,NodeUtil.getNumberValue(getNode("''")));
  assertEquals(0.0,NodeUtil.getNumberValue(getNode("' '")));
  assertEquals(0.0,NodeUtil.getNumberValue(getNode("' \\t'")));
  assertEquals(0.0,NodeUtil.getNumberValue(getNode("'+0'")));
  assertEquals(-0.0,NodeUtil.getNumberValue(getNode("'-0'")));
  assertEquals(2.0,NodeUtil.getNumberValue(getNode("'+2'")));
  assertEquals(-1.6,NodeUtil.getNumberValue(getNode("'-1.6'")));
  assertEquals(16.0,NodeUtil.getNumberValue(getNode("'16'")));
  assertEquals(16.0,NodeUtil.getNumberValue(getNode("' 16 '")));
  assertEquals(16.0,NodeUtil.getNumberValue(getNode("' 16 '")));
  assertEquals(12300.0,NodeUtil.getNumberValue(getNode("'123e2'")));
  assertEquals(12300.0,NodeUtil.getNumberValue(getNode("'123E2'")));
  assertEquals(1.23,NodeUtil.getNumberValue(getNode("'123e-2'")));
  assertEquals(1.23,NodeUtil.getNumberValue(getNode("'123E-2'")));
  assertEquals(-1.23,NodeUtil.getNumberValue(getNode("'-123e-2'")));
  assertEquals(-1.23,NodeUtil.getNumberValue(getNode("'-123E-2'")));
  assertEquals(1.23,NodeUtil.getNumberValue(getNode("'+123e-2'")));
  assertEquals(1.23,NodeUtil.getNumberValue(getNode("'+123E-2'")));
  assertEquals(12300.0,NodeUtil.getNumberValue(getNode("'+123e+2'")));
  assertEquals(12300.0,NodeUtil.getNumberValue(getNode("'+123E+2'")));
  assertEquals(15.0,NodeUtil.getNumberValue(getNode("'0xf'")));
  assertEquals(15.0,NodeUtil.getNumberValue(getNode("'0xF'")));
  assertNull(NodeUtil.getNumberValue(getNode("'-0xf'")));
  assertNull(NodeUtil.getNumberValue(getNode("'-0xF'")));
  assertNull(NodeUtil.getNumberValue(getNode("'+0xf'")));
  assertNull(NodeUtil.getNumberValue(getNode("'+0xF'")));
  assertEquals(16.0,NodeUtil.getNumberValue(getNode("'0X10'")));
  assertEquals(Double.NaN,NodeUtil.getNumberValue(getNode("'0X10.8'")));
  assertEquals(77.0,NodeUtil.getNumberValue(getNode("'077'")));
  assertEquals(-77.0,NodeUtil.getNumberValue(getNode("'-077'")));
  assertEquals(-77.5,NodeUtil.getNumberValue(getNode("'-077.5'")));
  assertEquals(Double.NEGATIVE_INFINITY,NodeUtil.getNumberValue(getNode("'-Infinity'")));
  assertEquals(Double.POSITIVE_INFINITY,NodeUtil.getNumberValue(getNode("'Infinity'")));
  assertEquals(Double.POSITIVE_INFINITY,NodeUtil.getNumberValue(getNode("'+Infinity'")));
  assertNull(NodeUtil.getNumberValue(getNode("'-infinity'")));
  assertNull(NodeUtil.getNumberValue(getNode("'infinity'")));
  assertNull(NodeUtil.getNumberValue(getNode("'+infinity'")));
  assertEquals(Double.NaN,NodeUtil.getNumberValue(getNode("'NaN'")));
  assertEquals(Double.NaN,NodeUtil.getNumberValue(getNode("'some unknown string'")));
  assertEquals(Double.NaN,NodeUtil.getNumberValue(getNode("'123 blah'")));
  assertEquals(1.0,NodeUtil.getNumberValue(getNode("1")));
  assertEquals(-1.0,NodeUtil.getNumberValue(getNode("-1")));
  assertNull(NodeUtil.getNumberValue(getNode("+1")));
  assertEquals(22.0,NodeUtil.getNumberValue(getNode("22")));
  assertEquals(18.0,NodeUtil.getNumberValue(getNode("022")));
  assertEquals(34.0,NodeUtil.getNumberValue(getNode("0x22")));
  assertEquals(1.0,NodeUtil.getNumberValue(getNode("true")));
  assertEquals(0.0,NodeUtil.getNumberValue(getNode("false")));
  assertEquals(0.0,NodeUtil.getNumberValue(getNode("null")));
  assertEquals(Double.NaN,NodeUtil.getNumberValue(getNode("void 0")));
  assertEquals(Double.NaN,NodeUtil.getNumberValue(getNode("void f")));
  assertNull(NodeUtil.getNumberValue(getNode("void f()")));
  assertEquals(Double.NaN,NodeUtil.getNumberValue(getNode("NaN")));
  assertEquals(Double.POSITIVE_INFINITY,NodeUtil.getNumberValue(getNode("Infinity")));
  assertEquals(Double.NEGATIVE_INFINITY,NodeUtil.getNumberValue(getNode("-Infinity")));
  assertNull(NodeUtil.getNumberValue(getNode("infinity")));
  assertNull(NodeUtil.getNumberValue(getNode("-infinity")));
  assertNull(NodeUtil.getNumberValue(getNode("x")));
  assertNull(NodeUtil.getNumberValue(getNode("x.y")));
  assertNull(NodeUtil.getNumberValue(getNode("1/2")));
  assertNull(NodeUtil.getNumberValue(getNode("1-2")));
  assertNull(NodeUtil.getNumberValue(getNode("+1")));
}
