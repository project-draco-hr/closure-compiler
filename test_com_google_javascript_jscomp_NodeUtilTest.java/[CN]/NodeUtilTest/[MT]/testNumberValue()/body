{
  assertEquals(0.0,NodeUtil.getNumberValue(getNode("''")));
  assertEquals(2.0,NodeUtil.getNumberValue(getNode("'+2'")));
  assertEquals(-1.6,NodeUtil.getNumberValue(getNode("'-1.6'")));
  assertEquals(16.0,NodeUtil.getNumberValue(getNode("'16'")));
  assertEquals(12300.0,NodeUtil.getNumberValue(getNode("'123e2'")));
  assertEquals(12300.0,NodeUtil.getNumberValue(getNode("'123E2'")));
  assertEquals(1.23,NodeUtil.getNumberValue(getNode("'123e-2'")));
  assertEquals(1.23,NodeUtil.getNumberValue(getNode("'123E-2'")));
  assertEquals(16.0,NodeUtil.getNumberValue(getNode("'0x10'")),16.0);
  assertEquals(16.0,NodeUtil.getNumberValue(getNode("'0X10'")));
  assertEquals(77.0,NodeUtil.getNumberValue(getNode("'077'")));
  assertEquals(Double.NEGATIVE_INFINITY,NodeUtil.getNumberValue(getNode("'-Infinity'")));
  assertEquals(Double.POSITIVE_INFINITY,NodeUtil.getNumberValue(getNode("'Infinity'")));
  assertEquals(null,NodeUtil.getNumberValue(getNode("'-infinity'")));
  assertEquals(null,NodeUtil.getNumberValue(getNode("'infinity'")));
  assertEquals(Double.NaN,NodeUtil.getNumberValue(getNode("'NaN'")));
  assertEquals(null,NodeUtil.getNumberValue(getNode("'some unknown string'")));
  assertEquals(1.0,NodeUtil.getNumberValue(getNode("true")));
  assertEquals(0.0,NodeUtil.getNumberValue(getNode("false")));
  assertEquals(0.0,NodeUtil.getNumberValue(getNode("null")));
  assertEquals(Double.NaN,NodeUtil.getNumberValue(getNode("void 0")));
  assertEquals(Double.NaN,NodeUtil.getNumberValue(getNode("NaN")));
  assertEquals(Double.POSITIVE_INFINITY,NodeUtil.getNumberValue(getNode("Infinity")));
  assertEquals(Double.NEGATIVE_INFINITY,NodeUtil.getNumberValue(getNode("-Infinity")));
  assertEquals(null,NodeUtil.getNumberValue(getNode("infinity")));
  assertEquals(null,NodeUtil.getNumberValue(getNode("-infinity")));
}
