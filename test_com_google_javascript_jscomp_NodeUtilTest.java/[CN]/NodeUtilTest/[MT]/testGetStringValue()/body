{
  assertEquals("true",NodeUtil.getStringValue(getNode("true")));
  assertEquals("10",NodeUtil.getStringValue(getNode("10")));
  assertEquals("1",NodeUtil.getStringValue(getNode("1.0")));
  assertEquals("1.2323919403474454e+21",NodeUtil.getStringValue(getNode("1.2323919403474454e+21")));
  assertEquals("0",NodeUtil.getStringValue(getNode("'0'")));
  assertEquals(null,NodeUtil.getStringValue(getNode("/a/")));
  assertEquals("[object Object]",NodeUtil.getStringValue(getNode("{}")));
  assertThat(NodeUtil.getStringValue(getNode("[]"))).isEmpty();
  assertEquals("false",NodeUtil.getStringValue(getNode("false")));
  assertEquals("null",NodeUtil.getStringValue(getNode("null")));
  assertEquals("0",NodeUtil.getStringValue(getNode("0")));
  assertThat(NodeUtil.getStringValue(getNode("''"))).isEmpty();
  assertEquals("undefined",NodeUtil.getStringValue(getNode("undefined")));
  assertEquals("undefined",NodeUtil.getStringValue(getNode("void 0")));
  assertEquals("undefined",NodeUtil.getStringValue(getNode("void foo()")));
  assertEquals("NaN",NodeUtil.getStringValue(getNode("NaN")));
  assertEquals("Infinity",NodeUtil.getStringValue(getNode("Infinity")));
  assertEquals(null,NodeUtil.getStringValue(getNode("x")));
}
