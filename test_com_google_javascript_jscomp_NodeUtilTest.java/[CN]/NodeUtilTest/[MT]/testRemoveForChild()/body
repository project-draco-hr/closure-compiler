{
  Node actual=parse("for(var a=0;a<0;a++)foo()");
  Node forNode=actual.getFirstChild();
  Node child=forNode.getFirstChild();
  NodeUtil.removeChild(forNode,child);
  String expected="for(;a<0;a++)foo()";
  String difference=parse(expected).checkTreeEquals(actual);
  assertNull("Nodes do not match:\n" + difference,difference);
  actual=parse("for(var a=0;a<0;a++)foo()");
  forNode=actual.getFirstChild();
  child=forNode.getFirstChild().getNext();
  NodeUtil.removeChild(forNode,child);
  expected="for(var a=0;;a++)foo()";
  difference=parse(expected).checkTreeEquals(actual);
  assertNull("Nodes do not match:\n" + difference,difference);
  actual=parse("for(var a=0;a<0;a++)foo()");
  forNode=actual.getFirstChild();
  child=forNode.getFirstChild().getNext().getNext();
  NodeUtil.removeChild(forNode,child);
  expected="for(var a=0;a<0;)foo()";
  difference=parse(expected).checkTreeEquals(actual);
  assertNull("Nodes do not match:\n" + difference,difference);
  actual=parse("for(var a=0;a<0;a++)foo()");
  forNode=actual.getFirstChild();
  child=forNode.getLastChild();
  NodeUtil.removeChild(forNode,child);
  expected="for(var a=0;a<0;a++);";
  difference=parse(expected).checkTreeEquals(actual);
  assertNull("Nodes do not match:\n" + difference,difference);
  actual=parse("for(a in ack)foo();");
  forNode=actual.getFirstChild();
  child=forNode.getLastChild();
  NodeUtil.removeChild(forNode,child);
  expected="for(a in ack);";
  difference=parse(expected).checkTreeEquals(actual);
  assertNull("Nodes do not match:\n" + difference,difference);
}
