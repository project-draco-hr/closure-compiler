{
  Node callExpr=getNode("new x().method()");
  assertTrue(NodeUtil.functionCallHasSideEffects(callExpr));
  Node newExpr=callExpr.getFirstChild().getFirstChild();
  Preconditions.checkState(newExpr.isNew());
  Node.SideEffectFlags flags=new Node.SideEffectFlags();
  flags.clearAllFlags();
  newExpr.setSideEffectFlags(flags.valueOf());
  flags.clearAllFlags();
  callExpr.setSideEffectFlags(flags.valueOf());
  assertTrue(NodeUtil.evaluatesToLocalValue(callExpr));
  assertFalse(NodeUtil.functionCallHasSideEffects(callExpr));
  assertFalse(NodeUtil.mayHaveSideEffects(callExpr));
  flags.clearAllFlags();
  newExpr.setSideEffectFlags(flags.valueOf());
  flags.clearAllFlags();
  flags.setMutatesThis();
  callExpr.setSideEffectFlags(flags.valueOf());
  assertTrue(NodeUtil.evaluatesToLocalValue(callExpr));
  assertFalse(NodeUtil.functionCallHasSideEffects(callExpr));
  assertFalse(NodeUtil.mayHaveSideEffects(callExpr));
  flags.clearAllFlags();
  newExpr.setSideEffectFlags(flags.valueOf());
  flags.clearAllFlags();
  flags.setMutatesThis();
  flags.setReturnsTainted();
  callExpr.setSideEffectFlags(flags.valueOf());
  assertFalse(NodeUtil.evaluatesToLocalValue(callExpr));
  assertFalse(NodeUtil.functionCallHasSideEffects(callExpr));
  assertFalse(NodeUtil.mayHaveSideEffects(callExpr));
  flags.clearAllFlags();
  newExpr.setSideEffectFlags(flags.valueOf());
  flags.clearAllFlags();
  flags.setReturnsTainted();
  callExpr.setSideEffectFlags(flags.valueOf());
  assertFalse(NodeUtil.evaluatesToLocalValue(callExpr));
  assertFalse(NodeUtil.functionCallHasSideEffects(callExpr));
  assertFalse(NodeUtil.mayHaveSideEffects(callExpr));
  flags.clearAllFlags();
  flags.setMutatesGlobalState();
  newExpr.setSideEffectFlags(flags.valueOf());
  flags.clearAllFlags();
  callExpr.setSideEffectFlags(flags.valueOf());
  assertTrue(NodeUtil.evaluatesToLocalValue(callExpr));
  assertFalse(NodeUtil.functionCallHasSideEffects(callExpr));
  assertTrue(NodeUtil.mayHaveSideEffects(callExpr));
}
