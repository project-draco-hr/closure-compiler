{
  assertSideEffect(true,"i++");
  assertSideEffect(true,"[b, [a, i++]]");
  assertSideEffect(true,"i=3");
  assertSideEffect(true,"[0, i=3]");
  assertSideEffect(true,"b()");
  assertSideEffect(true,"[1, b()]");
  assertSideEffect(true,"b.b=4");
  assertSideEffect(true,"b.b--");
  assertSideEffect(true,"i--");
  assertSideEffect(true,"a[0][i=4]");
  assertSideEffect(true,"a += 3");
  assertSideEffect(true,"a, b, z += 4");
  assertSideEffect(true,"a ? c : d++");
  assertSideEffect(true,"a + c++");
  assertSideEffect(true,"a + c - d()");
  assertSideEffect(true,"a + c - d()");
  assertSideEffect(true,"function foo() {}");
  assertSideEffect(true,"while(true);");
  assertSideEffect(true,"if(true){a()}");
  assertSideEffect(false,"if(true){a}");
  assertSideEffect(false,"(function() { })");
  assertSideEffect(false,"(function() { i++ })");
  assertSideEffect(false,"[function a(){}]");
  assertSideEffect(false,"a");
  assertSideEffect(false,"[b, c [d, [e]]]");
  assertSideEffect(false,"({a: x, b: y, c: z})");
  assertSideEffect(false,"/abc/gi");
  assertSideEffect(false,"'a'");
  assertSideEffect(false,"0");
  assertSideEffect(false,"a + c");
  assertSideEffect(false,"'c' + a[0]");
  assertSideEffect(false,"a[0][1]");
  assertSideEffect(false,"'a' + c");
  assertSideEffect(false,"'a' + a.name");
  assertSideEffect(false,"1, 2, 3");
  assertSideEffect(false,"a, b, 3");
  assertSideEffect(false,"(function(a, b) {  })");
  assertSideEffect(false,"a ? c : d");
  assertSideEffect(false,"'1' + navigator.userAgent");
  assertSideEffect(false,"new RegExp('foobar', 'i')");
  assertSideEffect(true,"new RegExp(SomethingWacky(), 'i')");
  assertSideEffect(false,"new Array()");
  assertSideEffect(false,"new Array");
  assertSideEffect(false,"new Array(4)");
  assertSideEffect(false,"new Array('a', 'b', 'c')");
  assertSideEffect(true,"new SomeClassINeverHeardOf()");
}
