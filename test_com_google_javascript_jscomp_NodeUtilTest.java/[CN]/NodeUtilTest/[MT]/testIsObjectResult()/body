{
  assertFalse(NodeUtil.isObjectResult(getNode("1")));
  assertFalse(NodeUtil.isObjectResult(getNode("true")));
  assertFalse(NodeUtil.isObjectResult(getNode("+true")));
  assertFalse(NodeUtil.isObjectResult(getNode("+1")));
  assertFalse(NodeUtil.isObjectResult(getNode("-1")));
  assertFalse(NodeUtil.isObjectResult(getNode("-Infinity")));
  assertFalse(NodeUtil.isObjectResult(getNode("Infinity")));
  assertFalse(NodeUtil.isObjectResult(getNode("NaN")));
  assertFalse(NodeUtil.isObjectResult(getNode("undefined")));
  assertFalse(NodeUtil.isObjectResult(getNode("void 0")));
  assertFalse(NodeUtil.isObjectResult(getNode("a << b")));
  assertFalse(NodeUtil.isObjectResult(getNode("a >> b")));
  assertFalse(NodeUtil.isObjectResult(getNode("a >>> b")));
  assertFalse(NodeUtil.isObjectResult(getNode("a == b")));
  assertFalse(NodeUtil.isObjectResult(getNode("a != b")));
  assertFalse(NodeUtil.isObjectResult(getNode("a === b")));
  assertFalse(NodeUtil.isObjectResult(getNode("a !== b")));
  assertFalse(NodeUtil.isObjectResult(getNode("a < b")));
  assertFalse(NodeUtil.isObjectResult(getNode("a > b")));
  assertFalse(NodeUtil.isObjectResult(getNode("a <= b")));
  assertFalse(NodeUtil.isObjectResult(getNode("a >= b")));
  assertFalse(NodeUtil.isObjectResult(getNode("a in b")));
  assertFalse(NodeUtil.isObjectResult(getNode("a instanceof b")));
  assertFalse(NodeUtil.isObjectResult(getNode("delete a")));
  assertFalse(NodeUtil.isObjectResult(getNode("'a'")));
  assertFalse(NodeUtil.isObjectResult(getNode("'a'+b")));
  assertFalse(NodeUtil.isObjectResult(getNode("a+'b'")));
  assertFalse(NodeUtil.isObjectResult(getNode("a+b")));
  assertFalse(NodeUtil.isObjectResult(getNode("{},true")));
  assertFalse(NodeUtil.isObjectResult(getNode("a()")));
  assertFalse(NodeUtil.isObjectResult(getNode("''.a")));
  assertFalse(NodeUtil.isObjectResult(getNode("a.b")));
  assertFalse(NodeUtil.isObjectResult(getNode("a.b()")));
  assertFalse(NodeUtil.isObjectResult(getNode("a().b()")));
  assertFalse(NodeUtil.isObjectResult(getNode("a ? true : {}")));
  assertFalse(NodeUtil.isObjectResult(getNode("true && {}")));
  assertFalse(NodeUtil.isObjectResult(getNode("true || {}")));
  assertTrue(NodeUtil.isObjectResult(getNode("new a.b()")));
  assertTrue(NodeUtil.isObjectResult(getNode("([true,false])")));
  assertTrue(NodeUtil.isObjectResult(getNode("({a:true})")));
  assertTrue(NodeUtil.isObjectResult(getNode("a={}")));
  assertTrue(NodeUtil.isObjectResult(getNode("[] && {}")));
  assertTrue(NodeUtil.isObjectResult(getNode("[] || {}")));
  assertTrue(NodeUtil.isObjectResult(getNode("a ? [] : {}")));
  assertTrue(NodeUtil.isObjectResult(getNode("{},[]")));
  assertTrue(NodeUtil.isObjectResult(getNode("/a/g")));
}
