{
  assertEquals(true,executedOnceTestCase("x;"));
  assertEquals(true,executedOnceTestCase("x && 1;"));
  assertEquals(false,executedOnceTestCase("1 && x;"));
  assertEquals(false,executedOnceTestCase("1 && (x && 1);"));
  assertEquals(true,executedOnceTestCase("x || 1;"));
  assertEquals(false,executedOnceTestCase("1 || x;"));
  assertEquals(false,executedOnceTestCase("1 && (x || 1);"));
  assertEquals(true,executedOnceTestCase("x ? 1 : 2;"));
  assertEquals(false,executedOnceTestCase("1 ? 1 : x;"));
  assertEquals(false,executedOnceTestCase("1 ? x : 2;"));
  assertEquals(false,executedOnceTestCase("1 && (x ? 1 : 2);"));
  assertEquals(true,executedOnceTestCase("if (x) {}"));
  assertEquals(false,executedOnceTestCase("if (true) {x;}"));
  assertEquals(false,executedOnceTestCase("if (true) {} else {x;}"));
  assertEquals(false,executedOnceTestCase("if (1) { if (x) {} }"));
  assertEquals(true,executedOnceTestCase("for(x;;){}"));
  assertEquals(false,executedOnceTestCase("for(;x;){}"));
  assertEquals(false,executedOnceTestCase("for(;;x){}"));
  assertEquals(false,executedOnceTestCase("for(;;){x;}"));
  assertEquals(false,executedOnceTestCase("if (1) { for(x;;){} }"));
  assertEquals(false,executedOnceTestCase("for(x in {}){}"));
  assertEquals(true,executedOnceTestCase("for({}.a in x){}"));
  assertEquals(false,executedOnceTestCase("for({}.a in {}){x}"));
  assertEquals(false,executedOnceTestCase("if (1) { for(x in {}){} }"));
  assertEquals(true,executedOnceTestCase("switch (x) {}"));
  assertEquals(false,executedOnceTestCase("switch (1) {case x:}"));
  assertEquals(false,executedOnceTestCase("switch (1) {case 1: x}"));
  assertEquals(false,executedOnceTestCase("switch (1) {default: x}"));
  assertEquals(false,executedOnceTestCase("if (1) { switch (x) {} }"));
  assertEquals(false,executedOnceTestCase("while (x) {}"));
  assertEquals(false,executedOnceTestCase("while (1) {x}"));
  assertEquals(false,executedOnceTestCase("do {} while (x)"));
  assertEquals(false,executedOnceTestCase("do {x} while (1)"));
  assertEquals(false,executedOnceTestCase("try {x} catch (e) {}"));
  assertEquals(false,executedOnceTestCase("try {} catch (e) {x}"));
  assertEquals(true,executedOnceTestCase("try {} finally {x}"));
  assertEquals(false,executedOnceTestCase("if (1) { try {} finally {x} }"));
}
