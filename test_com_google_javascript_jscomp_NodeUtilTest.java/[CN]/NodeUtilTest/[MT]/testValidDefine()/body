{
  assertTrue(testValidDefineValue("1"));
  assertTrue(testValidDefineValue("-3"));
  assertTrue(testValidDefineValue("true"));
  assertTrue(testValidDefineValue("false"));
  assertTrue(testValidDefineValue("'foo'"));
  assertFalse(testValidDefineValue("x"));
  assertFalse(testValidDefineValue("null"));
  assertFalse(testValidDefineValue("undefined"));
  assertFalse(testValidDefineValue("NaN"));
  assertTrue(testValidDefineValue("!true"));
  assertTrue(testValidDefineValue("-true"));
  assertTrue(testValidDefineValue("1 & 8"));
  assertTrue(testValidDefineValue("1 + 8"));
  assertTrue(testValidDefineValue("'a' + 'b'"));
  assertTrue(testValidDefineValue("true ? 'a' : 'b'"));
  assertFalse(testValidDefineValue("1 & foo"));
  assertFalse(testValidDefineValue("foo ? 'a' : 'b'"));
}
