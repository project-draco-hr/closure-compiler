{
  FormatSpecifierParser fsp=new FormatSpecifierParser(format);
  int currentObjectIndex=0;
  Object lastArgument=null;
  boolean hasLastArgumentSet=false;
  int length=format.length();
  int i=0;
  while (i < length) {
    int plainTextStart=i;
    int nextPercent=format.indexOf('%',i);
    int plainTextEnd=(nextPercent == -1) ? length : nextPercent;
    if (plainTextEnd > plainTextStart) {
      outputCharSequence(format,plainTextStart,plainTextEnd);
    }
    i=plainTextEnd;
    if (i < length) {
      FormatToken token=fsp.parseFormatToken(i + 1);
      Object argument=null;
      if (token.requireArgument()) {
        int index=token.getArgIndex() == FormatToken.UNSET ? currentObjectIndex++ : token.getArgIndex();
        argument=getArgument(args,index,fsp,lastArgument,hasLastArgumentSet);
        lastArgument=argument;
        hasLastArgumentSet=true;
      }
      CharSequence substitution=transform(token,argument);
      if (substitution != null) {
        outputCharSequence(substitution,0,substitution.length());
      }
      i=fsp.i;
    }
  }
}
