{
  Visitor visitor=new Visitor(){
    @Override public void visit(    Node typeNode){
      if (typeNode.isString()) {
        String typeString=typeNode.getString();
        if (mode == Mode.SINGLE_FILE && !typeString.contains(".")) {
          return;
        }
        String rootName=Splitter.on('.').split(typeString).iterator().next();
        Var var=t.getScope().getVar(rootName);
        if (var == null || !var.isExtern()) {
          usagesMap.put(typeString,n);
          Node getprop=NodeUtil.newQName(compiler,typeString);
          getprop.useSourceInfoIfMissingFromForTree(typeNode);
          visitQualifiedName(getprop);
        }
 else {
          weakUsages.put(typeString,n);
        }
      }
    }
  }
;
  NodeUtil.visitPreOrder(rootTypeNode,visitor,pred);
}
