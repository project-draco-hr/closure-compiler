{
  String required=codingConvention.extractClassNameIfRequire(call,parent);
  if (required != null) {
    if (requires.containsKey(required)) {
      reportDuplicateRequireWarning(call,required);
    }
 else {
      requires.put(required,call);
    }
  }
  Node callee=call.getFirstChild();
  if (callee.isName()) {
    weakUsages.put(callee.getString(),callee);
    if (codingConvention.isClassFactoryCall(call)) {
      if (parent.isName()) {
        constructors.add(parent.getString());
      }
 else       if (parent.isAssign()) {
        constructors.add(parent.getFirstChild().getQualifiedName());
      }
    }
  }
}
