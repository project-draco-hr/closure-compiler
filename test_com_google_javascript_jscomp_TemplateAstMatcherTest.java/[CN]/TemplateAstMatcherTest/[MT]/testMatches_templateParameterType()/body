{
  String externs="";
  String template="" + "/**\n" + " * @param {string} foo\n"+ " */\n"+ "function template(foo) {\n"+ "  foo;\n"+ "}\n";
  TestNodePair pair=compile(externs,template,"'str'");
  assertNotMatch(pair.templateNode,pair.getTestExprResultRoot());
  assertMatch(pair.templateNode,pair.getTestExprResultRoot().getFirstChild());
  pair=compile(externs,template,"'different_str'");
  assertNotMatch(pair.templateNode,pair.getTestExprResultRoot());
  assertMatch(pair.templateNode,pair.getTestExprResultRoot().getFirstChild());
  pair=compile(externs,template,"var foo = 'str';");
  assertNotMatch(pair.templateNode,pair.testNode.getFirstChild());
  assertMatch(pair.templateNode,pair.testNode.getFirstGrandchild());
  assertMatch(pair.templateNode,pair.testNode.getFirstGrandchild().getFirstChild());
  template="" + "/**\n" + " * @param {*} foo\n"+ " */\n"+ "function template(foo) {\n"+ "  foo;\n"+ "}\n";
  pair=compile(externs,template,"'str'");
  assertNotMatch(pair.templateNode,pair.getTestExprResultRoot());
  assertMatch(pair.templateNode,pair.getTestExprResultRoot().getFirstChild());
  pair=compile(externs,template,"3");
  assertNotMatch(pair.templateNode,pair.getTestExprResultRoot());
  assertMatch(pair.templateNode,pair.getTestExprResultRoot().getFirstChild());
  pair=compile(externs,template,"new Object()");
  assertNotMatch(pair.templateNode,pair.getTestExprResultRoot());
  assertMatch(pair.templateNode,pair.getTestExprResultRoot().getFirstChild());
  template="" + "/**\n" + " * @param {string} foo\n"+ " * @param {number} bar\n"+ " */\n"+ "function template(foo, bar) {\n"+ "  bar + foo;\n"+ "}\n";
  pair=compile(externs,template,"'str'");
  assertNotMatch(pair.templateNode,pair.getTestExprResultRoot());
  assertNotMatch(pair.templateNode,pair.getTestExprResultRoot().getFirstChild());
  pair=compile(externs,template,"3");
  assertNotMatch(pair.templateNode,pair.getTestExprResultRoot());
  assertNotMatch(pair.templateNode,pair.getTestExprResultRoot().getFirstChild());
  pair=compile(externs,template,"new Object()");
  assertNotMatch(pair.templateNode,pair.getTestExprResultRoot());
  assertNotMatch(pair.templateNode,pair.getTestExprResultRoot().getFirstChild());
  pair=compile(externs,template,"3 + ''");
  assertNotMatch(pair.templateNode,pair.getTestExprResultRoot());
  assertMatch(pair.templateNode,pair.getTestExprResultRoot().getFirstChild());
  pair=compile(externs,template,"7 + 'str'");
  assertNotMatch(pair.templateNode,pair.getTestExprResultRoot());
  assertMatch(pair.templateNode,pair.getTestExprResultRoot().getFirstChild());
}
