{
  String template="" + "function template() {\n" + "  3;\n"+ "}\n";
  TestNodePair pair=compile("",template,"3");
  assertMatch(pair.templateNode,pair.testNode.getFirstChild().getFirstChild());
  pair=compile("",template,"5");
  assertNotMatch(pair.templateNode,pair.getTestExprResultRoot());
  assertNotMatch(pair.templateNode,pair.getTestExprResultRoot().getFirstChild());
  pair=compile("",template,"var foo = 3;");
  assertNotMatch(pair.templateNode,pair.testNode.getFirstChild());
  assertNotMatch(pair.templateNode,pair.testNode.getFirstChild().getFirstChild());
  assertMatch(pair.templateNode,pair.testNode.getFirstChild().getFirstChild().getFirstChild());
  pair=compile("",template,"obj.foo();");
  assertNotMatch(pair.templateNode,pair.getTestExprResultRoot());
  assertNotMatch(pair.templateNode,pair.getTestExprResultRoot().getFirstChild());
  template="" + "function template() {\n" + "  'str';\n"+ "}\n";
  pair=compile("",template,"'str'");
  assertMatch(pair.templateNode,pair.getTestExprResultRoot().getFirstChild());
  pair=compile("",template,"'not_str'");
  assertNotMatch(pair.templateNode,pair.getTestExprResultRoot());
  assertNotMatch(pair.templateNode,pair.getTestExprResultRoot().getFirstChild());
  pair=compile("",template,"var foo = 'str';");
  assertNotMatch(pair.templateNode,pair.testNode.getFirstChild());
  assertNotMatch(pair.templateNode,pair.testNode.getFirstChild().getFirstChild());
  assertMatch(pair.templateNode,pair.testNode.getFirstChild().getFirstChild().getFirstChild());
  pair=compile("",template,"obj.foo();");
  assertNotMatch(pair.templateNode,pair.getTestExprResultRoot());
  assertNotMatch(pair.templateNode,pair.getTestExprResultRoot().getFirstChild());
  template="" + "function template() {\n" + "  true;\n"+ "}\n";
  pair=compile("",template,"true");
  assertMatch(pair.templateNode,pair.getTestExprResultRoot().getFirstChild());
  pair=compile("",template,"!true");
  assertNotMatch(pair.templateNode,pair.getTestExprResultRoot());
  assertNotMatch(pair.templateNode,pair.getTestExprResultRoot().getFirstChild());
  pair=compile("",template,"false");
  assertNotMatch(pair.templateNode,pair.getTestExprResultRoot());
  assertNotMatch(pair.templateNode,pair.getTestExprResultRoot().getFirstChild());
  pair=compile("",template,"var foo = true;");
  assertNotMatch(pair.templateNode,pair.testNode.getFirstChild());
  assertNotMatch(pair.templateNode,pair.testNode.getFirstChild().getFirstChild());
  assertMatch(pair.templateNode,pair.testNode.getFirstChild().getFirstChild().getFirstChild());
  pair=compile("",template,"!undefined");
  assertNotMatch(pair.templateNode,pair.getTestExprResultRoot());
}
