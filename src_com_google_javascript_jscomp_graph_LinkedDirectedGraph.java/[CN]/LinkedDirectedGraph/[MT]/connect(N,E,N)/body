{
  DiGraphNode<N,E> node=getDirectedGraphNode(srcValue);
  if (node == null) {
    throw new IllegalArgumentException(srcValue + " does not exist in graph");
  }
  LinkedDirectedGraphNode<N,E> src=(LinkedDirectedGraphNode<N,E>)node;
  node=getDirectedGraphNode(destValue);
  if (node == null) {
    throw new IllegalArgumentException(destValue + " does not exist in graph");
  }
  LinkedDirectedGraphNode<N,E> dest=(LinkedDirectedGraphNode<N,E>)node;
  LinkedDirectedGraphEdge<N,E> edge=new LinkedDirectedGraphEdge<N,E>(src,edgeValue,dest);
  src.getOutEdges().add(edge);
  dest.getInEdges().add(edge);
  return edge;
}
