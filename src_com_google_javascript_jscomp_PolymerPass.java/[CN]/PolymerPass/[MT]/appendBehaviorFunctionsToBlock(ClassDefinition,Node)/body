{
  String qualifiedPath=cls.target.getQualifiedName() + ".prototype.";
  Map<String,Node> nameToExprResult=new HashMap<>();
  for (  BehaviorDefinition behavior : cls.behaviors) {
    for (    MemberDefinition behaviorFunction : behavior.functionsToCopy) {
      String fnName=behaviorFunction.name.getString();
      if (nameToExprResult.containsKey(fnName)) {
        block.removeChild(nameToExprResult.get(fnName));
      }
      Node exprResult=IR.exprResult(IR.assign(NodeUtil.newQName(compiler,qualifiedPath + fnName),behaviorFunction.value.cloneTree()));
      JSDocInfoBuilder info=JSDocInfoBuilder.maybeCopyFrom(behaviorFunction.info);
      exprResult.getFirstChild().setJSDocInfo(info.build());
      block.addChildToBack(exprResult);
      nameToExprResult.put(fnName,exprResult);
    }
  }
}
