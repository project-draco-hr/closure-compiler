{
  Object result=runScript(importClass + "PrivateAccessClass.staticPackagePrivateInt");
  assertEquals(new Integer(0),result);
  result=runScript(importClass + "PrivateAccessClass.staticPrivateInt");
  assertEquals(new Integer(1),result);
  result=runScript(importClass + "PrivateAccessClass.staticProtectedInt");
  assertEquals(new Integer(2),result);
  result=runScript(importClass + "new PrivateAccessClass().packagePrivateString");
  assertEquals("package private",((NativeJavaObject)result).unwrap());
  result=runScript(importClass + "new PrivateAccessClass().privateString");
  assertEquals("private",((NativeJavaObject)result).unwrap());
  result=runScript(importClass + "new PrivateAccessClass().protectedString");
  assertEquals("protected",((NativeJavaObject)result).unwrap());
  result=runScript(importClass + "new PrivateAccessClass.PrivateNestedClass().packagePrivateInt");
  assertEquals(new Integer(0),result);
  result=runScript(importClass + "new PrivateAccessClass.PrivateNestedClass().privateInt");
  assertEquals(new Integer(1),result);
  result=runScript(importClass + "new PrivateAccessClass.PrivateNestedClass().protectedInt");
  assertEquals(new Integer(2),result);
}
