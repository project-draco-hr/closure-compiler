{
  if (type == null) {
    return ImmutableList.of();
  }
  UnionType unionType=type.toMaybeUnionType();
  if (unionType != null) {
    List<Symbol> result=Lists.newArrayListWithExpectedSize(2);
    for (    JSType alt : unionType.getAlternates()) {
      result.addAll(getAllSymbolsForType(alt,scope));
    }
    return result;
  }
  FunctionType fnType=type.toMaybeFunctionType();
  if (fnType != null) {
    Symbol result=globalScope.getSlot("Function");
    return result == null ? ImmutableList.<Symbol>of() : ImmutableList.of(result);
  }
  ObjectType objType=type.toObjectType();
  if (objType != null) {
    String name=objType.getReferenceName();
    Symbol result=scope.getSlot((name == null || !objType.isInstanceType()) ? "Object" : name);
    return result == null ? ImmutableList.<Symbol>of() : ImmutableList.of(result);
  }
  return ImmutableList.of();
}
