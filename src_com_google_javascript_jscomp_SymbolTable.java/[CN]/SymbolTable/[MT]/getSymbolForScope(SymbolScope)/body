{
  if (scope.isPropertyScope()) {
    JSType type=scope.getTypeOfThis();
    if (type != null) {
      if (type.isNominalConstructor()) {
        return getSymbolDeclaredBy(type.toMaybeFunctionType());
      }
 else       if (type.isFunctionPrototypeType()) {
        return getSymbolForInstancesOf(((ObjectType)type).getOwnerFunction());
      }
    }
    return null;
  }
  Node rootNode=scope.getRootNode();
  if (rootNode.getType() != Token.FUNCTION) {
    return null;
  }
  String name=NodeUtil.getBestLValueName(NodeUtil.getBestLValue(rootNode));
  return name == null ? null : scope.getParentScope().getSlot(name);
}
