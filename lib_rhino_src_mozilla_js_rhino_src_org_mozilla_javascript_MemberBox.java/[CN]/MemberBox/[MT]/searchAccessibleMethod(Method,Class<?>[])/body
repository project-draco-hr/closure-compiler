{
  int modifiers=method.getModifiers();
  if (Modifier.isPublic(modifiers) && !Modifier.isStatic(modifiers)) {
    Class<?> c=method.getDeclaringClass();
    if (!Modifier.isPublic(c.getModifiers())) {
      String name=method.getName();
      Class<?>[] intfs=c.getInterfaces();
      for (int i=0, N=intfs.length; i != N; ++i) {
        Class<?> intf=intfs[i];
        if (Modifier.isPublic(intf.getModifiers())) {
          try {
            return intf.getMethod(name,params);
          }
 catch (          NoSuchMethodException ex) {
          }
catch (          SecurityException ex) {
          }
        }
      }
      for (; ; ) {
        c=c.getSuperclass();
        if (c == null) {
          break;
        }
        if (Modifier.isPublic(c.getModifiers())) {
          try {
            Method m=c.getMethod(name,params);
            int mModifiers=m.getModifiers();
            if (Modifier.isPublic(mModifiers) && !Modifier.isStatic(mModifiers)) {
              return m;
            }
          }
 catch (          NoSuchMethodException ex) {
          }
catch (          SecurityException ex) {
          }
        }
      }
    }
  }
  return null;
}
