{
  testSame("/** @constructor */ function Foo() { this.p = null }\n" + "Foo.prototype.set = function(arg) { this.p = arg; };\n" + "Foo.prototype.get = function() { return this.p; };\n"+ "/** @constructor */ function A() {};\n"+ "Foo.prototype.set.call(new Foo, new A);\n"+ "var ret = Foo.prototype.get.call(new Foo);");
  ConcreteType fooP=getFunctionPrototype(getType("Foo"));
  ConcreteFunctionType gFun=getPropertyType(fooP,"get").toFunction();
  ConcreteFunctionType sFun=getPropertyType(fooP,"set").toFunction();
  assertTrue(isCalled(sFun));
  assertTrue(isCalled(gFun));
  assertTrue(isCalled(getType("A")));
  assertType("A",getType("ret"));
}
