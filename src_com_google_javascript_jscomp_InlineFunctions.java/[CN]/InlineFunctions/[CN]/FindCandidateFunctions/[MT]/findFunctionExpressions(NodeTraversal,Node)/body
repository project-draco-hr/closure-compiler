{
switch (n.getType()) {
case CALL:
    Node fnNode=null;
  if (n.getFirstChild().isFunction()) {
    fnNode=n.getFirstChild();
  }
 else   if (NodeUtil.isFunctionObjectCall(n)) {
    Node fnIdentifingNode=n.getFirstFirstChild();
    if (fnIdentifingNode.isFunction()) {
      fnNode=fnIdentifingNode;
    }
  }
if (fnNode != null) {
  Function fn=new FunctionExpression(fnNode,callsSeen++);
  maybeAddFunction(fn,t.getModule());
  anonFns.put(fnNode,fn.getName());
}
break;
default :
break;
}
}
