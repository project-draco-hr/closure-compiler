{
  if (!NodeUtil.isStatement(n)) {
    return;
  }
switch (n.getType()) {
case VAR:
    Preconditions.checkState(n.hasOneChild(),n);
  Node nameNode=n.getFirstChild();
if (nameNode.isName() && nameNode.hasChildren() && nameNode.getFirstChild().isFunction()) {
  maybeAddFunction(new FunctionVar(n),t.getModule());
}
break;
case FUNCTION:
Preconditions.checkState(NodeUtil.isStatementBlock(parent) || parent.isLabel());
if (!NodeUtil.isFunctionExpression(n)) {
Function fn=new NamedFunction(n);
maybeAddFunction(fn,t.getModule());
}
break;
}
}
