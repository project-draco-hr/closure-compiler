{
  Preconditions.checkState(fs.hasExistingFunctionDefinition());
  if (fs.canInline()) {
    Reference ref=fs.getReference(callNode);
    if (ref != null) {
      if (specializationState != null) {
        Node containingFunction=getContainingFunction(t);
        if (containingFunction != null) {
          specializationState.reportSpecializedFunction(containingFunction);
        }
      }
      if (enforceMaxSizeAfterInlining && targetSizeAfterInlineExceedsLimit(t,fs)) {
        fs.setRemove(false);
        return;
      }
      inlineFunction(t,ref,fs);
      ref.inlined=true;
    }
  }
}
