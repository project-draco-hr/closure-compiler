{
switch (n.getType()) {
case Token.CALL:
    Node child=n.getFirstChild();
  String name=null;
if (child.isName()) {
  name=child.getString();
}
 else if (child.isFunction()) {
  name=anonFunctionMap.get(child);
}
 else if (NodeUtil.isFunctionObjectCall(n)) {
  Preconditions.checkState(NodeUtil.isGet(child));
  Node fnIdentifingNode=child.getFirstChild();
  if (fnIdentifingNode.isName()) {
    name=fnIdentifingNode.getString();
  }
 else   if (fnIdentifingNode.isFunction()) {
    name=anonFunctionMap.get(fnIdentifingNode);
  }
}
if (name != null) {
FunctionState fs=functionMap.get(name);
if (fs != null) {
  callback.visitCallSite(t,n,parent,fs);
}
}
break;
}
}
