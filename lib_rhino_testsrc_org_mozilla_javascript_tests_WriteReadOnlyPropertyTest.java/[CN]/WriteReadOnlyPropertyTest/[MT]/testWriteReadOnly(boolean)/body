{
  final Method readMethod=Foo.class.getMethod("getMyProp",(Class[])null);
  final Foo foo=new Foo("hello");
  foo.defineProperty("myProp",null,readMethod,null,ScriptableObject.EMPTY);
  final String script="foo.myProp = 123; foo.myProp";
  final ContextAction action=new ContextAction(){
    public Object run(    final Context cx){
      final ScriptableObject top=cx.initStandardObjects();
      ScriptableObject.putProperty(top,"foo",foo);
      cx.evaluateString(top,script,"script",0,null);
      return null;
    }
  }
;
  final ContextFactory contextFactory=new ContextFactory(){
    @Override protected boolean hasFeature(    final Context cx,    final int featureIndex){
      if (Context.FEATURE_STRICT_MODE == featureIndex) {
        return !acceptWriteReadOnly;
      }
      return super.hasFeature(cx,featureIndex);
    }
  }
;
  contextFactory.call(action);
}
