{
  final List<Double> progressList=Lists.newArrayList();
  compiler=new Compiler(){
    @Override void setProgress(    double p){
      progressList.add(p);
    }
  }
;
  compiler.initCompilerOptionsIfTesting();
  optimizer=new PhaseOptimizer(compiler,null,new PhaseOptimizer.ProgressRange(0,100));
  addOneTimePass("x1");
  addOneTimePass("x2");
  addOneTimePass("x3");
  addOneTimePass("x4");
  optimizer.process(null,null);
  assertEquals(4,progressList.size());
  assertEquals(25,Math.round(progressList.get(0)));
  assertEquals(50,Math.round(progressList.get(1)));
  assertEquals(75,Math.round(progressList.get(2)));
  assertEquals(100,Math.round(progressList.get(3)));
}
