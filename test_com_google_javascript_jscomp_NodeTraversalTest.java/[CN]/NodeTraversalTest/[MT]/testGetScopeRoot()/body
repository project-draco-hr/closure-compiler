{
  Compiler compiler=new Compiler();
  NodeTraversal t=new NodeTraversal(compiler,new NodeTraversal.ScopedCallback(){
    @Override public void enterScope(    NodeTraversal t){
      Node root1=t.getScopeRoot();
      Node root2=t.getScope().getRootNode();
      assertEquals(root1,root2);
    }
    @Override public void exitScope(    NodeTraversal t){
    }
    @Override public boolean shouldTraverse(    NodeTraversal t,    Node n,    Node parent){
      return true;
    }
    @Override public void visit(    NodeTraversal t,    Node n,    Node parent){
    }
  }
);
  String code="" + "var a; " + "function foo() {"+ "  var b"+ "}";
  Node tree=parse(compiler,code);
  t.traverse(tree);
}
