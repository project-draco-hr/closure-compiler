{
  String name=n.getString();
  if (whitelist != null && whitelist.contains(name)) {
    return;
  }
  String[] parts=name.split("-");
  if (symbolMap != null) {
    String replacement=null;
switch (symbolMap.getStyle()) {
case BY_WHOLE:
      replacement=symbolMap.get(name);
    if (replacement == null) {
      compiler.report(t.makeError(n,UNKNOWN_SYMBOL_WARNING,name,name));
      return;
    }
  break;
case BY_PART:
String[] replaced=new String[parts.length];
for (int i=0; i < parts.length; i++) {
String part=symbolMap.get(parts[i]);
if (part == null) {
  compiler.report(t.makeError(n,UNKNOWN_SYMBOL_WARNING,parts[i],name));
  return;
}
replaced[i]=part;
}
replacement=Joiner.on("-").join(replaced);
break;
default :
throw new IllegalStateException("Unknown replacement style: " + symbolMap.getStyle());
}
n.setString(replacement);
}
if (cssNames != null) {
for (String element : parts) {
Integer count=cssNames.get(element);
if (count == null) {
count=Integer.valueOf(0);
}
cssNames.put(element,count.intValue() + 1);
}
}
}
