{
  parseAndInitializeExtractor(LINE_JOINER.join("/** @polymerBehavior */","var FunBehavior = {","  properties: {","    isFun: Boolean","  },","  /** @param {string} funAmount */","  doSomethingFun: function(funAmount) { alert('Something ' + funAmount + ' fun!'); },","  /** @override */","  created: function() {}","};","/** @polymerBehavior */","var RadBehavior = {","  properties: {","    howRad: Number","  },","  /** @param {number} radAmount */","  doSomethingRad: function(radAmount) { alert('Something ' + radAmount + ' rad!'); },","  /** @override */","  ready: function() {}","};","/** @polymerBehavior */","var SuperCoolBehaviors = [FunBehavior, RadBehavior];","/** @polymerBehavior */","var BoringBehavior = {","  properties: {","    boringString: String","  },","  /** @param {boolean} boredYet */","  doSomething: function(boredYet) { alert(boredYet + ' ' + this.boringString); },","};","var A = Polymer({","  is: 'x-element',","  behaviors: [ SuperCoolBehaviors, BoringBehavior ],","});"));
  ImmutableList<BehaviorDefinition> defs=extractor.extractBehaviors(behaviorArray);
  assertThat(defs).hasSize(3);
}
