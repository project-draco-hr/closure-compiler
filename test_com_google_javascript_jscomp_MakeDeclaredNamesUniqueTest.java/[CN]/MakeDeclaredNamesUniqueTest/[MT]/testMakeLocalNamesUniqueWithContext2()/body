{
  this.useDefaultRenamer=true;
  testSameWithInversion("var a;");
  testSameWithInversionEs6("let a;");
  testSameWithInversion("a;");
  testWithInversion("var a;function foo(a){var b;a}","var a;function foo(a$$1){var b;a$$1}");
  testWithInversion("var a;function foo(){var b;a}function boo(){var b;a}","var a;function foo(){var b;a}function boo(){var b$$1;a}");
  testWithInversion("function foo(a){var b}" + "function boo(a){var b}","function foo(a){var b}" + "function boo(a$$1){var b$$1}");
  testWithInversionEs6("let a;function foo(a){let b;a}","let a;function foo(a$$1){let b;a$$1}");
  testWithInversionEs6("let a;function foo(){let b;a}function boo(){let b;a}","let a;function foo(){let b;a}function boo(){let b$$1;a}");
  testWithInversionEs6("function foo(a){let b}" + "function boo(a){let b}","function foo(a){let b}" + "function boo(a$$1){let b$$1}");
  testWithInversion("var a = function foo(){foo()};var b = function foo(){foo()};","var a = function foo(){foo()};var b = function foo$$1(){foo$$1()};");
  testWithInversionEs6("let a = function foo(){foo()};let b = function foo(){foo()};","let a = function foo(){foo()};let b = function foo$$1(){foo$$1()};");
  testWithInversion("try { } catch(e) {e;}","try { } catch(e) {e;}");
  test("try { } catch(e) {e;}; try { } catch(e) {e;}","try { } catch(e) {e;}; try { } catch(e$$1) {e$$1;}");
  test("try { } catch(e) {e; try { } catch(e) {e;}};","try { } catch(e) {e; try { } catch(e$$1) {e$$1;} }; ");
}
