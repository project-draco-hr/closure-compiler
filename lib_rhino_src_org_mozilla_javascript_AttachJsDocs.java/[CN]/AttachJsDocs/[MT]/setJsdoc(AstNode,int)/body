{
  int ntype=n.getType();
  if (attachOnlyToParen) {
    attachOnlyToParen=false;
    if (ntype != Token.LP) {
      possibleJsdocTarget.setJsDocNode(currentJsdoc);
      return new NodePos(possibleJsdocTarget,possibleApos);
    }
  }
 else {
switch (ntype) {
case Token.BLOCK:
case Token.CASE:
case Token.DO:
case Token.FOR:
case Token.IF:
case Token.SWITCH:
case Token.THROW:
case Token.WHILE:
      return new NodePos(n,napos);
case Token.VAR:
    if (n instanceof VariableInitializer) {
      AstNode n2=((VariableInitializer)n).getTarget();
      n2.setJsDocNode(currentJsdoc);
      return new NodePos(n2,napos + n2.getPosition());
    }
  break;
}
}
n.setJsDocNode(currentJsdoc);
return new NodePos(n,napos);
}
