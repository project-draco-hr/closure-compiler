{
  if (that.isRecordType()) {
    RecordType thatRecord=that.toMaybeRecordType();
    RecordTypeBuilder builder=new RecordTypeBuilder(registry);
    builder.setSynthesized(true);
    JSType noType=registry.getNativeObjectType(JSTypeNative.NO_TYPE);
    for (    String property : getOwnPropertyNames()) {
      JSType thisPropertyType=getPropertyType(property);
      JSType propType=null;
      if (thatRecord.hasProperty(property)) {
        JSType thatPropertyType=thatRecord.getPropertyType(property);
        propType=thisPropertyType.getGreatestSubtype(thatPropertyType);
        if (propType.isEquivalentTo(noType)) {
          return noType;
        }
      }
 else {
        propType=thisPropertyType;
      }
      builder.addProperty(property,propType,getPropertyNode(property));
    }
    for (    String property : thatRecord.getOwnPropertyNames()) {
      if (!hasProperty(property)) {
        builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));
      }
    }
    return builder.build();
  }
  JSType greatestSubtype=registry.getNativeType(JSTypeNative.NO_OBJECT_TYPE);
  JSType thatRestrictedToObj=registry.getNativeType(JSTypeNative.OBJECT_TYPE).getGreatestSubtype(that);
  if (!thatRestrictedToObj.isEmptyType()) {
    for (    String propName : getOwnPropertyNames()) {
      JSType propType=getPropertyType(propName);
      UnionTypeBuilder builder=new UnionTypeBuilder(registry);
      for (      ObjectType alt : registry.getEachReferenceTypeWithProperty(propName)) {
        JSType altPropType=alt.getPropertyType(propName);
        if (altPropType != null && !alt.isEquivalentTo(this) && alt.isSubtype(that) && altPropType.isSubtype(propType)) {
          builder.addAlternate(alt);
        }
      }
      greatestSubtype=greatestSubtype.getLeastSupertype(builder.build());
    }
  }
  return greatestSubtype;
}
