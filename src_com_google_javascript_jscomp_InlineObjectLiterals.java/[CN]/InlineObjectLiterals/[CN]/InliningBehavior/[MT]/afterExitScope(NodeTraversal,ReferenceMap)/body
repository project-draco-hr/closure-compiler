{
  for (Iterator<Var> it=t.getScope().getVars(); it.hasNext(); ) {
    Var v=it.next();
    if (isVarInlineForbidden(v)) {
      continue;
    }
    ReferenceCollection referenceInfo=referenceMap.getReferences(v);
    if (isInlinableObject(referenceInfo.references)) {
      staleVars.add(v);
      Reference declaration=referenceInfo.references.get(0);
      Reference init=referenceInfo.getInitializingReference();
      splitObject(v,declaration,init,referenceInfo);
    }
  }
}
