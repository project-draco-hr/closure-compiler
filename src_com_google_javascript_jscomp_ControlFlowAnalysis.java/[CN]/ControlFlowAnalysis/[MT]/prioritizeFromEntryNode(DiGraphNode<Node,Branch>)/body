{
  PriorityQueue<DiGraphNode<Node,Branch>> worklist=new PriorityQueue<>(10,priorityComparator);
  worklist.add(entry);
  while (!worklist.isEmpty()) {
    DiGraphNode<Node,Branch> current=worklist.remove();
    if (nodePriorities.containsKey(current)) {
      continue;
    }
    nodePriorities.put(current,++priorityCounter);
    List<DiGraphNode<Node,Branch>> successors=cfg.getDirectedSuccNodes(current);
    for (    DiGraphNode<Node,Branch> candidate : successors) {
      worklist.add(candidate);
    }
  }
}
