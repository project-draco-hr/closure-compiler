{
  if (NodeUtil.isForIn(forNode) || forNode.isForOf()) {
    Node item=forNode.getFirstChild();
    Node collection=item.getNext();
    Node body=collection.getNext();
    createEdge(collection,Branch.UNCOND,forNode);
    createEdge(forNode,Branch.ON_TRUE,computeFallThrough(body));
    createEdge(forNode,Branch.ON_FALSE,computeFollowNode(forNode,this));
    connectToPossibleExceptionHandler(forNode,collection);
  }
 else {
    Node init=forNode.getFirstChild();
    Node cond=init.getNext();
    Node iter=cond.getNext();
    Node body=iter.getNext();
    createEdge(init,Branch.UNCOND,forNode);
    createEdge(forNode,Branch.ON_TRUE,computeFallThrough(body));
    if (!cond.isEmpty()) {
      createEdge(forNode,Branch.ON_FALSE,computeFollowNode(forNode,this));
    }
    createEdge(iter,Branch.UNCOND,forNode);
    connectToPossibleExceptionHandler(init,init);
    connectToPossibleExceptionHandler(forNode,cond);
    connectToPossibleExceptionHandler(iter,iter);
  }
}
