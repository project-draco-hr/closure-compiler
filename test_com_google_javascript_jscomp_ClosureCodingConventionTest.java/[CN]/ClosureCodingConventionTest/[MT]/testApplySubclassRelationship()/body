{
  JSTypeRegistry registry=new JSTypeRegistry(null);
  Node nodeA=new Node(Token.FUNCTION);
  FunctionType ctorA=registry.createConstructorType("A",nodeA,new Node(Token.PARAM_LIST),null);
  Node nodeB=new Node(Token.FUNCTION);
  FunctionType ctorB=registry.createConstructorType("B",nodeB,new Node(Token.PARAM_LIST),null);
  conv.applySubclassRelationship(ctorA,ctorB,SubclassType.INHERITS);
  assertTrue(ctorB.getPrototype().hasOwnProperty("constructor"));
  assertEquals(nodeB,ctorB.getPrototype().getPropertyNode("constructor"));
  assertTrue(ctorB.hasOwnProperty("superClass_"));
  assertEquals(nodeB,ctorB.getPropertyNode("superClass_"));
}
