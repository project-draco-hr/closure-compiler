{
  Map<String,Object> props=getProject().getProperties();
  for (  Map.Entry<String,Object> entry : props.entrySet()) {
    String key=entry.getKey();
    Object value=entry.getValue();
    if (key.startsWith(replacePropertiesPrefix)) {
      key=key.substring(replacePropertiesPrefix.length());
      if (value instanceof String) {
        final boolean isTrue="true".equals(value);
        final boolean isFalse="false".equals(value);
        if (isTrue || isFalse) {
          options.setDefineToBooleanLiteral(key,isTrue);
        }
 else {
          try {
            double dblTemp=Double.parseDouble((String)value);
            options.setDefineToDoubleLiteral(key,dblTemp);
          }
 catch (          NumberFormatException nfe) {
            options.setDefineToStringLiteral(key,(String)value);
          }
        }
      }
 else       if (value instanceof Boolean) {
        options.setDefineToBooleanLiteral(key,(Boolean)value);
      }
 else       if (value instanceof Integer) {
        options.setDefineToNumberLiteral(key,(Integer)value);
      }
 else       if (value instanceof Double) {
        options.setDefineToDoubleLiteral(key,(Double)value);
      }
 else {
        log("Unexpected property value for key=" + key + "; value="+ value);
      }
    }
  }
}
