{
  if (!expression.isName() && !expression.isCall()) {
    addNewWarning("msg.jsdoc.typetransformation.invalid.expression","basic type",expression);
    return false;
  }
  if (expression.isName()) {
    return validTTLTypeVar(expression);
  }
  if (!expression.getFirstChild().getString().equals(TYPE_KEYWORD)) {
    addNewWarning("msg.jsdoc.typetransformation.invalid.expression","basic type",expression);
    return false;
  }
  if (expression.getChildCount() < 1 + TYPE_MIN_PARAM_COUNT) {
    addNewWarning("msg.jsdoc.typetransformation.missing.param","type operation",expression);
    return false;
  }
  if (expression.getChildCount() > 1 + TYPE_MAX_PARAM_COUNT) {
    addNewWarning("msg.jsdoc.typetransformation.extra.param","type operation",expression);
    return false;
  }
  if (!expression.getChildAtIndex(1).isString()) {
    addNewWarning("msg.jsdoc.typetransformation.invalid","type name",expression);
    return false;
  }
  return true;
}
