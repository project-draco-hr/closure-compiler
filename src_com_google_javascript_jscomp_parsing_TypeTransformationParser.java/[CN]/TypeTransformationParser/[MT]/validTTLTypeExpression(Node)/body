{
  if (!expression.isName() && !expression.isCall()) {
    addNewWarning("msg.jsdoc.typetransformation.invalid.expression","type",expression);
    return false;
  }
  if (expression.isName()) {
    return validTTLTypeVar(expression);
  }
  Node operation=expression.getFirstChild();
  if (!TYPE_CONSTRUCTORS.contains(operation.getString())) {
    addNewWarning("msg.jsdoc.typetransformation.invalid.expression","type",operation);
    return false;
  }
  if (operation.getString().equals(TYPE_KEYWORD)) {
    return validTTLBasicTypeExpression(expression);
  }
  return validTTLUnionTypeExpression(expression);
}
