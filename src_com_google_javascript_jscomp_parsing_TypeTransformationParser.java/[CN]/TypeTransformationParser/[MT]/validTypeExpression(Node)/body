{
  if (!isValidExpression(expr)) {
    warnInvalidExpression("type",expr);
    return false;
  }
  if (isTypeVar(expr) || isTypeName(expr)) {
    return true;
  }
  Node operation=expr.getFirstChild();
  String name=operation.getString();
  if (!isValidTypeConstructor(name)) {
    warnInvalidExpression("type",expr);
    return false;
  }
  Keywords keyword=nameToKeyword(name);
  if (keyword == Keywords.TYPE) {
    return validTemplateTypeExpression(expr);
  }
  if (keyword == Keywords.UNION) {
    return validUnionTypeExpression(expr);
  }
  if (keyword == Keywords.NONE) {
    return validNoneTypeExpression(expr);
  }
  if (keyword == Keywords.RAWTYPEOF) {
    return validRawTypeOfTypeExpression(expr);
  }
  if (keyword == Keywords.TEMPLATETYPEOF) {
    return validTemplateTypeOfExpression(expr);
  }
  if (keyword == Keywords.RECORD) {
    return validRecordTypeExpression(expr);
  }
  throw new IllegalStateException("Invalid type expression");
}
