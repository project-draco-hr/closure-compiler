{
  Config config=new Config(new HashSet<String>(),new HashSet<String>(),true,LanguageMode.ECMASCRIPT6,false);
  ParseResult result=ParserRunner.parse(sourceFile,typeTransformationString,config,errorReporter);
  Node ast=result.ast;
  if (ast.getType() != Token.SCRIPT || ast.getFirstChild().getType() != Token.EXPR_RESULT) {
    addNewWarning("msg.jsdoc.typetransformation.invalid.expression",ast);
    return false;
  }
  Node expr=ast.getFirstChild().getFirstChild();
  if (!validTypeTransformationExpression(expr)) {
    return false;
  }
  typeTransformationAst=expr;
  return true;
}
