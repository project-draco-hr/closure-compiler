{
  Node name=n.getFirstChild();
  Node members=n.getLastChild();
  double nextValue=0;
  Node[] stringKeys=new Node[members.getChildCount()];
  for (int i=0; i < members.getChildCount(); i++) {
    Node child=members.getChildAtIndex(i);
    if (child.hasChildren()) {
      nextValue=child.getFirstChild().getDouble() + 1;
    }
 else {
      child.addChildToFront(IR.number(nextValue++));
    }
    stringKeys[i]=child;
  }
  for (  Node child : stringKeys) {
    child.detachFromParent();
  }
  Node var=IR.var(name.detachFromParent());
  Node objectlit=IR.objectlit(stringKeys);
  name.addChildToFront(objectlit);
  JSDocInfoBuilder builder=new JSDocInfoBuilder(false);
  builder.recordEnumParameterType(new JSTypeExpression(IR.string("number"),n.getSourceFileName()));
  var.setJSDocInfo(builder.build());
  parent.replaceChild(n,var.useSourceInfoIfMissingFromForTree(n));
  compiler.reportCodeChange();
}
