{
  boolean isMemberFunctionDef=parent.isMemberFunctionDef();
  String name=isMemberFunctionDef ? parent.getString() : n.getFirstChild().getString();
  if (!name.isEmpty() && overloadStack.peek().containsKey(name)) {
    compiler.report(JSError.make(n,OVERLOAD_NOT_SUPPORTED));
    if (isMemberFunctionDef) {
      parent.detach();
    }
 else {
      n.detach();
    }
    if (!processedOverloads.contains(overloadStack)) {
      Node original=overloadStack.peek().get(name);
      processedOverloads.add(original);
      Node paramList=original.getSecondChild();
      paramList.removeChildren();
      Node originalParent=original.getParent();
      Node originalJsDocNode=originalParent.isMemberFunctionDef() || originalParent.isAssign() ? originalParent : original;
      JSDocInfoBuilder builder=new JSDocInfoBuilder(false);
      builder.recordType(new JSTypeExpression(convertWithLocation(TypeDeclarationsIR.namedType("Function")),n.getSourceFileName()));
      originalJsDocNode.setJSDocInfo(builder.build());
    }
    compiler.reportCodeChange();
    return;
  }
  overloadStack.peek().put(name,n);
  Node jsDocNode=isMemberFunctionDef ? parent : n;
  maybeAddGenerics(n,jsDocNode);
  if (!(isMemberFunctionDef && n.isOptionalEs6Typed())) {
    maybeVisitColonType(n,jsDocNode);
  }
  if (n.getLastChild().isEmpty()) {
    n.replaceChild(n.getLastChild(),IR.block().useSourceInfoFrom(n));
  }
  if (!isMemberFunctionDef) {
    maybeCreateQualifiedDeclaration(n,parent);
  }
}
