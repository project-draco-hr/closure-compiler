{
switch (n.getType()) {
case Token.CLASS:
    visitClass(n,parent);
  popOverloads();
break;
case Token.INTERFACE:
visitInterface(n,parent);
popOverloads();
break;
case Token.ENUM:
visitEnum(n,parent);
break;
case Token.NAME:
case Token.REST:
maybeVisitColonType(n,n);
break;
case Token.FUNCTION:
visitFunction(n,parent);
break;
case Token.TYPE_ALIAS:
visitTypeAlias(t,n,parent);
break;
case Token.DECLARE:
visitAmbientDeclaration(n,parent);
break;
case Token.EXPORT:
visitExport(n,parent);
break;
case Token.NAMESPACE:
visitNamespaceDeclaration(n,parent);
popOverloads();
break;
case Token.VAR:
case Token.LET:
case Token.CONST:
visitVarInsideNamespace(n,parent);
break;
case Token.SCRIPT:
popOverloads();
break;
default :
}
}
