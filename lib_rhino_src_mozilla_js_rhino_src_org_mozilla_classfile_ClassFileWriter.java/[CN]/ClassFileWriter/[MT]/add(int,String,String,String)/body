{
  if (DEBUGCODE) {
    System.out.println("Add " + bytecodeStr(theOpCode) + ", "+ className+ ", "+ fieldName+ ", "+ fieldType);
  }
  int newStack=itsStackTop + stackChange(theOpCode);
  char fieldTypeChar=fieldType.charAt(0);
  int fieldSize=(fieldTypeChar == 'J' || fieldTypeChar == 'D') ? 2 : 1;
switch (theOpCode) {
case ByteCode.GETFIELD:
case ByteCode.GETSTATIC:
    newStack+=fieldSize;
  break;
case ByteCode.PUTSTATIC:
case ByteCode.PUTFIELD:
newStack-=fieldSize;
break;
default :
throw new IllegalArgumentException("bad opcode for field reference");
}
if (newStack < 0 || Short.MAX_VALUE < newStack) badStack(newStack);
short fieldRefIndex=itsConstantPool.addFieldRef(className,fieldName,fieldType);
addToCodeBuffer(theOpCode);
addToCodeInt16(fieldRefIndex);
itsStackTop=(short)newStack;
if (newStack > itsMaxStack) itsMaxStack=(short)newStack;
if (DEBUGSTACK) {
System.out.println("After " + bytecodeStr(theOpCode) + " stack = "+ itsStackTop);
}
}
