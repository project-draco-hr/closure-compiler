{
  Preconditions.checkState(NodeUtil.isFunction(fnNode));
  NodeUtil.visitPostOrder(fnNode.getLastChild(),new NodeUtil.Visitor(){
    @Override public void visit(    Node node){
      if (node.getType() == Token.RETURN && node.hasOneChild()) {
        Node result=node.removeFirstChild();
        if (NodeUtil.mayHaveSideEffects(result,compiler)) {
          node.getParent().addChildBefore(new Node(Token.EXPR_RESULT,result).copyInformationFrom(result),node);
        }
        compiler.reportCodeChange();
      }
    }
  }
,new NodeUtil.MatchShallowStatement());
}
