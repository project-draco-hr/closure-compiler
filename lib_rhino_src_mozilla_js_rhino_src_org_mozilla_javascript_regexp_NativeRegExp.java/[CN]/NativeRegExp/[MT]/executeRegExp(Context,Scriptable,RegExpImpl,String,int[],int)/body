{
  REGlobalData gData=new REGlobalData();
  int start=indexp[0];
  char[] charArray=str.toCharArray();
  int end=charArray.length;
  if (start > end)   start=end;
  boolean matches=matchRegExp(gData,re,charArray,start,end,res.multiline);
  if (!matches) {
    if (matchType != PREFIX)     return null;
    return Undefined.instance;
  }
  int index=gData.cp;
  int i=index;
  indexp[0]=i;
  int matchlen=i - (start + gData.skipped);
  int ep=index;
  index-=matchlen;
  Object result;
  Scriptable obj;
  if (matchType == TEST) {
    result=Boolean.TRUE;
    obj=null;
  }
 else {
    Scriptable scope=getTopLevelScope(scopeObj);
    result=ScriptRuntime.newObject(cx,scope,"Array",null);
    obj=(Scriptable)result;
    String matchstr=new String(charArray,index,matchlen);
    obj.put(0,obj,matchstr);
  }
  if (re.parenCount == 0) {
    res.parens=null;
    res.lastParen=SubString.emptySubString;
  }
 else {
    SubString parsub=null;
    int num;
    res.parens=new SubString[re.parenCount];
    for (num=0; num < re.parenCount; num++) {
      int cap_index=gData.parens_index(num);
      String parstr;
      if (cap_index != -1) {
        int cap_length=gData.parens_length(num);
        parsub=new SubString(charArray,cap_index,cap_length);
        res.parens[num]=parsub;
        if (matchType == TEST)         continue;
        parstr=parsub.toString();
        obj.put(num + 1,obj,parstr);
      }
 else {
        if (matchType != TEST)         obj.put(num + 1,obj,Undefined.instance);
      }
    }
    res.lastParen=parsub;
  }
  if (!(matchType == TEST)) {
    obj.put("index",obj,Integer.valueOf(start + gData.skipped));
    obj.put("input",obj,str);
  }
  if (res.lastMatch == null) {
    res.lastMatch=new SubString();
    res.leftContext=new SubString();
    res.rightContext=new SubString();
  }
  res.lastMatch.charArray=charArray;
  res.lastMatch.index=index;
  res.lastMatch.length=matchlen;
  res.leftContext.charArray=charArray;
  if (cx.getLanguageVersion() == Context.VERSION_1_2) {
    res.leftContext.index=start;
    res.leftContext.length=gData.skipped;
  }
 else {
    res.leftContext.index=0;
    res.leftContext.length=start + gData.skipped;
  }
  res.rightContext.charArray=charArray;
  res.rightContext.index=ep;
  res.rightContext.length=end - ep;
  return result;
}
