{
  for (  Collapse collapse : collapses) {
    Node var=new Node(Token.VAR);
    var.useSourceInfoIfMissingFrom(collapse.startNode);
    collapse.parent.addChildBefore(var,collapse.startNode);
    boolean redeclaration=false;
    for (Node n=collapse.startNode; n != collapse.endNode; ) {
      Node next=n.getNext();
      Preconditions.checkState(var.getNext() == n);
      collapse.parent.removeChild(var.getNext());
      if (n.isVar()) {
        while (n.hasChildren()) {
          var.addChildToBack(n.removeFirstChild());
        }
      }
 else {
        Node assign=n.getFirstChild();
        Node lhs=assign.getFirstChild();
        Preconditions.checkState(lhs.isName());
        Node rhs=assign.getLastChild();
        lhs.addChildToBack(rhs.detachFromParent());
        var.addChildToBack(lhs.detachFromParent());
        redeclaration=true;
      }
      n=next;
    }
    if (redeclaration) {
      JSDocInfoBuilder builder=new JSDocInfoBuilder(false);
      builder.recordSuppressions(ImmutableSet.of("duplicate"));
      JSDocInfo info=builder.build();
      var.setJSDocInfo(info);
    }
  }
}
