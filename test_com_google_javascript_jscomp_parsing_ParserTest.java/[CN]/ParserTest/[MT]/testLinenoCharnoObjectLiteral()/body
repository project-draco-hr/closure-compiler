{
  Node n=parse("\n\n var a = {a:0\n,b :1};").getFirstFirstChild().getFirstChild();
  assertNode(n).hasType(Token.OBJECTLIT);
  assertNode(n).hasLineno(3);
  assertNode(n).hasCharno(9);
  Node key=n.getFirstChild();
  assertNode(key).hasType(Token.STRING_KEY);
  assertNode(key).hasLineno(3);
  assertNode(key).hasCharno(10);
  Node value=key.getFirstChild();
  assertNode(value).hasType(Token.NUMBER);
  assertNode(value).hasLineno(3);
  assertNode(value).hasCharno(12);
  key=key.getNext();
  assertNode(key).hasType(Token.STRING_KEY);
  assertNode(key).hasLineno(4);
  assertNode(key).hasCharno(1);
  value=key.getFirstChild();
  assertNode(value).hasType(Token.NUMBER);
  assertNode(value).hasLineno(4);
  assertNode(value).hasCharno(4);
}
