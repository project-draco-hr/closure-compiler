{
  mode=LanguageMode.ECMASCRIPT6;
  expectFeatures(Feature.DESTRUCTURING);
  parseError("var {x: y};","destructuring must have an initializer");
  expectFeatures(Feature.DESTRUCTURING,Feature.LET_DECLARATIONS);
  parseError("let {x: y};","destructuring must have an initializer");
  expectFeatures(Feature.DESTRUCTURING,Feature.CONST_DECLARATIONS);
  parseError("const {x: y};","const variables must have an initializer");
  expectFeatures(Feature.DESTRUCTURING);
  parseError("var {x};","destructuring must have an initializer");
  expectFeatures(Feature.DESTRUCTURING,Feature.LET_DECLARATIONS);
  parseError("let {x};","destructuring must have an initializer");
  expectFeatures(Feature.DESTRUCTURING,Feature.CONST_DECLARATIONS);
  parseError("const {x};","const variables must have an initializer");
  expectFeatures(Feature.DESTRUCTURING);
  parseError("var [x, y];","destructuring must have an initializer");
  expectFeatures(Feature.DESTRUCTURING,Feature.LET_DECLARATIONS);
  parseError("let [x, y];","destructuring must have an initializer");
  expectFeatures(Feature.DESTRUCTURING,Feature.CONST_DECLARATIONS);
  parseError("const [x, y];","const variables must have an initializer");
}
