{
  if (info != null) {
    ImmutableList.Builder<TemplateType> builder=ImmutableList.builder();
    ImmutableList<String> infoTemplateTypeNames=info.getTemplateTypeNames();
    ImmutableMap<String,Node> infoTypeTransformations=info.getTypeTransformations();
    if (!infoTemplateTypeNames.isEmpty()) {
      for (      String key : infoTemplateTypeNames) {
        if (typeRegistry.isIObjectValueKey(fnName,key)) {
          builder.add(typeRegistry.getIObjectValueKey());
        }
 else {
          builder.add(typeRegistry.createTemplateType(key));
        }
      }
    }
    if (!infoTypeTransformations.isEmpty()) {
      for (      Entry<String,Node> entry : infoTypeTransformations.entrySet()) {
        builder.add(typeRegistry.createTemplateTypeWithTransformation(entry.getKey(),entry.getValue()));
      }
    }
    if (!infoTemplateTypeNames.isEmpty() || !infoTypeTransformations.isEmpty()) {
      templateTypeNames=builder.build();
    }
  }
  ImmutableList<TemplateType> keys=templateTypeNames;
  if (ownerType != null) {
    ImmutableList<TemplateType> ownerTypeKeys=ownerType.getTemplateTypeMap().getTemplateKeys();
    if (!ownerTypeKeys.isEmpty()) {
      ImmutableList.Builder<TemplateType> builder=ImmutableList.builder();
      builder.addAll(templateTypeNames);
      builder.addAll(ownerTypeKeys);
      keys=builder.build();
    }
  }
  if (!keys.isEmpty()) {
    typeRegistry.setTemplateTypeNames(keys);
  }
  return this;
}
