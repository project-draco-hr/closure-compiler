{
  if (returnType == null) {
    if (!contents.mayHaveNonEmptyReturns() && !contents.mayHaveSingleThrow() && !contents.mayBeFromExterns()) {
      returnType=typeRegistry.getNativeType(VOID_TYPE);
      returnTypeInferred=true;
    }
  }
  if (returnType == null) {
    returnType=typeRegistry.getNativeType(UNKNOWN_TYPE);
  }
  if (parametersNode == null) {
    throw new IllegalStateException("All Function types must have params and a return type");
  }
  FunctionType fnType;
  if (isConstructor) {
    fnType=getOrCreateConstructor();
  }
 else   if (isInterface) {
    fnType=typeRegistry.createInterfaceType(fnName,contents.getSourceNode(),classTemplateTypeNames);
    if (getScopeDeclaredIn().isGlobal() && !fnName.isEmpty()) {
      typeRegistry.declareType(fnName,fnType.getInstanceType());
    }
    maybeSetBaseType(fnType);
  }
 else {
    fnType=new FunctionBuilder(typeRegistry).withName(fnName).withSourceNode(contents.getSourceNode()).withParamsNode(parametersNode).withReturnType(returnType,returnTypeInferred).withTypeOfThis(thisType).withTemplateKeys(templateTypeNames).build();
    maybeSetBaseType(fnType);
  }
  if (implementedInterfaces != null) {
    fnType.setImplementedInterfaces(implementedInterfaces);
  }
  if (extendedInterfaces != null) {
    fnType.setExtendedInterfaces(extendedInterfaces);
  }
  typeRegistry.clearTemplateTypeNames();
  return fnType;
}
