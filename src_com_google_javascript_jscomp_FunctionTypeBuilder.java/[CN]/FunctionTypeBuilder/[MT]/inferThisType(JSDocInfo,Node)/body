{
  ObjectType maybeThisType=null;
  if (info != null && info.hasThisType()) {
    maybeThisType=ObjectType.cast(info.getThisType().evaluate(scope,typeRegistry));
  }
  if (maybeThisType != null) {
    thisType=maybeThisType;
    thisType.setValidator(new ThisTypeValidator());
  }
 else   if (owner != null && (info == null || !info.hasType())) {
    String ownerTypeName=owner.getQualifiedName();
    Var ownerVar=scope.getVar(ownerTypeName);
    JSType ownerType=ownerVar == null ? null : ownerVar.getType();
    FunctionType ownerFnType=ownerType instanceof FunctionType ? (FunctionType)ownerType : null;
    ObjectType instType=ownerFnType == null || ownerFnType.isOrdinaryFunction() ? null : ownerFnType.getInstanceType();
    if (instType != null) {
      thisType=instType;
    }
  }
  return this;
}
