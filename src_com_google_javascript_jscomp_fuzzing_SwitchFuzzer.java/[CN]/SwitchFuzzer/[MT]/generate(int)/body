{
  int numCases=budget > 2 ? random.nextInt(budget - 2) : 0;
  AbstractFuzzer[] fuzzers=new AbstractFuzzer[numCases + 1];
  CaseFuzzer caseFuzzer=new CaseFuzzer(random,scopeManager,config,snGenerator,Token.CASE);
  Arrays.fill(fuzzers,caseFuzzer);
  fuzzers[0]=new ExpressionFuzzer(random,scopeManager,config,snGenerator);
  if (numCases > 0) {
    int defaultClauseIndex=random.nextInt(numCases);
    fuzzers[defaultClauseIndex + 1]=new CaseFuzzer(random,scopeManager,config,snGenerator,Token.DEFAULT);
  }
  Scope localScope=scopeManager.localScope();
  localScope.switchNesting++;
  Node[] components=distribute(budget - 1,fuzzers);
  localScope.switchNesting--;
  return new Node(Token.SWITCH,components);
}
