{
  Node parametersList=scope.getRootNode().getFirstChild().getNext();
  Preconditions.checkState(parametersList.isParamList());
  boolean changed=false;
  int numNamedParameter=parametersList.getChildCount();
  int highestIndex=numNamedParameter - 1;
  for (  Node ref : currentArgumentsAccess) {
    Node getElem=ref.getParent();
    if (!getElem.isGetElem() || ref != getElem.getFirstChild()) {
      return false;
    }
    Node index=ref.getNext();
    if (!index.isNumber()) {
      return false;
    }
    Node getElemParent=getElem.getParent();
    if (getElemParent.isCall() && getElemParent.getFirstChild() == getElem) {
      return false;
    }
    int value=(int)index.getDouble();
    if (value > highestIndex) {
      highestIndex=value;
    }
  }
  int numExtraArgs=highestIndex - numNamedParameter + 1;
  String[] argNames=new String[numExtraArgs];
  for (int i=0; i < numExtraArgs; i++) {
    String name=getNewName();
    argNames[i]=name;
    parametersList.addChildToBack(IR.name(name).useSourceInfoIfMissingFrom(parametersList));
    changed=true;
  }
  for (  Node ref : currentArgumentsAccess) {
    Node index=ref.getNext();
    if (!index.isNumber()) {
      continue;
    }
    int value=(int)index.getDouble();
    if (value >= numNamedParameter) {
      ref.getParent().getParent().replaceChild(ref.getParent(),IR.name(argNames[value - numNamedParameter]));
    }
 else {
      Node name=parametersList.getFirstChild();
      for (int i=0; i < value; i++) {
        name=name.getNext();
      }
      ref.getParent().getParent().replaceChild(ref.getParent(),IR.name(name.getString()));
    }
    changed=true;
  }
  return changed;
}
