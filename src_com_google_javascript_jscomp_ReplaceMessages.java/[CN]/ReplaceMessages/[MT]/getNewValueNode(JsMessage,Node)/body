{
switch (origValueNode.getType()) {
case FUNCTION:
    updateFunctionNode(message,origValueNode);
  return origValueNode;
case STRING:
String newString=message.toString();
if (!origValueNode.getString().equals(newString)) {
origValueNode.setString(newString);
compiler.reportCodeChange();
}
return origValueNode;
case ADD:
return IR.string(message.toString());
case CALL:
return replaceCallNode(message,origValueNode);
default :
throw new MalformedException("Expected FUNCTION, STRING, or ADD node; found: " + origValueNode.getType(),origValueNode);
}
}
